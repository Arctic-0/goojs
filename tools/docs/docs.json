[
  {
    "id": "<anonymous>~AmmoComponent()",
    "longname": "<anonymous>~AmmoComponent",
    "name": "AmmoComponent",
    "kind": "constructor",
    "description": "Adds Ammo physics to a Goo entity. Ammo is a powerful physics engine converted from the C language project Bullet. Use Ammo.js if you need to support any 3D shape (trimesh). Also see {@link AmmoSystem}.",
    "memberof": "<anonymous>~AmmoComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "The settings object can contain the following properties:",
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "(0 means immovable)",
        "name": "settings.mass"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "use the model bounds or use the real (must-be-convex) vertices",
        "name": "settings.useBounds"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "use the model world bounds or use the real (must-be-convex) vertices (this setting is experimental)",
        "name": "settings.useWorldBounds"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "use the model world transform instead of local (this setting is experimental)",
        "name": "settings.useWorldTransform"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "show the model world bounding box (this setting is experimental)",
        "name": "settings.showBounds"
      }
    ],
    "examples": [
      "var entity = world.createEntity(new Box(20, 10, 1));\nentity.setComponent(new AmmoComponent({ mass: 5 }));"
    ],
    "order": 1
  },
  {
    "id": "<anonymous>~AmmoSystem()",
    "longname": "<anonymous>~AmmoSystem",
    "name": "AmmoSystem",
    "kind": "constructor",
    "description": "Handles integration with Ammo.js. Depends on the global Ammo object, so load ammo.small.js using a script tag before using this system. Direct access to the ammoWorld is available like this: myAmmoSystem.ammoWorld. See also {@link AmmoComponent}",
    "memberof": "<anonymous>~AmmoSystem",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "The settings object can contain the following properties:",
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "(defaults to -9.81)",
        "name": "settings.gravity"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "(defaults to 5)",
        "name": "settings.maxSubSteps"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "(defaults to 60)",
        "name": "settings.stepFrequency"
      }
    ],
    "examples": [
      "var ammoSystem = new AmmoSystem({stepFrequency: 60});\ngoo.world.setSystem(ammoSystem);"
    ],
    "order": 3
  },
  {
    "id": "<anonymous>~Box2DComponent()",
    "longname": "<anonymous>~Box2DComponent",
    "name": "Box2DComponent",
    "kind": "constructor",
    "description": "Box2DComponent.",
    "memberof": "<anonymous>~Box2DComponent",
    "params": [],
    "order": 5
  },
  {
    "id": "<anonymous>~Box2DSystem()",
    "longname": "<anonymous>~Box2DSystem",
    "name": "Box2DSystem",
    "kind": "constructor",
    "description": "Physics simulation using Box2D. Depends on the global Box2D object. Load box2d.js using a &lt;script&gt; tag before using this system",
    "memberof": "<anonymous>~Box2DSystem",
    "params": [],
    "order": 7
  },
  {
    "id": "<anonymous>~CannonBoxColliderComponent()",
    "longname": "<anonymous>~CannonBoxColliderComponent",
    "name": "CannonBoxColliderComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~CannonBoxColliderComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "The half-extents of the box collider.",
        "name": "settings.halfExtents"
      }
    ],
    "order": 9
  },
  {
    "id": "<anonymous>~CannonCylinderColliderComponent()",
    "longname": "<anonymous>~CannonCylinderColliderComponent",
    "name": "CannonCylinderColliderComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~CannonCylinderColliderComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.5,
        "name": "settings.radiusTop"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.5,
        "name": "settings.radiusBottom"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.5,
        "name": "settings.height"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 10,
        "name": "settings.numSegments"
      }
    ],
    "order": 11
  },
  {
    "id": "<anonymous>~CannonDistanceJointComponent()",
    "longname": "<anonymous>~CannonDistanceJointComponent",
    "name": "CannonDistanceJointComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~CannonDistanceJointComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "settings.distance"
      },
      {
        "type": {
          "names": [
            "CannonRigidbodyComponent"
          ]
        },
        "name": "settings.connectedBody"
      }
    ],
    "order": 13
  },
  {
    "id": "<anonymous>~CannonPlaneColliderComponent()",
    "longname": "<anonymous>~CannonPlaneColliderComponent",
    "name": "CannonPlaneColliderComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~CannonPlaneColliderComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      }
    ],
    "order": 15
  },
  {
    "id": "<anonymous>~CannonRigidbodyComponent()",
    "longname": "<anonymous>~CannonRigidbodyComponent",
    "name": "CannonRigidbodyComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~CannonRigidbodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "settings.mass"
      }
    ],
    "examples": [
      "world.setSystem(new CannonSystem());\nvar entity = world.createEntity();\nvar rigidBodyComponent = new CannonRigidBodyComponent({\n  mass: 1\n});\nentity.setComponent(rigidBodyComponent);\nvar boxColliderComponent = new CannonBoxColliderComponent({\n  halfExtents: new Vector3(1, 1, 1)\n});\nentity.setComponent(boxColliderComponent);"
    ],
    "order": 17
  },
  {
    "id": "<anonymous>~CannonSphereColliderComponent()",
    "longname": "<anonymous>~CannonSphereColliderComponent",
    "name": "CannonSphereColliderComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~CannonSphereColliderComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.5,
        "name": "settings.radius"
      }
    ],
    "order": 24
  },
  {
    "id": "<anonymous>~CannonSystem()",
    "longname": "<anonymous>~CannonSystem",
    "name": "CannonSystem",
    "kind": "constructor",
    "memberof": "<anonymous>~CannonSystem",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 60,
        "name": "settings.stepFrequency"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "The gravity to use in the scene. Default is (0, -10, 0)",
        "name": "settings.gravity"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'naive'",
        "description": "One of: 'naive' (NaiveBroadphase), 'sap' (SAPBroadphase)",
        "name": "settings.broadphase"
      }
    ],
    "examples": [
      "var cannonSystem = new CannonSystem({\n    stepFrequency: 60,\n    gravity: new Vector3(0, -10, 0)\n});\ngoo.world.setSystem(cannonSystem);"
    ],
    "order": 26
  },
  {
    "id": "<anonymous>~CannonTerrainColliderComponent()",
    "longname": "<anonymous>~CannonTerrainColliderComponent",
    "name": "CannonTerrainColliderComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~CannonTerrainColliderComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings.data"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings.shapeOptions"
      }
    ],
    "order": 29
  },
  {
    "id": "<anonymous>~GamepadComponent()",
    "longname": "<anonymous>~GamepadComponent",
    "name": "GamepadComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~GamepadComponent",
    "params": [
      {
        "name": "gamepadIndex"
      }
    ],
    "order": 31
  },
  {
    "id": "<anonymous>~GamepadData()",
    "longname": "<anonymous>~GamepadData",
    "name": "GamepadData",
    "kind": "constructor",
    "description": "Used for storing derived data from gamepads",
    "memberof": "<anonymous>~GamepadData",
    "params": [],
    "order": 33
  },
  {
    "id": "<anonymous>~GamepadSystem()",
    "longname": "<anonymous>~GamepadSystem",
    "name": "GamepadSystem",
    "kind": "constructor",
    "description": "System for gamepads",
    "memberof": "<anonymous>~GamepadSystem",
    "params": [],
    "order": 36
  },
  {
    "id": "<anonymous>~LineRenderer()",
    "longname": "<anonymous>~LineRenderer",
    "name": "LineRenderer",
    "kind": "constructor",
    "memberof": "<anonymous>~LineRenderer",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The world lines are rendered in.",
        "name": "world"
      }
    ],
    "order": 38
  },
  {
    "id": "<anonymous>~LineRenderSystem()",
    "longname": "<anonymous>~LineRenderSystem",
    "name": "LineRenderSystem",
    "kind": "constructor",
    "memberof": "<anonymous>~LineRenderSystem",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "the world this system exists in.",
        "name": "world"
      }
    ],
    "order": 45
  },
  {
    "id": "<anonymous>~P2Component()",
    "longname": "<anonymous>~P2Component",
    "name": "P2Component",
    "kind": "constructor",
    "memberof": "<anonymous>~P2Component",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "The options object can contain the following properties:",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "Mass of the body. 0 means immovable.",
        "name": "options.mass"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "Movement damping.",
        "name": "options.linearDamping"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "Rotational damping.",
        "name": "options.angularDamping"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "defaultvalue": "[]",
        "description": "Collision shapes.",
        "name": "options.shapes"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Scale to apply from physics to rendering.",
        "name": "options.scale"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "Offset from physics to rendering.",
        "name": "options.offsetX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "name": "options.offsetY"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "name": "options.offsetZ"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "Angular offset from physics to rendering.",
        "name": "options.offsetAngleX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "name": "options.offsetAngleY"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "name": "options.offsetAngleZ"
      }
    ],
    "examples": [
      "var entity = goo.world.createEntity(new Box());\nvar p2comp = new P2Component({\n    shapes:[{\n        type: 'circle',\n        radius: 1\n    }],\n});\nentity.setComponent(p2comp);"
    ],
    "order": 52
  },
  {
    "id": "<anonymous>~P2System()",
    "longname": "<anonymous>~P2System",
    "name": "P2System",
    "kind": "constructor",
    "description": "Handles integration with p2.js. Depends on the global p2 object, so load p2.js using a script tag before using this system. See also {@link P2Component}.",
    "memberof": "<anonymous>~P2System",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 60,
        "name": "settings.stepFrequency"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "optional": true,
        "defaultvalue": "[0,-9.82]",
        "name": "settings.gravity"
      }
    ],
    "examples": [
      "var p2System = new P2System({\n    stepFrequency: 60,\n    gravity: [0, -10]\n});\ngoo.world.setSystem(p2System);"
    ],
    "order": 54
  },
  {
    "id": "<anonymous>~ParticleSystemComponent()",
    "longname": "<anonymous>~ParticleSystemComponent",
    "name": "ParticleSystemComponent",
    "kind": "constructor",
    "description": "A Particle System component simulates things like clouds and flames by generating and animating large numbers of small 2D images in the scene.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "options.billboard"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "options.depthTest"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "options.depthWrite"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "options.loop"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "options.paused"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "options.preWarm"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "options.randomDirection"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "options.sphereEmitFromShell"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.colorOverLifetime"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.localVelocityOverLifetime"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.rotationSpeedOverLifetime"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.sizeOverLifetime"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.startAngle"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.startColor"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.startLifetime"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.startSize"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.startSpeed"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.textureFrameOverLifetime"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.worldVelocityOverLifetime"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": "'NoBlending'",
        "name": "options.blending"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Default is pi/8",
        "name": "options.coneAngle"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "options.coneLength"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "options.coneRadius"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "name": "options.discardThreshold"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 5,
        "name": "options.duration"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "options.localSpace"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 100,
        "name": "options.maxParticles"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 3010,
        "name": "options.renderQueue"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "options.rotationSpeedScale"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": -1,
        "name": "options.seed"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "options.startAngleScale"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "options.startSizeScale"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "name": "options.texture"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "options.textureAnimationCycles"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "options.textureTilesX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "options.textureTilesY"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "name": "options.time"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'base'",
        "name": "options.coneEmitFrom"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'cone'",
        "name": "options.shapeType"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "Default is new Vector3(1,1,1)",
        "name": "options.boxExtents"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "Default is zero",
        "name": "options.gravity"
      },
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "optional": true,
        "description": "Default is new Vector4(1,1,1,1)",
        "name": "options.startColorScale"
      }
    ],
    "examples": [
      "var particleComponent = new ParticleSystemComponent({\n    loop: true,\n    preWarm: true,\n    shapeType: 'sphere',\n    sphereRadius: 0.5\n});\nvar entity = world.createEntity([0, 0, 0], particleComponent).addToWorld();"
    ],
    "order": 56
  },
  {
    "id": "<anonymous>~ConstantCurve()",
    "longname": "<anonymous>~ConstantCurve",
    "name": "ConstantCurve",
    "kind": "constructor",
    "memberof": "<anonymous>~ConstantCurve",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "options.value"
      }
    ],
    "order": 128
  },
  {
    "id": "<anonymous>~Curve()",
    "longname": "<anonymous>~Curve",
    "name": "Curve",
    "kind": "constructor",
    "memberof": "<anonymous>~Curve",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "options.type"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "name": "options.timeOffset"
      }
    ],
    "order": 131
  },
  {
    "id": "<anonymous>~LerpCurve()",
    "longname": "<anonymous>~LerpCurve",
    "name": "LerpCurve",
    "kind": "constructor",
    "memberof": "<anonymous>~LerpCurve",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.curveA"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.curveB"
      }
    ],
    "order": 142
  },
  {
    "id": "<anonymous>~LinearCurve()",
    "longname": "<anonymous>~LinearCurve",
    "name": "LinearCurve",
    "kind": "constructor",
    "memberof": "<anonymous>~LinearCurve",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "name": "options.k"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "name": "options.m"
      }
    ],
    "order": 146
  },
  {
    "id": "<anonymous>~PolyCurve()",
    "longname": "<anonymous>~PolyCurve",
    "name": "PolyCurve",
    "kind": "constructor",
    "memberof": "<anonymous>~PolyCurve",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "Array.<Curve>"
          ]
        },
        "optional": true,
        "name": "options.segments"
      }
    ],
    "order": 151
  },
  {
    "id": "<anonymous>~Vector3Curve()",
    "longname": "<anonymous>~Vector3Curve",
    "name": "Vector3Curve",
    "kind": "constructor",
    "memberof": "<anonymous>~Vector3Curve",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.x"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.y"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.z"
      }
    ],
    "order": 161
  },
  {
    "id": "<anonymous>~Vector4Curve()",
    "longname": "<anonymous>~Vector4Curve",
    "name": "Vector4Curve",
    "kind": "constructor",
    "memberof": "<anonymous>~Vector4Curve",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.x"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.y"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.z"
      },
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "optional": true,
        "name": "options.w"
      }
    ],
    "order": 163
  },
  {
    "id": "<anonymous>~ParticleSystemComponentHandler()",
    "longname": "<anonymous>~ParticleSystemComponentHandler",
    "name": "ParticleSystemComponentHandler",
    "kind": "constructor",
    "description": "Handler for ParticleSystemComponents",
    "memberof": "<anonymous>~ParticleSystemComponentHandler",
    "params": [],
    "order": 165
  },
  {
    "id": "<anonymous>~ParticleData()",
    "longname": "<anonymous>~ParticleData",
    "name": "ParticleData",
    "kind": "constructor",
    "memberof": "<anonymous>~ParticleData",
    "params": [
      {
        "type": {
          "names": [
            "ParticleSystemComponent"
          ]
        },
        "name": "particleComponent"
      }
    ],
    "order": 171
  },
  {
    "id": "<anonymous>~ParticleDebugRenderSystem()",
    "longname": "<anonymous>~ParticleDebugRenderSystem",
    "name": "ParticleDebugRenderSystem",
    "kind": "constructor",
    "description": "Renders all ParticleSystemComponents in the scene.",
    "memberof": "<anonymous>~ParticleDebugRenderSystem",
    "params": [],
    "order": 186
  },
  {
    "id": "<anonymous>~ParticleSystemSystem()",
    "longname": "<anonymous>~ParticleSystemSystem",
    "name": "ParticleSystemSystem",
    "kind": "constructor",
    "description": "System that runs all the ParticleSystemComponents.",
    "memberof": "<anonymous>~ParticleSystemSystem",
    "params": [],
    "order": 194
  },
  {
    "id": "<anonymous>~BoxCollider()",
    "longname": "<anonymous>~BoxCollider",
    "name": "BoxCollider",
    "kind": "constructor",
    "memberof": "<anonymous>~BoxCollider",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "The half-extents of the box collider.",
        "name": "settings.halfExtents"
      }
    ],
    "order": 203
  },
  {
    "id": "<anonymous>~Collider()",
    "longname": "<anonymous>~Collider",
    "name": "Collider",
    "kind": "constructor",
    "description": "Base class for Colliders.",
    "memberof": "<anonymous>~Collider",
    "params": [],
    "order": 208
  },
  {
    "id": "<anonymous>~CylinderCollider()",
    "longname": "<anonymous>~CylinderCollider",
    "name": "CylinderCollider",
    "kind": "constructor",
    "memberof": "<anonymous>~CylinderCollider",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.5,
        "name": "settings.radius"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "settings.height"
      }
    ],
    "order": 212
  },
  {
    "id": "<anonymous>~MeshCollider()",
    "longname": "<anonymous>~MeshCollider",
    "name": "MeshCollider",
    "kind": "constructor",
    "memberof": "<anonymous>~MeshCollider",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "optional": true,
        "name": "settings.meshData"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "name": "settings.scale"
      }
    ],
    "order": 218
  },
  {
    "id": "<anonymous>~PlaneCollider()",
    "longname": "<anonymous>~PlaneCollider",
    "name": "PlaneCollider",
    "kind": "constructor",
    "description": "Plane collider, that faces in the Z direction.",
    "memberof": "<anonymous>~PlaneCollider",
    "params": [],
    "order": 224
  },
  {
    "id": "<anonymous>~SphereCollider()",
    "longname": "<anonymous>~SphereCollider",
    "name": "SphereCollider",
    "kind": "constructor",
    "memberof": "<anonymous>~SphereCollider",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.5,
        "name": "settings.radius"
      }
    ],
    "order": 228
  },
  {
    "id": "<anonymous>~AbstractColliderComponent()",
    "longname": "<anonymous>~AbstractColliderComponent",
    "name": "AbstractColliderComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~AbstractColliderComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Collider"
          ]
        },
        "optional": true,
        "name": "settings.collider"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "settings.isTrigger"
      }
    ],
    "order": 233
  },
  {
    "id": "<anonymous>~AbstractRigidBodyComponent()",
    "longname": "<anonymous>~AbstractRigidBodyComponent",
    "name": "AbstractRigidBodyComponent",
    "kind": "constructor",
    "description": "Base class for rigid bodies.",
    "memberof": "<anonymous>~AbstractRigidBodyComponent",
    "params": [],
    "order": 246
  },
  {
    "id": "<anonymous>~ColliderComponent()",
    "longname": "<anonymous>~ColliderComponent",
    "name": "ColliderComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~ColliderComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Collider"
          ]
        },
        "optional": true,
        "name": "settings.collider"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "settings.isTrigger"
      }
    ],
    "order": 259
  },
  {
    "id": "<anonymous>~RigidBodyComponent()",
    "longname": "<anonymous>~RigidBodyComponent",
    "name": "RigidBodyComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "settings.mass"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "settings.isKinematic"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "name": "settings.velocity"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "name": "settings.angularVelocity"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.01,
        "name": "settings.linearDamping"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.05,
        "name": "settings.angularDamping"
      }
    ],
    "order": 267
  },
  {
    "id": "<anonymous>~ColliderComponentHandler()",
    "longname": "<anonymous>~ColliderComponentHandler",
    "name": "ColliderComponentHandler",
    "kind": "constructor",
    "description": "For handling loading of collider components",
    "memberof": "<anonymous>~ColliderComponentHandler",
    "params": [],
    "order": 327
  },
  {
    "id": "<anonymous>~RigidBodyComponentHandler()",
    "longname": "<anonymous>~RigidBodyComponentHandler",
    "name": "RigidBodyComponentHandler",
    "kind": "constructor",
    "description": "For handling loading of rigid body components",
    "memberof": "<anonymous>~RigidBodyComponentHandler",
    "params": [],
    "order": 333
  },
  {
    "id": "<anonymous>~BallJoint()",
    "longname": "<anonymous>~BallJoint",
    "name": "BallJoint",
    "kind": "constructor",
    "memberof": "<anonymous>~BallJoint",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "name": "settings.localPivot"
      },
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "optional": true,
        "name": "settings.connectedEntity"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "settings.collideConnected"
      }
    ],
    "order": 339
  },
  {
    "id": "<anonymous>~HingeJoint()",
    "longname": "<anonymous>~HingeJoint",
    "name": "HingeJoint",
    "kind": "constructor",
    "memberof": "<anonymous>~HingeJoint",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "name": "settings.localPivot"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "name": "settings.localAxis"
      },
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "optional": true,
        "name": "settings.connectedEntity"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "settings.collideConnected"
      }
    ],
    "order": 344
  },
  {
    "id": "<anonymous>~PhysicsJoint()",
    "longname": "<anonymous>~PhysicsJoint",
    "name": "PhysicsJoint",
    "kind": "constructor",
    "memberof": "<anonymous>~PhysicsJoint",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "optional": true,
        "name": "settings.connectedEntity"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "settings.collideConnected"
      }
    ],
    "order": 350
  },
  {
    "id": "<anonymous>~PhysicsMaterial()",
    "longname": "<anonymous>~PhysicsMaterial",
    "name": "PhysicsMaterial",
    "kind": "constructor",
    "memberof": "<anonymous>~PhysicsMaterial",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.3,
        "name": "settings.friction"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "name": "settings.restitution"
      }
    ],
    "order": 354
  },
  {
    "id": "<anonymous>~RaycastResult()",
    "longname": "<anonymous>~RaycastResult",
    "name": "RaycastResult",
    "kind": "constructor",
    "memberof": "<anonymous>~RaycastResult",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "name": "settings.normal"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "name": "settings.point"
      },
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "optional": true,
        "name": "settings.entity"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "name": "settings.distance"
      }
    ],
    "order": 358
  },
  {
    "id": "<anonymous>~PhysicsBoxDebugShape()",
    "longname": "<anonymous>~PhysicsBoxDebugShape",
    "name": "PhysicsBoxDebugShape",
    "kind": "constructor",
    "description": "A wireframe mesh indicating the position and orientation of a BoxCollider.",
    "memberof": "<anonymous>~PhysicsBoxDebugShape",
    "params": [],
    "order": 364
  },
  {
    "id": "<anonymous>~PhysicsCylinderDebugShape()",
    "longname": "<anonymous>~PhysicsCylinderDebugShape",
    "name": "PhysicsCylinderDebugShape",
    "kind": "constructor",
    "memberof": "<anonymous>~PhysicsCylinderDebugShape",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 32,
        "name": "numSegments"
      }
    ],
    "order": 368
  },
  {
    "id": "<anonymous>~PhysicsPlaneDebugShape()",
    "longname": "<anonymous>~PhysicsPlaneDebugShape",
    "name": "PhysicsPlaneDebugShape",
    "kind": "constructor",
    "description": "A wireframe mesh indicating the position and orientation of a PlaneCollider.",
    "memberof": "<anonymous>~PhysicsPlaneDebugShape",
    "params": [],
    "order": 372
  },
  {
    "id": "<anonymous>~PhysicsSphereDebugShape()",
    "longname": "<anonymous>~PhysicsSphereDebugShape",
    "name": "PhysicsSphereDebugShape",
    "kind": "constructor",
    "memberof": "<anonymous>~PhysicsSphereDebugShape",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 32,
        "name": "numSegments"
      }
    ],
    "order": 376
  },
  {
    "id": "<anonymous>~AbstractPhysicsSystem()",
    "longname": "<anonymous>~AbstractPhysicsSystem",
    "name": "AbstractPhysicsSystem",
    "kind": "constructor",
    "description": "Base class for physics systems.",
    "memberof": "<anonymous>~AbstractPhysicsSystem",
    "params": [],
    "order": 380
  },
  {
    "id": "<anonymous>~ColliderSystem()",
    "longname": "<anonymous>~ColliderSystem",
    "name": "ColliderSystem",
    "kind": "constructor",
    "description": "Processes all entities with collider components, making sure they are up to date.",
    "memberof": "<anonymous>~ColliderSystem",
    "params": [],
    "order": 391
  },
  {
    "id": "<anonymous>~PhysicsDebugRenderSystem()",
    "longname": "<anonymous>~PhysicsDebugRenderSystem",
    "name": "PhysicsDebugRenderSystem",
    "kind": "constructor",
    "description": "Renders all ColliderComponents in the scene.",
    "memberof": "<anonymous>~PhysicsDebugRenderSystem",
    "params": [],
    "examples": [
      "world.setSystem(new PhysicsDebugRenderSystem());"
    ],
    "order": 397
  },
  {
    "id": "<anonymous>~PhysicsSystem()",
    "longname": "<anonymous>~PhysicsSystem",
    "name": "PhysicsSystem",
    "kind": "constructor",
    "memberof": "<anonymous>~PhysicsSystem",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "name": "settings.gravity"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 60,
        "name": "settings.stepFrequency"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 10,
        "name": "settings.maxSubSteps"
      }
    ],
    "order": 407
  },
  {
    "id": "<anonymous>~Pool()",
    "longname": "<anonymous>~Pool",
    "name": "Pool",
    "kind": "constructor",
    "memberof": "<anonymous>~Pool",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "name": "settings.init"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "name": "settings.create"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "name": "settings.destroy"
      }
    ],
    "examples": [
      "var vectorPool = new Pool({\n    create: function () {\n        return new Vector3();\n    },\n    init: function (x, y, z){\n        this.set(x, y, z);\n    },\n    destroy: function (vector) {\n        vector.set(0, 0, 0);\n    }\n});\nvar vector = vectorPool.get(1, 2, 3);\nvectorPool.release(vector);"
    ],
    "order": 426
  },
  {
    "id": "<anonymous>~SoundManager2Component()",
    "longname": "<anonymous>~SoundManager2Component",
    "name": "SoundManager2Component",
    "kind": "constructor",
    "description": "SoundManager 2 component.",
    "memberof": "<anonymous>~SoundManager2Component",
    "params": [],
    "order": 435
  },
  {
    "id": "<anonymous>~SoundManager2System()",
    "longname": "<anonymous>~SoundManager2System",
    "name": "SoundManager2System",
    "kind": "constructor",
    "description": "Depends on the global soundManager object.\nLoad soundmanager2 with a script tag before using this system.",
    "memberof": "<anonymous>~SoundManager2System",
    "params": [],
    "order": 437
  },
  {
    "id": "<anonymous>~Terrain()",
    "longname": "<anonymous>~Terrain",
    "name": "Terrain",
    "kind": "constructor",
    "description": "A terrain.",
    "memberof": "<anonymous>~Terrain",
    "params": [],
    "order": 439
  },
  {
    "id": "<anonymous>~TerrainSurface()",
    "longname": "<anonymous>~TerrainSurface",
    "name": "TerrainSurface",
    "kind": "constructor",
    "description": "A grid-like surface shape",
    "memberof": "<anonymous>~TerrainSurface",
    "params": [
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "The height data by x and z axis.",
        "name": "heightMatrix"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "x axis size in units",
        "name": "xWidth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "y axis size in units",
        "name": "yHeight"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "z axis size in units",
        "name": "zWidth"
      }
    ],
    "order": 441
  },
  {
    "id": "<anonymous>~FlatWaterRenderer()",
    "longname": "<anonymous>~FlatWaterRenderer",
    "name": "FlatWaterRenderer",
    "kind": "constructor",
    "memberof": "<anonymous>~FlatWaterRenderer",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "Water settings passed in a JSON object",
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Render refraction in water",
        "name": "settings.useRefraction"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": 2,
        "description": "Resolution divider for reflection/refraction",
        "name": "settings.divider"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Url to texture to use as normalmap",
        "name": "settings.normalsUrl"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Texture instance to use as normalmap",
        "name": "settings.normalsTexture"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Use water entity y for water plane position",
        "name": "settings.updateWaterPlaneFromEntity"
      }
    ],
    "order": 444
  },
  {
    "id": "<anonymous>~ProjectedGrid()",
    "longname": "<anonymous>~ProjectedGrid",
    "name": "ProjectedGrid",
    "kind": "constructor",
    "memberof": "<anonymous>~ProjectedGrid",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 20,
        "description": "Density in X of grid",
        "name": "densityX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 20,
        "description": "Density in Y of grid",
        "name": "densityY"
      }
    ],
    "order": 446
  },
  {
    "id": "<anonymous>~ProjectedGridWaterRenderer()",
    "longname": "<anonymous>~ProjectedGridWaterRenderer",
    "name": "ProjectedGridWaterRenderer",
    "kind": "constructor",
    "memberof": "<anonymous>~ProjectedGridWaterRenderer",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "Water settings passed in a JSON object",
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Resolution divider for reflection/refraction",
        "name": "settings.divider"
      }
    ],
    "order": 449
  },
  {
    "id": "<anonymous>~BinaryLerpSource()",
    "longname": "<anonymous>~BinaryLerpSource",
    "name": "BinaryLerpSource",
    "kind": "constructor",
    "memberof": "<anonymous>~BinaryLerpSource",
    "params": [
      {
        "type": {
          "names": [
            "ClipSource",
            "BinaryLerpSource",
            "FrozenClipSource",
            "ManagedTransformSource"
          ]
        },
        "description": "our first source.",
        "name": "sourceA"
      },
      {
        "type": {
          "names": [
            "ClipSource",
            "BinaryLerpSource",
            "FrozenClipSource",
            "ManagedTransformSource"
          ]
        },
        "description": "our second source.",
        "name": "sourceB"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "A key into the related AnimationManager's values store for pulling blend weighting.",
        "name": "blendKey"
      }
    ],
    "order": 451
  },
  {
    "id": "<anonymous>~ClipSource()",
    "longname": "<anonymous>~ClipSource",
    "name": "ClipSource",
    "kind": "constructor",
    "memberof": "<anonymous>~ClipSource",
    "params": [
      {
        "type": {
          "names": [
            "AnimationClip"
          ]
        },
        "description": "the clip to use.",
        "name": "clip"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "'Exclude' or 'Include'",
        "name": "filter"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "optional": true,
        "name": "channelNames"
      }
    ],
    "order": 459
  },
  {
    "id": "<anonymous>~FrozenClipSource()",
    "longname": "<anonymous>~FrozenClipSource",
    "name": "FrozenClipSource",
    "kind": "constructor",
    "description": "A blend tree node that does not update any clips or sources below it in the blend tree. This is useful for freezing an animation, often for purposes of transitioning between two unrelated animations.",
    "memberof": "<anonymous>~FrozenClipSource",
    "params": [
      {
        "type": {
          "names": [
            "ClipSource",
            "BinaryLerpSource",
            "FrozenClipSource",
            "ManagedTransformSource"
          ]
        },
        "description": "Our sub source.",
        "name": "source"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The time we are frozen at.",
        "name": "frozenTime"
      }
    ],
    "order": 469
  },
  {
    "id": "<anonymous>~ManagedTransformSource()",
    "longname": "<anonymous>~ManagedTransformSource",
    "name": "ManagedTransformSource",
    "kind": "constructor",
    "memberof": "<anonymous>~ManagedTransformSource",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of source we were initialized from, if given.",
        "name": "sourceName"
      }
    ],
    "order": 477
  },
  {
    "id": "<anonymous>~AbstractAnimationChannel()",
    "longname": "<anonymous>~AbstractAnimationChannel",
    "name": "AbstractAnimationChannel",
    "kind": "constructor",
    "memberof": "<anonymous>~AbstractAnimationChannel",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the name of our channel. This is immutable to this instance of the class.",
        "name": "channelName"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "our time indices. Copied into the channel.",
        "name": "times"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the blendtype between transform keyframes of the channel. Defaults to AbstractAnimationChannel.BLENDTYPES.LINEAR",
        "name": "blendType"
      }
    ],
    "order": 487
  },
  {
    "id": "<anonymous>~AnimationClip()",
    "longname": "<anonymous>~AnimationClip",
    "name": "AnimationClip",
    "kind": "constructor",
    "memberof": "<anonymous>~AnimationClip",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of joint",
        "name": "name"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "defaultvalue": "[]",
        "description": "an array of AbstractAnimationChannels to shallow copy locally.",
        "name": "channels"
      }
    ],
    "order": 489
  },
  {
    "id": "<anonymous>~AnimationClipInstance()",
    "longname": "<anonymous>~AnimationClipInstance",
    "name": "AnimationClipInstance",
    "kind": "constructor",
    "description": "Maintains state information about an instance of a specific animation clip, such as time scaling applied, active flag, start time of the instance, etc.",
    "memberof": "<anonymous>~AnimationClipInstance",
    "params": [],
    "order": 494
  },
  {
    "id": "<anonymous>~InterpolatedFloatChannel()",
    "longname": "<anonymous>~InterpolatedFloatChannel",
    "name": "InterpolatedFloatChannel",
    "kind": "constructor",
    "memberof": "<anonymous>~InterpolatedFloatChannel",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the name of this channel.",
        "name": "channelName"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "the time samples",
        "name": "times"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "our value samples. Entries may be null. Should have as many entries as the times array.",
        "name": "values"
      }
    ],
    "order": 498
  },
  {
    "id": "<anonymous>~JointChannel()",
    "longname": "<anonymous>~JointChannel",
    "name": "JointChannel",
    "kind": "constructor",
    "memberof": "<anonymous>~JointChannel",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "our joint name.",
        "name": "jointName"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "our joint index",
        "name": "jointIndex"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "our time offset values.",
        "name": "times"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "the rotations to set on this channel at each time offset.",
        "name": "rotations"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "the translations to set on this channel at each time offset.",
        "name": "translations"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "the scales to set on this channel at each time offset.",
        "name": "scales"
      }
    ],
    "order": 501
  },
  {
    "id": "<anonymous>~JointData()",
    "longname": "<anonymous>~JointData",
    "name": "JointData",
    "kind": "constructor",
    "memberof": "<anonymous>~JointData",
    "params": [
      {
        "type": {
          "names": [
            "JointData"
          ]
        },
        "optional": true,
        "description": "source to copy",
        "name": "source"
      }
    ],
    "order": 505
  },
  {
    "id": "<anonymous>~TransformChannel()",
    "longname": "<anonymous>~TransformChannel",
    "name": "TransformChannel",
    "kind": "constructor",
    "memberof": "<anonymous>~TransformChannel",
    "params": [
      {
        "description": "our name.",
        "name": "channelName"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "our time offset values.",
        "name": "times"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "the rotations to set on this channel at each time offset.",
        "name": "rotations"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "the translations to set on this channel at each time offset.",
        "name": "translations"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "the scales to set on this channel at each time offset.",
        "name": "scales"
      }
    ],
    "order": 509
  },
  {
    "id": "<anonymous>~TransformData()",
    "longname": "<anonymous>~TransformData",
    "name": "TransformData",
    "kind": "constructor",
    "memberof": "<anonymous>~TransformData",
    "params": [
      {
        "type": {
          "names": [
            "TransformData"
          ]
        },
        "optional": true,
        "description": "source to copy.",
        "name": "source"
      }
    ],
    "order": 512
  },
  {
    "id": "<anonymous>~TriggerChannel()",
    "longname": "<anonymous>~TriggerChannel",
    "name": "TriggerChannel",
    "kind": "constructor",
    "memberof": "<anonymous>~TriggerChannel",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the name of this channel.",
        "name": "channelName"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "the time samples",
        "name": "times"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "our key samples. Entries may be null. Should have as many entries as the times array.",
        "name": "keys"
      }
    ],
    "order": 516
  },
  {
    "id": "<anonymous>~AnimationComponent()",
    "longname": "<anonymous>~AnimationComponent",
    "name": "AnimationComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~AnimationComponent",
    "params": [
      {
        "type": {
          "names": [
            "SkeletonPose"
          ]
        },
        "description": "pose",
        "name": "pose"
      }
    ],
    "order": 521
  },
  {
    "id": "<anonymous>~AnimationClipHandler()",
    "longname": "<anonymous>~AnimationClipHandler",
    "name": "AnimationClipHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~AnimationClipHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "updateObject"
      }
    ],
    "order": 528
  },
  {
    "id": "<anonymous>~AnimationComponentHandler()",
    "longname": "<anonymous>~AnimationComponentHandler",
    "name": "AnimationComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~AnimationComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {@see DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {@see DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 533
  },
  {
    "id": "<anonymous>~AnimationLayersHandler()",
    "longname": "<anonymous>~AnimationLayersHandler",
    "name": "AnimationLayersHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~AnimationLayersHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "updateObject"
      }
    ],
    "order": 537
  },
  {
    "id": "<anonymous>~AnimationStateHandler()",
    "longname": "<anonymous>~AnimationStateHandler",
    "name": "AnimationStateHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~AnimationStateHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "updateObject"
      }
    ],
    "order": 543
  },
  {
    "id": "<anonymous>~SkeletonHandler()",
    "longname": "<anonymous>~SkeletonHandler",
    "name": "SkeletonHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~SkeletonHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "updateObject"
      }
    ],
    "order": 548
  },
  {
    "id": "<anonymous>~Joint()",
    "longname": "<anonymous>~Joint",
    "name": "Joint",
    "kind": "constructor",
    "memberof": "<anonymous>~Joint",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of joint",
        "name": "name"
      }
    ],
    "order": 551
  },
  {
    "id": "<anonymous>~AnimationLayer()",
    "longname": "<anonymous>~AnimationLayer",
    "name": "AnimationLayer",
    "kind": "constructor",
    "memberof": "<anonymous>~AnimationLayer",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of layer",
        "name": "name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Id of layer",
        "name": "id"
      }
    ],
    "order": 553
  },
  {
    "id": "<anonymous>~LayerLerpBlender()",
    "longname": "<anonymous>~LayerLerpBlender",
    "name": "LayerLerpBlender",
    "kind": "constructor",
    "description": "A layer blender that uses linear interpolation to merge the results of two layers.",
    "memberof": "<anonymous>~LayerLerpBlender",
    "params": [],
    "order": 572
  },
  {
    "id": "<anonymous>~Skeleton()",
    "longname": "<anonymous>~Skeleton",
    "name": "Skeleton",
    "kind": "constructor",
    "memberof": "<anonymous>~Skeleton",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "name"
      },
      {
        "type": {
          "names": [
            "Array.<Joint>"
          ]
        },
        "name": "joints"
      }
    ],
    "order": 575
  },
  {
    "id": "<anonymous>~SkeletonPose()",
    "longname": "<anonymous>~SkeletonPose",
    "name": "SkeletonPose",
    "kind": "constructor",
    "memberof": "<anonymous>~SkeletonPose",
    "params": [
      {
        "type": {
          "names": [
            "Skeleton"
          ]
        },
        "name": "skeleton"
      }
    ],
    "order": 577
  },
  {
    "id": "<anonymous>~FadeTransitionState()",
    "longname": "<anonymous>~FadeTransitionState",
    "name": "FadeTransitionState",
    "kind": "constructor",
    "description": "A transition that blends over a given time from one animation state to another, beginning the target clip from local time 0 at the start of the transition. This is best used with two clips that have similar motions.",
    "memberof": "<anonymous>~FadeTransitionState",
    "params": [],
    "order": 587
  },
  {
    "id": "<anonymous>~FrozenTransitionState()",
    "longname": "<anonymous>~FrozenTransitionState",
    "name": "FrozenTransitionState",
    "kind": "constructor",
    "description": "A two state transition that freezes the starting state at its current position and blends that over time with a target state. The target state moves forward in time during the blend as normal.",
    "memberof": "<anonymous>~FrozenTransitionState",
    "params": [],
    "order": 591
  },
  {
    "id": "<anonymous>~SteadyState()",
    "longname": "<anonymous>~SteadyState",
    "name": "SteadyState",
    "kind": "constructor",
    "memberof": "<anonymous>~SteadyState",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of state",
        "name": "name"
      }
    ],
    "order": 596
  },
  {
    "id": "<anonymous>~SyncFadeTransitionState()",
    "longname": "<anonymous>~SyncFadeTransitionState",
    "name": "SyncFadeTransitionState",
    "kind": "constructor",
    "memberof": "<anonymous>~SyncFadeTransitionState",
    "params": [
      {
        "description": "the name of the steady state we want the Animation Layer to be in at the end of the transition.",
        "name": "targetState"
      },
      {
        "description": "the amount of time we should take to do the transition.",
        "name": "fadeTime"
      },
      {
        "type": {
          "names": [
            "StateBlendType"
          ]
        },
        "description": "the way we should interpolate the weighting during the transition.",
        "name": "blendType"
      }
    ],
    "order": 599
  },
  {
    "id": "<anonymous>~AnimationSystem()",
    "longname": "<anonymous>~AnimationSystem",
    "name": "AnimationSystem",
    "kind": "constructor",
    "description": "Processes all entities with animation components, updating the animations",
    "memberof": "<anonymous>~AnimationSystem",
    "params": [],
    "order": 601
  },
  {
    "id": "<anonymous>~BoundingVolumeMeshBuilder()",
    "longname": "<anonymous>~BoundingVolumeMeshBuilder",
    "name": "BoundingVolumeMeshBuilder",
    "kind": "constructor",
    "description": "Provides methods for building bounding volume debug meshes",
    "memberof": "<anonymous>~BoundingVolumeMeshBuilder",
    "params": [],
    "order": 603
  },
  {
    "id": "<anonymous>~MarkerComponent()",
    "longname": "<anonymous>~MarkerComponent",
    "name": "MarkerComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~MarkerComponent",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity this component is attached to",
        "name": "entity"
      }
    ],
    "order": 605
  },
  {
    "id": "<anonymous>~EntityCounter()",
    "longname": "<anonymous>~EntityCounter",
    "name": "EntityCounter",
    "kind": "constructor",
    "memberof": "<anonymous>~EntityCounter",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Sets how many frames should it skip between refreshes",
        "name": "skipFrames"
      }
    ],
    "order": 616
  },
  {
    "id": "<anonymous>~Bus()",
    "longname": "<anonymous>~Bus",
    "name": "Bus",
    "kind": "constructor",
    "description": "A generic message bus. Offers ways to receive and subscribe to messages on a hierarchy of channels.",
    "memberof": "<anonymous>~Bus",
    "params": [],
    "order": 622
  },
  {
    "id": "<anonymous>~CameraComponent()",
    "longname": "<anonymous>~CameraComponent",
    "name": "CameraComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~CameraComponent",
    "params": [
      {
        "type": {
          "names": [
            "Camera"
          ]
        },
        "description": "Camera to contain in this component.",
        "name": "camera"
      }
    ],
    "order": 632
  },
  {
    "id": "<anonymous>~Component()",
    "longname": "<anonymous>~Component",
    "name": "Component",
    "kind": "constructor",
    "description": "Base class/module for all components.See [this engine overview article]{@link http://www.gootechnologies.com/learn/tutorials/engine/engine-overview/} for more info.",
    "memberof": "<anonymous>~Component",
    "params": [],
    "order": 640
  },
  {
    "id": "<anonymous>~CssTransformComponent()",
    "longname": "<anonymous>~CssTransformComponent",
    "name": "CssTransformComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~CssTransformComponent",
    "params": [
      {
        "type": {
          "names": [
            "domElement"
          ]
        },
        "name": "domElement"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "faceCamera"
      }
    ],
    "order": 645
  },
  {
    "id": "<anonymous>~Dom3dComponent()",
    "longname": "<anonymous>~Dom3dComponent",
    "name": "Dom3dComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~Dom3dComponent",
    "params": [
      {
        "type": {
          "names": [
            "domElement"
          ]
        },
        "name": "domElement"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "settings"
      }
    ],
    "order": 650
  },
  {
    "id": "<anonymous>~HtmlComponent()",
    "longname": "<anonymous>~HtmlComponent",
    "name": "HtmlComponent",
    "kind": "constructor",
    "description": "HTML Component.",
    "memberof": "<anonymous>~HtmlComponent",
    "params": [],
    "order": 653
  },
  {
    "id": "<anonymous>~LightComponent()",
    "longname": "<anonymous>~LightComponent",
    "name": "LightComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~LightComponent",
    "params": [
      {
        "type": {
          "names": [
            "Light"
          ]
        },
        "description": "Light to contain in this component (directional, spot, point)",
        "name": "light"
      }
    ],
    "order": 658
  },
  {
    "id": "<anonymous>~MeshDataComponent()",
    "longname": "<anonymous>~MeshDataComponent",
    "name": "MeshDataComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~MeshDataComponent",
    "params": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "description": "Target mesh data for this component.",
        "name": "meshData"
      }
    ],
    "order": 662
  },
  {
    "id": "<anonymous>~ParticleComponent()",
    "longname": "<anonymous>~ParticleComponent",
    "name": "ParticleComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~ParticleComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "description": "Array of emitter settings",
        "name": "settings.emitters"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "name": "settings.timeline"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "settings.uRange"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "settings.vRange"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 100,
        "name": "settings.particleCount"
      }
    ],
    "order": 689
  },
  {
    "id": "<anonymous>~PortalComponent()",
    "longname": "<anonymous>~PortalComponent",
    "name": "PortalComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~PortalComponent",
    "params": [
      {
        "type": {
          "names": [
            "Camera"
          ]
        },
        "description": "The camera used for rendering",
        "name": "camera"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 200,
        "description": "Height of the texture to render to (the width is calculated automatically from the camera's aspect ratio)",
        "name": "height"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "If set to true then updating is done every frame, otherwise updating is done only when solicited via the `requestUpdate` method",
        "name": "options.autoUpdate"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "By default the rendering done on the material is disabled if the host object is culled.",
        "name": "options.alwaysRender"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "By default the \"portal depth\" (the number of portals seen through a portal) is of 4. By enabling this option the limitation disappears, but at the cost of using more memory.",
        "name": "options.preciseRecursion"
      },
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "optional": true,
        "defaultvalue": null,
        "description": "Optional override material to use when rendering to the host object",
        "name": "overrideMaterial"
      }
    ],
    "order": 691
  },
  {
    "id": "<anonymous>~ScriptComponent()",
    "longname": "<anonymous>~ScriptComponent",
    "name": "ScriptComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~ScriptComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object",
            "Array.<Object>"
          ]
        },
        "optional": true,
        "description": "A script-object or an array of script-objects to attach to the\nentity.\nThe script-object needs to define the function <code>run({@link Entity} entity, number tpf)</code>,\nwhich runs on every frame update.\n\nThe script object can also define the function <code>setup({@link Entity} entity)</code>, called upon script creation.",
        "name": "scripts"
      }
    ],
    "order": 696
  },
  {
    "id": "<anonymous>~Entity()",
    "longname": "<anonymous>~Entity",
    "name": "Entity",
    "kind": "constructor",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The {@link World} this entity will be part of after calling .addToWorld().",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Entity name.",
        "name": "name"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Entity id.",
        "name": "id"
      }
    ],
    "order": 758
  },
  {
    "id": "<anonymous>~GooRunner()",
    "longname": "<anonymous>~GooRunner",
    "name": "GooRunner",
    "kind": "constructor",
    "memberof": "<anonymous>~GooRunner",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "GooRunner settings passed in a JSON object",
        "name": "parameters"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Specifies if the canvas should have an alpha channel or not.",
        "name": "parameters.alpha"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Enables or disables premultiplication of color by alpha",
        "name": "parameters.premultipliedAlpha"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Specifies if antialiasing should be turned on or no",
        "name": "parameters.antialias"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Enables the stencil buffer",
        "name": "parameters.stencil"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "By default the drawing buffer will be cleared after it is presented to the HTML compositor. Enable this option to not clear the drawing buffer",
        "name": "parameters.preserveDrawingBuffer"
      },
      {
        "type": {
          "names": [
            "HTMLCanvasElement"
          ]
        },
        "optional": true,
        "description": "If not supplied, Renderer will create a new canvas",
        "name": "parameters.canvas"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If enabled a small stats widget showing stats will be displayed",
        "name": "parameters.showStats"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Take into account the device pixel ratio (for retina screens etc)",
        "name": "parameters.useDevicePixelRatio"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "By default the 'game loop' will start automatically. Enable this option to manually start the game loop at any time",
        "name": "parameters.manuallyStartGameLoop"
      },
      {
        "type": {
          "names": [
            "boolean",
            "string",
            "Object"
          ]
        },
        "optional": true,
        "defaultvalue": "'topright'",
        "description": "Specifies whether the Goo logo is visible or not and where should and be placed and what color should it have.\nIf the parameter is not specified then the logo is placed in the top right corner.\nIf no logo is desired then this parameter should have the 'false' value.\nIf the supplied parameter is one of the following: 'topleft', 'topright', 'bottomleft', 'bottomright' then the logo will be positioned in the according corner\nIf the parameter is of type object then the logo will be positioned according to the 'position' key and will be colored according to the 'color' key",
        "name": "parameters.logo"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": 10,
        "description": "Specifies the amount of previous frames to use when computing the 'time per frame'",
        "name": "parameters.tpfSmoothingCount"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If enabled the hotkeys Shift+[1..6] will be enabled",
        "name": "parameters.debugKeys"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "parameters.useTryCatch"
      }
    ],
    "order": 795
  },
  {
    "id": "<anonymous>~EntityManager()",
    "longname": "<anonymous>~EntityManager",
    "name": "EntityManager",
    "kind": "constructor",
    "description": "Main handler of all entities in the world.",
    "memberof": "<anonymous>~EntityManager",
    "params": [],
    "order": 823
  },
  {
    "id": "<anonymous>~BoundingUpdateSystem()",
    "longname": "<anonymous>~BoundingUpdateSystem",
    "name": "BoundingUpdateSystem",
    "kind": "constructor",
    "description": "Calculates and updates all boundings on entities with both transform, meshrenderer and meshdata components",
    "memberof": "<anonymous>~BoundingUpdateSystem",
    "params": [],
    "order": 855
  },
  {
    "id": "<anonymous>~CameraSystem()",
    "longname": "<anonymous>~CameraSystem",
    "name": "CameraSystem",
    "kind": "constructor",
    "description": "Updates cameras/cameracomponents with their transform component transforms",
    "memberof": "<anonymous>~CameraSystem",
    "params": [],
    "order": 857
  },
  {
    "id": "<anonymous>~GridRenderSystem()",
    "longname": "<anonymous>~GridRenderSystem",
    "name": "GridRenderSystem",
    "kind": "constructor",
    "description": "Renders entities/renderables using a configurable partitioner for culling",
    "memberof": "<anonymous>~GridRenderSystem",
    "params": [],
    "order": 862
  },
  {
    "id": "<anonymous>~PortalSystem()",
    "longname": "<anonymous>~PortalSystem",
    "name": "PortalSystem",
    "kind": "constructor",
    "memberof": "<anonymous>~PortalSystem",
    "params": [
      {
        "type": {
          "names": [
            "Renderer"
          ]
        },
        "name": "renderer"
      },
      {
        "type": {
          "names": [
            "RenderSystem"
          ]
        },
        "name": "renderSystem"
      }
    ],
    "order": 871
  },
  {
    "id": "<anonymous>~ScriptSystem()",
    "longname": "<anonymous>~ScriptSystem",
    "name": "ScriptSystem",
    "kind": "constructor",
    "description": "Processes all entities with script components, running the scripts where applicable",
    "memberof": "<anonymous>~ScriptSystem",
    "params": [],
    "order": 874
  },
  {
    "id": "<anonymous>~System()",
    "longname": "<anonymous>~System",
    "name": "System",
    "kind": "constructor",
    "memberof": "<anonymous>~System",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "System type name as a string",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "Array.<String>"
          ]
        },
        "description": "Array of component types this system is interested in",
        "name": "interests"
      }
    ],
    "order": 893
  },
  {
    "id": "<anonymous>~World()",
    "longname": "<anonymous>~World",
    "name": "World",
    "kind": "constructor",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "type": {
          "names": [
            "GooRunner"
          ]
        },
        "description": "GooRunner for updating the world and calling the renderers.",
        "name": "gooRunner"
      }
    ],
    "order": 904
  },
  {
    "id": "<anonymous>~WorldBy()",
    "longname": "<anonymous>~WorldBy",
    "name": "WorldBy",
    "kind": "constructor",
    "memberof": "<anonymous>~WorldBy",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      }
    ],
    "order": 926
  },
  {
    "id": "<anonymous>~MachineHandler()",
    "longname": "<anonymous>~MachineHandler",
    "name": "MachineHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~MachineHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "updateObject"
      }
    ],
    "order": 928
  },
  {
    "id": "<anonymous>~ProximitySystem()",
    "longname": "<anonymous>~ProximitySystem",
    "name": "ProximitySystem",
    "kind": "constructor",
    "memberof": "<anonymous>~ProximitySystem",
    "params": [
      {
        "type": {
          "names": [
            "Renderer"
          ]
        },
        "name": "renderer"
      },
      {
        "type": {
          "names": [
            "RenderSystem"
          ]
        },
        "name": "renderSystem"
      }
    ],
    "order": 936
  },
  {
    "id": "<anonymous>~Action()",
    "longname": "<anonymous>~Action",
    "name": "Action",
    "kind": "constructor",
    "memberof": "<anonymous>~Action",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "id"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "settings"
      }
    ],
    "order": 938
  },
  {
    "id": "<anonymous>~WaitAction()",
    "longname": "<anonymous>~WaitAction",
    "name": "WaitAction",
    "kind": "constructor",
    "description": "Action that waits a given time before transitioning.",
    "memberof": "<anonymous>~WaitAction",
    "params": [],
    "order": 940
  },
  {
    "id": "<anonymous>~StateMachineComponent()",
    "longname": "<anonymous>~StateMachineComponent",
    "name": "StateMachineComponent",
    "kind": "constructor",
    "description": "StateMachineComponent.",
    "memberof": "<anonymous>~StateMachineComponent",
    "params": [],
    "order": 944
  },
  {
    "id": "<anonymous>~StateMachineSystem()",
    "longname": "<anonymous>~StateMachineSystem",
    "name": "StateMachineSystem",
    "kind": "constructor",
    "description": "Processes all entities with a FSM component",
    "memberof": "<anonymous>~StateMachineSystem",
    "params": [],
    "order": 952
  },
  {
    "id": "<anonymous>~StateMachineComponentHandler()",
    "longname": "<anonymous>~StateMachineComponentHandler",
    "name": "StateMachineComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~StateMachineComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {@see DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {@see DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 959
  },
  {
    "id": "<anonymous>~FilledPolygon()",
    "longname": "<anonymous>~FilledPolygon",
    "name": "FilledPolygon",
    "kind": "constructor",
    "memberof": "<anonymous>~FilledPolygon",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "Array of vertices",
        "name": "verts"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "Array of indices",
        "name": "indices"
      }
    ],
    "order": 963
  },
  {
    "id": "<anonymous>~PolyLine()",
    "longname": "<anonymous>~PolyLine",
    "name": "PolyLine",
    "kind": "constructor",
    "memberof": "<anonymous>~PolyLine",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "optional": true,
        "description": "The vertices data array",
        "name": "verts"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "True if its ends should be connected",
        "name": "closed"
      }
    ],
    "order": 966
  },
  {
    "id": "<anonymous>~Surface()",
    "longname": "<anonymous>~Surface",
    "name": "Surface",
    "kind": "constructor",
    "memberof": "<anonymous>~Surface",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "The vertices data array",
        "name": "verts"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 2,
        "description": "The number of vertices",
        "name": "verticesPerLine"
      }
    ],
    "order": 976
  },
  {
    "id": "<anonymous>~TextComponentHandler()",
    "longname": "<anonymous>~TextComponentHandler",
    "name": "TextComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~TextComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function.",
        "name": "updateObject"
      }
    ],
    "order": 984
  },
  {
    "id": "<anonymous>~Triangle()",
    "longname": "<anonymous>~Triangle",
    "name": "Triangle",
    "kind": "constructor",
    "memberof": "<anonymous>~Triangle",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "array with 9 elements. These 9 elements must be 3 x, y, z positions.",
        "name": "verts"
      }
    ],
    "order": 1003
  },
  {
    "id": "<anonymous>~DynamicLoader()",
    "longname": "<anonymous>~DynamicLoader",
    "name": "DynamicLoader",
    "kind": "constructor",
    "memberof": "<anonymous>~DynamicLoader",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      },
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The target World object.",
        "name": "options.world"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The root path from where to get resources.",
        "name": "options.rootPath"
      },
      {
        "type": {
          "names": [
            "Ajax"
          ]
        },
        "optional": true,
        "defaultvalue": "new Ajax(options.rootPath)",
        "description": "Can be used to overwrite how the loader fetches refs. Good for testing.",
        "name": "options.ajax"
      }
    ],
    "order": 1014
  },
  {
    "id": "<anonymous>~CameraComponentHandler()",
    "longname": "<anonymous>~CameraComponentHandler",
    "name": "CameraComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~CameraComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {@see DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {@see DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 1029
  },
  {
    "id": "<anonymous>~ComponentHandler()",
    "longname": "<anonymous>~ComponentHandler",
    "name": "ComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~ComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ComponentHandler"
          ]
        }
      }
    ],
    "order": 1034
  },
  {
    "id": "<anonymous>~ConfigHandler()",
    "longname": "<anonymous>~ConfigHandler",
    "name": "ConfigHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~ConfigHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 1043
  },
  {
    "id": "<anonymous>~Dom3dComponentHandler()",
    "longname": "<anonymous>~Dom3dComponentHandler",
    "name": "Dom3dComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~Dom3dComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {@see DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {@see DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 1052
  },
  {
    "id": "<anonymous>~EntityHandler()",
    "longname": "<anonymous>~EntityHandler",
    "name": "EntityHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~EntityHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "updateObject"
      }
    ],
    "order": 1057
  },
  {
    "id": "<anonymous>~HtmlComponentHandler()",
    "longname": "<anonymous>~HtmlComponentHandler",
    "name": "HtmlComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~HtmlComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {@see DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {@see DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 1067
  },
  {
    "id": "<anonymous>~LightComponentHandler()",
    "longname": "<anonymous>~LightComponentHandler",
    "name": "LightComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~LightComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {@see DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {@see DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 1072
  },
  {
    "id": "<anonymous>~MaterialHandler()",
    "longname": "<anonymous>~MaterialHandler",
    "name": "MaterialHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~MaterialHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "updateObject"
      }
    ],
    "order": 1077
  },
  {
    "id": "<anonymous>~MeshDataComponentHandler()",
    "longname": "<anonymous>~MeshDataComponentHandler",
    "name": "MeshDataComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~MeshDataComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {@see DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {@see DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 1082
  },
  {
    "id": "<anonymous>~MeshRendererComponentHandler()",
    "longname": "<anonymous>~MeshRendererComponentHandler",
    "name": "MeshRendererComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~MeshRendererComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {@see DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {@see DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 1093
  },
  {
    "id": "<anonymous>~SceneHandler()",
    "longname": "<anonymous>~SceneHandler",
    "name": "SceneHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~SceneHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "updateObject"
      }
    ],
    "order": 1102
  },
  {
    "id": "<anonymous>~ShaderHandler()",
    "longname": "<anonymous>~ShaderHandler",
    "name": "ShaderHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~ShaderHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "updateObject"
      }
    ],
    "order": 1110
  },
  {
    "id": "<anonymous>~SoundComponentHandler()",
    "longname": "<anonymous>~SoundComponentHandler",
    "name": "SoundComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~SoundComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {@see DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {@see DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 1114
  },
  {
    "id": "<anonymous>~TransformComponentHandler()",
    "longname": "<anonymous>~TransformComponentHandler",
    "name": "TransformComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~TransformComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {@see DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {@see DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 1130
  },
  {
    "id": "<anonymous>~LogicComponent()",
    "longname": "<anonymous>~LogicComponent",
    "name": "LogicComponent",
    "kind": "constructor",
    "description": "A component that embeds a LogicLayer and processes it every frame.",
    "memberof": "<anonymous>~LogicComponent",
    "params": [],
    "order": 1196
  },
  {
    "id": "<anonymous>~Matrix()",
    "longname": "<anonymous>~Matrix",
    "name": "Matrix",
    "kind": "constructor",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Number of rows.",
        "name": "rows"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Number of columns.",
        "name": "cols"
      }
    ],
    "order": 1230
  },
  {
    "id": "<anonymous>~Matrix2()",
    "longname": "<anonymous>~Matrix2",
    "name": "Matrix2",
    "kind": "constructor",
    "description": "Matrix with 2x2 components.",
    "memberof": "<anonymous>~Matrix2",
    "params": [],
    "order": 1259
  },
  {
    "id": "<anonymous>~Matrix3()",
    "longname": "<anonymous>~Matrix3",
    "name": "Matrix3",
    "kind": "constructor",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3",
            "Array.<number>",
            "number"
          ]
        },
        "description": "Initial values for the components.",
        "name": "arguments"
      }
    ],
    "examples": [
      "// Passing in no arguments\nvar m1 = new Matrix3(); // m1 == (1, 0, 0, 0, 1, 0, 0, 0, 1)\n\n// Passing in a number Array\nvar m2 = new Matrix3([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\n// Passing in numbers\nvar m3 = new Matrix3(1, 0, 0, 0, 1, 0, 0, 0, 1);\n\n// Passing in an existing Matrix3\nvar m4 = new Matrix3(m1); // m4 == (1, 0, 0, 0, 1, 0, 0, 0, 1)"
    ],
    "order": 1287
  },
  {
    "id": "<anonymous>~Matrix4()",
    "longname": "<anonymous>~Matrix4",
    "name": "Matrix4",
    "kind": "constructor",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4",
            "Array.<number>"
          ]
        },
        "description": "Initial values for the components.",
        "name": "arguments"
      }
    ],
    "order": 1328
  },
  {
    "id": "<anonymous>~Plane()",
    "longname": "<anonymous>~Plane",
    "name": "Plane",
    "kind": "constructor",
    "memberof": "<anonymous>~Plane",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Normal of the plane.",
        "name": "normal"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The plane offset along the normal.",
        "name": "constant"
      }
    ],
    "order": 1367
  },
  {
    "id": "<anonymous>~Quaternion()",
    "longname": "<anonymous>~Quaternion",
    "name": "Quaternion",
    "kind": "constructor",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "w"
      }
    ],
    "order": 1375
  },
  {
    "id": "<anonymous>~Spline()",
    "longname": "<anonymous>~Spline",
    "name": "Spline",
    "kind": "constructor",
    "memberof": "<anonymous>~Spline",
    "params": [
      {
        "type": {
          "names": [
            "Array.<Vector>"
          ]
        },
        "name": "controlPoints"
      }
    ],
    "order": 1417
  },
  {
    "id": "<anonymous>~SplineWalker()",
    "longname": "<anonymous>~SplineWalker",
    "name": "SplineWalker",
    "kind": "constructor",
    "memberof": "<anonymous>~SplineWalker",
    "params": [
      {
        "type": {
          "names": [
            "Spline"
          ]
        },
        "description": "Spline to interpolate across",
        "name": "spline"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.01,
        "description": "substepSize The size of the substep used to approximate movement across the spline.\nSmall values of this parameter lead to more substeps and better precision (at the cost of more computations).",
        "name": "substepSize"
      }
    ],
    "order": 1422
  },
  {
    "id": "<anonymous>~Vector2()",
    "longname": "<anonymous>~Vector2",
    "name": "Vector2",
    "kind": "constructor",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      }
    ],
    "examples": [
      "var v1 = new Vector2(); // v1 == (0, 0)\nvar v2 = new Vector2(1, 2); // v2 == (1, 2)"
    ],
    "order": 1478
  },
  {
    "id": "<anonymous>~Vector3()",
    "longname": "<anonymous>~Vector3",
    "name": "Vector3",
    "kind": "constructor",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "examples": [
      "var v1 = new Vector3(); // v1 == (0, 0, 0)\nvar v2 = new Vector3(1, 2, 3); // v2 == (1, 2, 3)"
    ],
    "order": 1528
  },
  {
    "id": "<anonymous>~Vector4()",
    "longname": "<anonymous>~Vector4",
    "name": "Vector4",
    "kind": "constructor",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "w"
      }
    ],
    "examples": [
      "var v1 = new Vector4(); // v1 == (0, 0, 0, 0)\nvar v2 = new Vector4(1, 2, 3, 4); // v2 == (1, 2, 3, 4)"
    ],
    "order": 1588
  },
  {
    "id": "<anonymous>~OccludeeComponent()",
    "longname": "<anonymous>~OccludeeComponent",
    "name": "OccludeeComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~OccludeeComponent",
    "params": [
      {
        "name": "meshData"
      },
      {
        "name": "useBoundingBox"
      }
    ],
    "order": 1653
  },
  {
    "id": "<anonymous>~OccluderComponent()",
    "longname": "<anonymous>~OccluderComponent",
    "name": "OccluderComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~OccluderComponent",
    "params": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "description": "The triangle occluder geometry.",
        "name": "meshData"
      }
    ],
    "order": 1655
  },
  {
    "id": "<anonymous>~BoundingSphereOcclusionChecker()",
    "longname": "<anonymous>~BoundingSphereOcclusionChecker",
    "name": "BoundingSphereOcclusionChecker",
    "kind": "constructor",
    "memberof": "<anonymous>~BoundingSphereOcclusionChecker",
    "params": [
      {
        "name": "renderer"
      }
    ],
    "order": 1670
  },
  {
    "id": "<anonymous>~EdgeMap()",
    "longname": "<anonymous>~EdgeMap",
    "name": "EdgeMap",
    "kind": "constructor",
    "memberof": "<anonymous>~EdgeMap",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "The number of edges needed during runtime",
        "name": "edgeCount"
      }
    ],
    "order": 1680
  },
  {
    "id": "<anonymous>~OccludeeTriangleData()",
    "longname": "<anonymous>~OccludeeTriangleData",
    "name": "OccludeeTriangleData",
    "kind": "constructor",
    "memberof": "<anonymous>~OccludeeTriangleData",
    "params": [
      {
        "name": "parameters"
      }
    ],
    "order": 1682
  },
  {
    "id": "<anonymous>~OccluderTriangleData()",
    "longname": "<anonymous>~OccluderTriangleData",
    "name": "OccluderTriangleData",
    "kind": "constructor",
    "memberof": "<anonymous>~OccluderTriangleData",
    "params": [
      {
        "name": "parameters"
      }
    ],
    "order": 1686
  },
  {
    "id": "<anonymous>~SoftwareRenderer()",
    "longname": "<anonymous>~SoftwareRenderer",
    "name": "SoftwareRenderer",
    "kind": "constructor",
    "description": "A software renderer able to render triangles to a depth buffer (w-buffer). Occlusion culling is also performed in this class.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "A JSON object which has to contain width, height and the camera object to be used.",
        "name": "parameters"
      }
    ],
    "order": 1691
  },
  {
    "id": "<anonymous>~ParticleEmitter()",
    "longname": "<anonymous>~ParticleEmitter",
    "name": "ParticleEmitter",
    "kind": "constructor",
    "memberof": "<anonymous>~ParticleEmitter",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "Particle emitter options passed as an object",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": -1,
        "description": "Specifies how many particles this emitter should spawn (-1 for an unlimited amount)",
        "name": "options.totalParticlesToSpawn"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": "3.0",
        "description": "The maximum lifetime of a particle emitted by this emitter (in seconds)",
        "name": "options.maxLifetime"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": "2.0",
        "description": "The minimum lifetime of a particle emitted by this emitter (in seconds)",
        "name": "options.minLifetime"
      },
      {
        "type": {
          "names": [
            "Array.<{color, mass, uvIndex, color, size, spin}>"
          ]
        },
        "optional": true,
        "description": "A timeline object describing the transformations that a particle should go through while it 'ages'. This overrides the timeline set on the particle component",
        "name": "options.timeline"
      },
      {
        "type": {
          "names": [
            "Array.<ParticleInfluence>"
          ]
        },
        "optional": true,
        "description": "An array of objects providing functions that alter the particle",
        "name": "options.influences"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "A function returning an emission point for a particle, given the arguments particle and particleEntity",
        "name": "options.emissionPoint"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "A function returning an emission velocity for a particle, given the arguments particle and particleEntity",
        "name": "options.getEmissionVelocity"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "defaultvalue": "ParticleEmitter.CAMERA_BILLBOARD_FUNC",
        "description": "A function that sets the orientation of the particle's billboard given a Particle as argument",
        "name": "options.getParticleBillboardVectors"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 10,
        "description": "Target number of particles per second to spawn",
        "name": "options.releaseRatePerSecond"
      }
    ],
    "order": 1720
  },
  {
    "id": "<anonymous>~ParticleInfluence()",
    "longname": "<anonymous>~ParticleInfluence",
    "name": "ParticleInfluence",
    "kind": "constructor",
    "memberof": "<anonymous>~ParticleInfluence",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "<code>prepare({@link Entity} particleEntity, {@link ParticleEmitter} emitter)</code>.",
        "name": "settings.prepare"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "<code>apply(number tpf, {@link Particle} particle, number particleIndex)</code>.",
        "name": "settings.apply"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "settings.enabled"
      }
    ],
    "order": 1724
  },
  {
    "id": "<anonymous>~BloomPass()",
    "longname": "<anonymous>~BloomPass",
    "name": "BloomPass",
    "kind": "constructor",
    "description": "Bloom post effect.",
    "memberof": "<anonymous>~BloomPass",
    "params": [],
    "order": 1734
  },
  {
    "id": "<anonymous>~BlurPass()",
    "longname": "<anonymous>~BlurPass",
    "name": "BlurPass",
    "kind": "constructor",
    "description": "Blur post effect.",
    "memberof": "<anonymous>~BlurPass",
    "params": [],
    "order": 1736
  },
  {
    "id": "<anonymous>~DepthPass()",
    "longname": "<anonymous>~DepthPass",
    "name": "DepthPass",
    "kind": "constructor",
    "memberof": "<anonymous>~DepthPass",
    "params": [
      {
        "name": "renderList"
      },
      {
        "name": "outShader"
      }
    ],
    "order": 1738
  },
  {
    "id": "<anonymous>~DofPass()",
    "longname": "<anonymous>~DofPass",
    "name": "DofPass",
    "kind": "constructor",
    "memberof": "<anonymous>~DofPass",
    "params": [
      {
        "name": "renderList"
      },
      {
        "name": "outShader"
      }
    ],
    "order": 1740
  },
  {
    "id": "<anonymous>~PosteffectsHandler()",
    "longname": "<anonymous>~PosteffectsHandler",
    "name": "PosteffectsHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~PosteffectsHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "updateObject"
      }
    ],
    "order": 1743
  },
  {
    "id": "<anonymous>~ShaderLibExtra()",
    "longname": "<anonymous>~ShaderLibExtra",
    "name": "ShaderLibExtra",
    "kind": "constructor",
    "description": "Collection of additional useful shaders",
    "memberof": "<anonymous>~ShaderLibExtra",
    "params": [],
    "order": 1749
  },
  {
    "id": "<anonymous>~SsaoPass()",
    "longname": "<anonymous>~SsaoPass",
    "name": "SsaoPass",
    "kind": "constructor",
    "memberof": "<anonymous>~SsaoPass",
    "params": [
      {
        "name": "renderList"
      }
    ],
    "order": 1752
  },
  {
    "id": "<anonymous>~BoundingTree()",
    "longname": "<anonymous>~BoundingTree",
    "name": "BoundingTree",
    "kind": "constructor",
    "memberof": "<anonymous>~BoundingTree",
    "params": [
      {
        "name": "boundType"
      }
    ],
    "order": 1754
  },
  {
    "id": "<anonymous>~DoubleQuad()",
    "longname": "<anonymous>~DoubleQuad",
    "name": "DoubleQuad",
    "kind": "constructor",
    "memberof": "<anonymous>~DoubleQuad",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total width of quad.",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total height of quad.",
        "name": "height"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Number of texture repetitions in the texture's x direction.",
        "name": "tileX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Number of texture repetitions in the texture's y direction.",
        "name": "tileY"
      }
    ],
    "order": 1757
  },
  {
    "id": "<anonymous>~QuadComponent()",
    "longname": "<anonymous>~QuadComponent",
    "name": "QuadComponent",
    "kind": "constructor",
    "memberof": "<anonymous>~QuadComponent",
    "params": [
      {
        "type": {
          "names": [
            "HTMLImageElement"
          ]
        },
        "optional": true,
        "name": "image"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Width of the Quad mesh. See [Quad]{@link Quad}",
        "name": "settings.width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "settings.height"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Number of tiles in the Quad. See [Quad]{@link Quad}",
        "name": "settings.tileX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "settings.tileY"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Will resize the Quad mesh so that the aspect is preserved.",
        "name": "settings.preserveAspectRatio"
      }
    ],
    "order": 1764
  },
  {
    "id": "<anonymous>~QuadComponentHandler()",
    "longname": "<anonymous>~QuadComponentHandler",
    "name": "QuadComponentHandler",
    "kind": "constructor",
    "memberof": "<anonymous>~QuadComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "The goo world",
        "name": "world"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The config loader function. See {@see DynamicLoader._loadRef}.",
        "name": "getConfig"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The handler function. See {@see DynamicLoader.update}.",
        "name": "updateObject"
      }
    ],
    "order": 1777
  },
  {
    "id": "<anonymous>~BoundingBox()",
    "longname": "<anonymous>~BoundingBox",
    "name": "BoundingBox",
    "kind": "constructor",
    "description": "Defines an axis-aligned cube that defines a container for a group of vertices of a particular piece of geometry. This box defines a center and extents from that center along the x, y and z axis. A typical usage is to allow the class define the center and radius by calling either containAABB or averagePoints. A call to computeFramePoint in turn calls containAABB.",
    "memberof": "<anonymous>~BoundingBox",
    "params": [],
    "order": 1782
  },
  {
    "id": "<anonymous>~BoundingSphere()",
    "longname": "<anonymous>~BoundingSphere",
    "name": "BoundingSphere",
    "kind": "constructor",
    "description": "BoundingSphere defines a sphere that defines a container for a group of vertices of a particular piece of geometry. This sphere defines a radius and a center. A typical usage is to allow the class define the center and radius by calling either containAABB or averagePoints. A call to computeFramePoint in turn calls containAABB.",
    "memberof": "<anonymous>~BoundingSphere",
    "params": [],
    "order": 1787
  },
  {
    "id": "<anonymous>~BoundingVolume()",
    "longname": "<anonymous>~BoundingVolume",
    "name": "BoundingVolume",
    "kind": "constructor",
    "description": "Base class for boundings",
    "memberof": "<anonymous>~BoundingVolume",
    "params": [],
    "order": 1792
  },
  {
    "id": "<anonymous>~BufferData()",
    "longname": "<anonymous>~BufferData",
    "name": "BufferData",
    "kind": "constructor",
    "memberof": "<anonymous>~BufferData",
    "params": [
      {
        "type": {
          "names": [
            "ArrayBuffer"
          ]
        },
        "description": "Data to wrap",
        "name": "data"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of data ('ArrayBuffer'/'ElementArrayBuffer')",
        "name": "target"
      }
    ],
    "order": 1796
  },
  {
    "id": "<anonymous>~BufferUtils()",
    "longname": "<anonymous>~BufferUtils",
    "name": "BufferUtils",
    "kind": "constructor",
    "description": "Utility for creating index buffers of appropriate type",
    "memberof": "<anonymous>~BufferUtils",
    "params": [],
    "order": 1801
  },
  {
    "id": "<anonymous>~Camera()",
    "longname": "<anonymous>~Camera",
    "name": "Camera",
    "kind": "constructor",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 45,
        "description": "The full vertical angle of view, in degrees.",
        "name": "fov"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Aspect ratio of the 3D canvas used.",
        "name": "aspect"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Near plane clip distance.",
        "name": "near"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1000,
        "description": "Far plane clip distance.",
        "name": "far"
      }
    ],
    "order": 1805
  },
  {
    "id": "<anonymous>~Capabilities()",
    "longname": "<anonymous>~Capabilities",
    "name": "Capabilities",
    "kind": "constructor",
    "description": "Enabled and stores webgl extensions and capabilities",
    "memberof": "<anonymous>~Capabilities",
    "params": [],
    "order": 1843
  },
  {
    "id": "<anonymous>~DirectionalLight()",
    "longname": "<anonymous>~DirectionalLight",
    "name": "DirectionalLight",
    "kind": "constructor",
    "memberof": "<anonymous>~DirectionalLight",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "defaultvalue": "(1, 1, 1)",
        "description": "The color of the light",
        "name": "color"
      }
    ],
    "order": 1847
  },
  {
    "id": "<anonymous>~Light()",
    "longname": "<anonymous>~Light",
    "name": "Light",
    "kind": "constructor",
    "memberof": "<anonymous>~Light",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "defaultvalue": "(1, 1, 1)",
        "description": "The color of the light",
        "name": "color"
      }
    ],
    "order": 1851
  },
  {
    "id": "<anonymous>~PointLight()",
    "longname": "<anonymous>~PointLight",
    "name": "PointLight",
    "kind": "constructor",
    "memberof": "<anonymous>~PointLight",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "defaultvalue": "(1, 1, 1)",
        "description": "The color of the light",
        "name": "color"
      }
    ],
    "order": 1860
  },
  {
    "id": "<anonymous>~SpotLight()",
    "longname": "<anonymous>~SpotLight",
    "name": "SpotLight",
    "kind": "constructor",
    "memberof": "<anonymous>~SpotLight",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "defaultvalue": "(1, 1, 1)",
        "description": "The color of the light",
        "name": "color"
      }
    ],
    "order": 1864
  },
  {
    "id": "<anonymous>~Material()",
    "longname": "<anonymous>~Material",
    "name": "Material",
    "kind": "constructor",
    "memberof": "<anonymous>~Material",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'Default Material'",
        "description": "Material name",
        "name": "name"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "Optional shader to associate with the material",
        "name": "shaderDefinition"
      }
    ],
    "order": 1872
  },
  {
    "id": "<anonymous>~MeshData()",
    "longname": "<anonymous>~MeshData",
    "name": "MeshData",
    "kind": "constructor",
    "memberof": "<anonymous>~MeshData",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Describes which buffers to use and their format/sizes",
        "name": "attributeMap"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Number of vertices in buffer",
        "name": "vertexCount"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Number of indices in buffer",
        "name": "indexCount"
      }
    ],
    "order": 1896
  },
  {
    "id": "<anonymous>~Composer()",
    "longname": "<anonymous>~Composer",
    "name": "Composer",
    "kind": "constructor",
    "memberof": "<anonymous>~Composer",
    "params": [
      {
        "type": {
          "names": [
            "RenderTarget"
          ]
        },
        "description": "Data to wrap",
        "name": "renderTarget"
      }
    ],
    "order": 1925
  },
  {
    "id": "<anonymous>~FullscreenPass()",
    "longname": "<anonymous>~FullscreenPass",
    "name": "FullscreenPass",
    "kind": "constructor",
    "memberof": "<anonymous>~FullscreenPass",
    "params": [
      {
        "name": "shader"
      }
    ],
    "order": 1929
  },
  {
    "id": "<anonymous>~Pass()",
    "longname": "<anonymous>~Pass",
    "name": "Pass",
    "kind": "constructor",
    "description": "Base pass class",
    "memberof": "<anonymous>~Pass",
    "params": [],
    "order": 1932
  },
  {
    "id": "<anonymous>~RenderTarget()",
    "longname": "<anonymous>~RenderTarget",
    "name": "RenderTarget",
    "kind": "constructor",
    "memberof": "<anonymous>~RenderTarget",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Width of rendertarget",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Height of rendertarget",
        "name": "height"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Options",
        "name": "options"
      }
    ],
    "order": 1935
  },
  {
    "id": "<anonymous>~Renderer()",
    "longname": "<anonymous>~Renderer",
    "name": "Renderer",
    "kind": "constructor",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Renderer settings.",
        "name": "parameters"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Enables the possibility to render non-opaque pixels.",
        "name": "parameters.alpha"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Whether the colors are premultiplied with the alpha channel.",
        "name": "parameters.premultipliedAlpha"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Enables antialiasing.",
        "name": "parameters.antialias"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Enables the stencil buffer.",
        "name": "parameters.stencil"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "parameters.preserveDrawingBuffer"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Take into account the device pixel ratio (for retina screens etc).",
        "name": "parameters.useDevicePixelRatio"
      },
      {
        "type": {
          "names": [
            "canvas"
          ]
        },
        "optional": true,
        "description": "If not supplied, Renderer will create a new canvas.",
        "name": "parameters.canvas"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "Called with message when error occurs. Provides a string argument.",
        "name": "parameters.onError"
      }
    ],
    "order": 1939
  },
  {
    "id": "<anonymous>~Shader()",
    "longname": "<anonymous>~Shader",
    "name": "Shader",
    "kind": "constructor",
    "memberof": "<anonymous>~Shader",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Shader name (mostly for debug/tool use)",
        "name": "name"
      },
      {
        "type": {
          "names": [
            "ShaderDefinition"
          ]
        },
        "description": "Shader data\n\n<code>\n{\n   vshader: [required] vertex shader source\n   fshader: [required] fragment shader source\n   defines : shader definitions (becomes #define)\n   attributes : attribute bindings\n      attribute bindings need to map to an attribute in the meshdata being rendered\n   uniforms : uniform bindings\n      uniform bindings can be a value (like 2.5 or [1, 2]) or a function\n}\n</code>",
        "name": "shaderDefinition"
      }
    ],
    "order": 2028
  },
  {
    "id": "<anonymous>~ShaderFragment()",
    "longname": "<anonymous>~ShaderFragment",
    "name": "ShaderFragment",
    "kind": "constructor",
    "description": "Collection of useful shader fragments",
    "memberof": "<anonymous>~ShaderFragment",
    "params": [],
    "order": 2042
  },
  {
    "id": "<anonymous>~SimplePartitioner()",
    "longname": "<anonymous>~SimplePartitioner",
    "name": "SimplePartitioner",
    "kind": "constructor",
    "description": "Culls entities based on camera frustum and boundings",
    "memberof": "<anonymous>~SimplePartitioner",
    "params": [],
    "order": 2047
  },
  {
    "id": "<anonymous>~Texture()",
    "longname": "<anonymous>~Texture",
    "name": "Texture",
    "kind": "constructor",
    "memberof": "<anonymous>~Texture",
    "params": [
      {
        "type": {
          "names": [
            "Image"
          ]
        },
        "description": "Image to use as base for texture",
        "name": "image"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Texturing settings",
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'Repeat'",
        "description": "possible values:\n\t\t<ul>\n\t\t\t<li>'Repeat' = Repeat texture (ignore integer part of texture coords)\n\t\t\t<li>'MirroredRepeat' = Repeat with reversed direction on odd integer part of texture coords\n\t\t\t<li>'EdgeClamp' = Clamp texture coord range to 0..1 and use edge color\n\t\t</ul>",
        "name": "settings.wrapS"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'Repeat'",
        "description": "possible values:\n\t\t<ul>\n\t\t\t<li>'Repeat' = Repeat texture (ignore integer part of texture coords)\n\t\t\t<li>'MirroredRepeat' = Repeat with reversed direction on odd integer part of texture coords\n\t\t\t<li>'EdgeClamp' = Clamp texture coord range to 0..1 and use edge color\n\t\t</ul>",
        "name": "settings.wrapT"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'Bilinear'",
        "description": "possible values:\n\t\t<ul>\n\t\t\t<li>'NearestNeighbor' =\n\t\t\t<li>'Bilinear' =\n\t\t</ul>",
        "name": "settings.magFilter"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'TriLinear'",
        "description": "possible values:\n\t\t<ul>\n\t\t\t<li>'NearestNeighborNoMipMaps' =\n\t\t\t<li>'NearestNeighborNearestMipMap' =\n\t\t\t<li>'NearestNeighborLinearMipMap' =\n\t\t\t<li>'BilinearNoMipMaps' =\n\t\t\t<li>'BilinearNearestMipMap' =\n\t\t\t<li>'Trilinear' =\n\t\t</ul>",
        "name": "settings.minFilter"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Amount of anisotropic filtering (1=1x, 4=4x etc, max usually 4 or 16. Card max in Capabilities.maxAnisotropy)",
        "name": "settings.anisotropy"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'RGBA'",
        "description": "possible values:\n\t\t<ul>\n\t\t\t<li>'RGBA' =\n\t\t\t<li>'RGB' =\n\t\t\t<li>'Alpha' =\n\t\t\t<li>'Luminance' =\n\t\t\t<li>'LuminanceAlpha' =\n\t\t</ul>",
        "name": "settings.format"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'UnsignedByte'",
        "description": "possible values:\n\t\t<ul>\n\t\t\t<li>'UnsignedByte' =\n\t\t\t<li>'UnsignedShort565' =\n\t\t\t<li>'UnsignedShort4444' =\n\t\t\t<li>'UnsignedShort5551' =\n\t\t\t<li>'Float' =\n\t\t</ul>",
        "name": "settings.type"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "defaultvalue": "(0, 0)",
        "description": "Texture offset",
        "name": "settings.offset"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "defaultvalue": "(1, 1)",
        "description": "Texture repeat/scale",
        "name": "settings.repeat"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": "'true'",
        "description": "Automatically generate mipmaps",
        "name": "settings.generateMipmaps"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": "'false'",
        "description": "Premultiply alpha",
        "name": "settings.premultiplyAlpha"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Unpack alignment setting",
        "name": "settings.unpackAlignment"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": "'true'",
        "description": "Flip texture in y-axis",
        "name": "settings.flipY"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Width of the texture",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Height of the texture",
        "name": "height"
      }
    ],
    "order": 2050
  },
  {
    "id": "<anonymous>~TextureCreator()",
    "longname": "<anonymous>~TextureCreator",
    "name": "TextureCreator",
    "kind": "constructor",
    "memberof": "<anonymous>~TextureCreator",
    "params": [
      {
        "type": {
          "names": [
            "Settings"
          ]
        },
        "description": "Texturing settings",
        "name": "settings"
      }
    ],
    "order": 2060
  },
  {
    "id": "<anonymous>~AxisAlignedCamControlScript()",
    "longname": "<anonymous>~AxisAlignedCamControlScript",
    "name": "AxisAlignedCamControlScript",
    "kind": "constructor",
    "description": "Axis aligned camera control script",
    "memberof": "<anonymous>~AxisAlignedCamControlScript",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "order": 2067
  },
  {
    "id": "<anonymous>~BasicControlScript()",
    "longname": "<anonymous>~BasicControlScript",
    "name": "BasicControlScript",
    "kind": "constructor",
    "memberof": "<anonymous>~BasicControlScript",
    "params": [
      {
        "type": {
          "names": [
            "Element"
          ]
        },
        "description": "Element to add mouse/key listeners to",
        "name": "domElement"
      }
    ],
    "order": 2069
  },
  {
    "id": "<anonymous>~ButtonScript()",
    "longname": "<anonymous>~ButtonScript",
    "name": "ButtonScript",
    "kind": "constructor",
    "description": "Attaches mouse events to an entity.",
    "memberof": "<anonymous>~ButtonScript",
    "params": [],
    "order": 2073
  },
  {
    "id": "<anonymous>~HeightMapBoundingScript()",
    "longname": "<anonymous>~HeightMapBoundingScript",
    "name": "HeightMapBoundingScript",
    "kind": "constructor",
    "memberof": "<anonymous>~HeightMapBoundingScript",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "The height data. Needs to be power of two.",
        "name": "matrixData"
      }
    ],
    "order": 2097
  },
  {
    "id": "<anonymous>~LensFlareScript()",
    "longname": "<anonymous>~LensFlareScript",
    "name": "LensFlareScript",
    "kind": "constructor",
    "description": "This script makes an entity shine with some lensflare effect.",
    "memberof": "<anonymous>~LensFlareScript",
    "params": [],
    "order": 2100
  },
  {
    "id": "<anonymous>~PolyBoundingScript()",
    "longname": "<anonymous>~PolyBoundingScript",
    "name": "PolyBoundingScript",
    "kind": "constructor",
    "memberof": "<anonymous>~PolyBoundingScript",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "An array of `collidables` - objects with a bounding polygon on the XZ-plane, a top and a bottom Y coordinate",
        "name": "collidables"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "An array of XZ coordinates representing the bounding polygon of the `collidable`",
        "name": "collidables[].poly"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The bottom Y coordinate of the collidable",
        "name": "collidables[].bottom"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The top Y coordinate of the collidable",
        "name": "collidables[].top"
      }
    ],
    "order": 2102
  },
  {
    "id": "<anonymous>~SparseHeightMapBoundingScript()",
    "longname": "<anonymous>~SparseHeightMapBoundingScript",
    "name": "SparseHeightMapBoundingScript",
    "kind": "constructor",
    "memberof": "<anonymous>~SparseHeightMapBoundingScript",
    "params": [
      {
        "type": {
          "names": [
            "Array.<Number>"
          ]
        },
        "description": "The array of height points given as a flat array",
        "name": "elevationData"
      }
    ],
    "order": 2132
  },
  {
    "id": "<anonymous>~Box()",
    "longname": "<anonymous>~Box",
    "name": "Box",
    "kind": "constructor",
    "memberof": "<anonymous>~Box",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total width of box.",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total height of box.",
        "name": "height"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total length of box.",
        "name": "length"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Number of texture repetitions in the texture's x direction.",
        "name": "tileX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Number of texture repetitions in the texture's y direction.",
        "name": "tileY"
      },
      {
        "type": {
          "names": [
            "Enum"
          ]
        },
        "optional": true,
        "defaultvalue": "Box.TextureModes.Uniform",
        "description": "Texture wrapping mode.",
        "name": "textureMode"
      }
    ],
    "order": 2145
  },
  {
    "id": "<anonymous>~Cone()",
    "longname": "<anonymous>~Cone",
    "name": "Cone",
    "kind": "constructor",
    "memberof": "<anonymous>~Cone",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 8,
        "description": "Number of slices",
        "name": "radialSamples"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Radius of the cone",
        "name": "radius"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 2,
        "description": "The height of the cone",
        "name": "height"
      }
    ],
    "order": 2156
  },
  {
    "id": "<anonymous>~Cylinder()",
    "longname": "<anonymous>~Cylinder",
    "name": "Cylinder",
    "kind": "constructor",
    "memberof": "<anonymous>~Cylinder",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 8,
        "description": "Number of slices",
        "name": "radialSamples"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.5,
        "description": "Radius of the cylinder at the top.",
        "name": "radiusTop"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": "radiusTop",
        "description": "Radius of the cylinder at the bottom. Defaults to radiusTop.",
        "name": "radiusBottom"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Height",
        "name": "height"
      }
    ],
    "order": 2160
  },
  {
    "id": "<anonymous>~Disk()",
    "longname": "<anonymous>~Disk",
    "name": "Disk",
    "kind": "constructor",
    "memberof": "<anonymous>~Disk",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 8,
        "description": "Number of slices",
        "name": "nSegments"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Radius of the disk",
        "name": "radius"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "The center of the disk can be offset in both directions from its outer edge by setting a positive or negative pointiness.",
        "name": "pointiness"
      }
    ],
    "order": 2164
  },
  {
    "id": "<anonymous>~Grid()",
    "longname": "<anonymous>~Grid",
    "name": "Grid",
    "kind": "constructor",
    "memberof": "<anonymous>~Grid",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 10,
        "description": "Number of columns.",
        "name": "xSegments"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 10,
        "description": "Number of rows.",
        "name": "ySegments"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total width of the Grid.",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total height of the Grid.",
        "name": "height"
      }
    ],
    "examples": [
      "var meshData = new Grid( 10, 10, 10, 10);"
    ],
    "order": 2168
  },
  {
    "id": "<anonymous>~Quad()",
    "longname": "<anonymous>~Quad",
    "name": "Quad",
    "kind": "constructor",
    "memberof": "<anonymous>~Quad",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total width of quad.",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total height of quad.",
        "name": "height"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Number of texture repetitions in the texture's x direction.",
        "name": "tileX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Number of texture repetitions in the texture's y direction.",
        "name": "tileY"
      }
    ],
    "order": 2171
  },
  {
    "id": "<anonymous>~SimpleBox()",
    "longname": "<anonymous>~SimpleBox",
    "name": "SimpleBox",
    "kind": "constructor",
    "memberof": "<anonymous>~SimpleBox",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total width of box.",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total height of box.",
        "name": "height"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Total length of box.",
        "name": "length"
      }
    ],
    "order": 2179
  },
  {
    "id": "<anonymous>~Sphere()",
    "longname": "<anonymous>~Sphere",
    "name": "Sphere",
    "kind": "constructor",
    "memberof": "<anonymous>~Sphere",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 8,
        "description": "Number of segments.",
        "name": "zSamples"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 8,
        "description": "Number of slices.",
        "name": "radialSamples"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.5,
        "description": "Radius.",
        "name": "radius"
      },
      {
        "type": {
          "names": [
            "Enum"
          ]
        },
        "optional": true,
        "defaultvalue": "Sphere.TextureModes.Polar",
        "description": "Texture wrapping mode.",
        "name": "textureMode"
      }
    ],
    "order": 2183
  },
  {
    "id": "<anonymous>~TextureGrid()",
    "longname": "<anonymous>~TextureGrid",
    "name": "TextureGrid",
    "kind": "constructor",
    "memberof": "<anonymous>~TextureGrid",
    "params": [
      {
        "name": "matrix"
      },
      {
        "name": "textureUnitsPerLine"
      }
    ],
    "order": 2193
  },
  {
    "id": "<anonymous>~Torus()",
    "longname": "<anonymous>~Torus",
    "name": "Torus",
    "kind": "constructor",
    "memberof": "<anonymous>~Torus",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 8,
        "description": "Number of segments.",
        "name": "circleSamples"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 8,
        "description": "Number of slices.",
        "name": "radialSamples"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Radius of tube.",
        "name": "tubeRadius"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 2,
        "description": "Radius from center.",
        "name": "centerRadius"
      }
    ],
    "order": 2197
  },
  {
    "id": "<anonymous>~Sound()",
    "longname": "<anonymous>~Sound",
    "name": "Sound",
    "kind": "constructor",
    "description": "A representation of a sound in the engine",
    "memberof": "<anonymous>~Sound",
    "params": [],
    "order": 2203
  },
  {
    "id": "<anonymous>~Ajax()",
    "longname": "<anonymous>~Ajax",
    "name": "Ajax",
    "kind": "constructor",
    "memberof": "<anonymous>~Ajax",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "rootPath"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "order": 2242
  },
  {
    "id": "<anonymous>~ArrayUtils()",
    "longname": "<anonymous>~ArrayUtils",
    "name": "ArrayUtils",
    "kind": "constructor",
    "description": "Utilities for arrays and typed arrays",
    "memberof": "<anonymous>~ArrayUtils",
    "params": [],
    "order": 2249
  },
  {
    "id": "<anonymous>~CanvasUtils()",
    "longname": "<anonymous>~CanvasUtils",
    "name": "CanvasUtils",
    "kind": "constructor",
    "description": "Provides useful canvas-related methods",
    "memberof": "<anonymous>~CanvasUtils",
    "params": [],
    "order": 2255
  },
  {
    "id": "<anonymous>~AtlasNode()",
    "longname": "<anonymous>~AtlasNode",
    "name": "AtlasNode",
    "kind": "constructor",
    "memberof": "<anonymous>~AtlasNode",
    "params": [
      {
        "name": "w"
      },
      {
        "name": "h"
      }
    ],
    "order": 2261
  },
  {
    "id": "<anonymous>~EntityCombiner()",
    "longname": "<anonymous>~EntityCombiner",
    "name": "EntityCombiner",
    "kind": "constructor",
    "memberof": "<anonymous>~EntityCombiner",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "An instance of a goo.world object",
        "name": "gooWorld"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Number of grid segments to split the world in during combine",
        "name": "gridCount"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Remove old data which is now unused after combining",
        "name": "removeOldData"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Keep all entities even if they are unused after combine",
        "name": "keepEntities"
      }
    ],
    "order": 2263
  },
  {
    "id": "Rectangle()",
    "longname": "Rectangle",
    "name": "Rectangle",
    "kind": "constructor",
    "memberof": "Rectangle",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Width",
        "name": "w"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Height",
        "name": "h"
      }
    ],
    "order": 2266
  },
  {
    "id": "<anonymous>~Gizmo()",
    "longname": "<anonymous>~Gizmo",
    "name": "Gizmo",
    "kind": "constructor",
    "description": "Gizmo.",
    "memberof": "<anonymous>~Gizmo",
    "params": [],
    "order": 2287
  },
  {
    "id": "Skybox()",
    "longname": "Skybox",
    "name": "Skybox",
    "kind": "constructor",
    "memberof": "Skybox",
    "params": [
      {
        "name": "type"
      },
      {
        "name": "images"
      },
      {
        "name": "textureMode"
      },
      {
        "name": "yRotation"
      }
    ],
    "order": 2339
  },
  {
    "id": "Snow()",
    "longname": "Snow",
    "name": "Snow",
    "kind": "constructor",
    "memberof": "Snow",
    "params": [
      {
        "type": {
          "names": [
            "GooRunner"
          ]
        },
        "name": "gooRunner"
      }
    ],
    "order": 2341
  },
  {
    "id": "Rectangle",
    "longname": "Rectangle",
    "name": "Rectangle",
    "scope": "global",
    "kind": "class",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 4,
      "filename": "Rectangle.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/combine"
    },
    "order": 2265
  },
  {
    "id": "Skybox",
    "longname": "Skybox",
    "name": "Skybox",
    "scope": "global",
    "kind": "class",
    "meta": {
      "lineno": 20,
      "filename": "Skybox.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2338
  },
  {
    "id": "Snow",
    "longname": "Snow",
    "name": "Snow",
    "scope": "global",
    "kind": "class",
    "meta": {
      "lineno": 22,
      "filename": "Snow.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2340
  },
  {
    "id": "<anonymous>~LineRenderSystem#renderList",
    "longname": "<anonymous>~LineRenderSystem#renderList",
    "name": "renderList",
    "scope": "instance",
    "kind": "member",
    "description": "A managed array of all the LineRenderers render objects.",
    "memberof": "<anonymous>~LineRenderSystem",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "lineno": 35,
      "filename": "LineRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 46
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#entity",
    "longname": "<anonymous>~ParticleSystemComponent#entity",
    "name": "entity",
    "scope": "instance",
    "kind": "member",
    "description": "The entity which the component is attached on. Will be set when the component is attached to the entity.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "type": {
      "names": [
        "Entity",
        "null"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 320,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 57
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#paused",
    "longname": "<anonymous>~ParticleSystemComponent#paused",
    "name": "paused",
    "scope": "instance",
    "kind": "member",
    "description": "Use the pause/play/stop methods if you want to modify the state.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": "false",
    "readonly": true,
    "meta": {
      "lineno": 328,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 58
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#autoPlay",
    "longname": "<anonymous>~ParticleSystemComponent#autoPlay",
    "name": "autoPlay",
    "scope": "instance",
    "kind": "member",
    "description": "Whether to start playing when the ParticleSystemSystem plays.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": "true",
    "meta": {
      "lineno": 335,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 59
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#particles",
    "longname": "<anonymous>~ParticleSystemComponent#particles",
    "name": "particles",
    "scope": "instance",
    "kind": "member",
    "description": "The current particles in the system.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "type": {
      "names": [
        "Array.<ParticleData>"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 342,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 60
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#particlesSorted",
    "longname": "<anonymous>~ParticleSystemComponent#particlesSorted",
    "name": "particlesSorted",
    "scope": "instance",
    "kind": "member",
    "description": "The particles in the system, sorted according to the sortMode.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "type": {
      "names": [
        "Array.<ParticleData>"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 349,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 61
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#time",
    "longname": "<anonymous>~ParticleSystemComponent#time",
    "name": "time",
    "scope": "instance",
    "kind": "member",
    "description": "Current time in the system.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 356,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 62
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#gravity",
    "longname": "<anonymous>~ParticleSystemComponent#gravity",
    "name": "gravity",
    "scope": "instance",
    "kind": "member",
    "description": "Force that makes particles fall.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 362,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 63
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#boxExtents",
    "longname": "<anonymous>~ParticleSystemComponent#boxExtents",
    "name": "boxExtents",
    "scope": "instance",
    "kind": "member",
    "description": "Extents of the box, if box shape is used. Read only. To change it, see the method setBoxExtents().",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 369,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 64
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#startColorScale",
    "longname": "<anonymous>~ParticleSystemComponent#startColorScale",
    "name": "startColorScale",
    "scope": "instance",
    "kind": "member",
    "description": "Acts as a scale on the color curve. Should be used at runtime.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "type": {
      "names": [
        "Vector4"
      ]
    },
    "todoList": [
      {
        "done": false,
        "task": "rename to color?"
      }
    ],
    "meta": {
      "lineno": 376,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 65
  },
  {
    "id": "ParticleSystemComponent#billboard",
    "longname": "ParticleSystemComponent#billboard",
    "name": "billboard",
    "scope": "instance",
    "kind": "member",
    "description": "If set to true, the particles will always face the camera.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 444,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 68
  },
  {
    "id": "ParticleSystemComponent#blending",
    "longname": "ParticleSystemComponent#blending",
    "name": "blending",
    "scope": "instance",
    "kind": "member",
    "description": "What type of blending to use for the particle mesh.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 463,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 69
  },
  {
    "id": "ParticleSystemComponent#colorOverLifetime",
    "longname": "ParticleSystemComponent#colorOverLifetime",
    "name": "colorOverLifetime",
    "scope": "instance",
    "kind": "member",
    "description": "Color of particles, as a curve over their life time.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Vector4Curve",
        "null"
      ]
    },
    "meta": {
      "lineno": 477,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 70
  },
  {
    "id": "ParticleSystemComponent#coneAngle",
    "longname": "ParticleSystemComponent#coneAngle",
    "name": "coneAngle",
    "scope": "instance",
    "kind": "member",
    "description": "Angle of the cone, if cone shape is used.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 492,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 71
  },
  {
    "id": "ParticleSystemComponent#coneEmitFrom",
    "longname": "ParticleSystemComponent#coneEmitFrom",
    "name": "coneEmitFrom",
    "scope": "instance",
    "kind": "member",
    "description": "Where to emit from, if using the cone shape. Set to 'base', 'volume' or 'volumeshell'.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 507,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 72
  },
  {
    "id": "ParticleSystemComponent#coneLength",
    "longname": "ParticleSystemComponent#coneLength",
    "name": "coneLength",
    "scope": "instance",
    "kind": "member",
    "description": "Length of the cone, if cone shape is used.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 522,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 73
  },
  {
    "id": "ParticleSystemComponent#coneRadius",
    "longname": "ParticleSystemComponent#coneRadius",
    "name": "coneRadius",
    "scope": "instance",
    "kind": "member",
    "description": "Radius of the cone, if cone shape is used.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 537,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 74
  },
  {
    "id": "ParticleSystemComponent#depthTest",
    "longname": "ParticleSystemComponent#depthTest",
    "name": "depthTest",
    "scope": "instance",
    "kind": "member",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 551,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 75
  },
  {
    "id": "ParticleSystemComponent#depthWrite",
    "longname": "ParticleSystemComponent#depthWrite",
    "name": "depthWrite",
    "scope": "instance",
    "kind": "member",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 564,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 76
  },
  {
    "id": "ParticleSystemComponent#discardThreshold",
    "longname": "ParticleSystemComponent#discardThreshold",
    "name": "discardThreshold",
    "scope": "instance",
    "kind": "member",
    "description": "At what alpha threshold should the fragments be discarded?",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 578,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 77
  },
  {
    "id": "ParticleSystemComponent#duration",
    "longname": "ParticleSystemComponent#duration",
    "name": "duration",
    "scope": "instance",
    "kind": "member",
    "description": "The time for a full animation cycle of the emission.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 592,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 78
  },
  {
    "id": "ParticleSystemComponent#emissionRate",
    "longname": "ParticleSystemComponent#emissionRate",
    "name": "emissionRate",
    "scope": "instance",
    "kind": "member",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Curve"
      ]
    },
    "meta": {
      "lineno": 606,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 79
  },
  {
    "id": "ParticleSystemComponent#localSpace",
    "longname": "ParticleSystemComponent#localSpace",
    "name": "localSpace",
    "scope": "instance",
    "kind": "member",
    "description": "If set to true, the partiles will be simulated in local entity space. If set to false, world space is used.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 621,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 80
  },
  {
    "id": "ParticleSystemComponent#localVelocityOverLifetime",
    "longname": "ParticleSystemComponent#localVelocityOverLifetime",
    "name": "localVelocityOverLifetime",
    "scope": "instance",
    "kind": "member",
    "description": "The velocity of particles in local particle space.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Vector3Curve",
        "null"
      ]
    },
    "meta": {
      "lineno": 640,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 81
  },
  {
    "id": "ParticleSystemComponent#loop",
    "longname": "ParticleSystemComponent#loop",
    "name": "loop",
    "scope": "instance",
    "kind": "member",
    "description": "Whether to loop the particle emission after one duration cycle.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 655,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 82
  },
  {
    "id": "ParticleSystemComponent#maxParticles",
    "longname": "ParticleSystemComponent#maxParticles",
    "name": "maxParticles",
    "scope": "instance",
    "kind": "member",
    "description": "Maximum number of particles visible at the same time.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 670,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 83
  },
  {
    "id": "ParticleSystemComponent#mesh",
    "longname": "ParticleSystemComponent#mesh",
    "name": "mesh",
    "scope": "instance",
    "kind": "member",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "MeshData"
      ]
    },
    "meta": {
      "lineno": 694,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 84
  },
  {
    "id": "ParticleSystemComponent#preWarm",
    "longname": "ParticleSystemComponent#preWarm",
    "name": "preWarm",
    "scope": "instance",
    "kind": "member",
    "description": "Pre-warm the emission (fast forward time one duration). Not available if looping is on.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 715,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 85
  },
  {
    "id": "ParticleSystemComponent#randomDirection",
    "longname": "ParticleSystemComponent#randomDirection",
    "name": "randomDirection",
    "scope": "instance",
    "kind": "member",
    "description": "Emit in random directions, instead of in the emitter volume direction.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 730,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 86
  },
  {
    "id": "ParticleSystemComponent#renderQueue",
    "longname": "ParticleSystemComponent#renderQueue",
    "name": "renderQueue",
    "scope": "instance",
    "kind": "member",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 744,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 87
  },
  {
    "id": "ParticleSystemComponent#rotationSpeedOverLifetime",
    "longname": "ParticleSystemComponent#rotationSpeedOverLifetime",
    "name": "rotationSpeedOverLifetime",
    "scope": "instance",
    "kind": "member",
    "description": "The rotation speed in radians per second, specified using a curve over the particle life time.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Curve",
        "null"
      ]
    },
    "meta": {
      "lineno": 758,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 88
  },
  {
    "id": "ParticleSystemComponent#rotationSpeedScale",
    "longname": "ParticleSystemComponent#rotationSpeedScale",
    "name": "rotationSpeedScale",
    "scope": "instance",
    "kind": "member",
    "description": "Acts as a scale on the rotationSpeed curve.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 773,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 89
  },
  {
    "id": "ParticleSystemComponent#seed",
    "longname": "ParticleSystemComponent#seed",
    "name": "seed",
    "scope": "instance",
    "kind": "member",
    "description": "Randomization seed.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 787,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 90
  },
  {
    "id": "ParticleSystemComponent#shapeType",
    "longname": "ParticleSystemComponent#shapeType",
    "name": "shapeType",
    "scope": "instance",
    "kind": "member",
    "description": "Emitter volume. Set to 'sphere', 'cone', or 'box'.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 804,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 91
  },
  {
    "id": "ParticleSystemComponent#sizeOverLifetime",
    "longname": "ParticleSystemComponent#sizeOverLifetime",
    "name": "sizeOverLifetime",
    "scope": "instance",
    "kind": "member",
    "description": "This curve alters the size of particles over their life time.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Curve",
        "null"
      ]
    },
    "meta": {
      "lineno": 819,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 92
  },
  {
    "id": "ParticleSystemComponent#sortMode",
    "longname": "ParticleSystemComponent#sortMode",
    "name": "sortMode",
    "scope": "instance",
    "kind": "member",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 833,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 93
  },
  {
    "id": "ParticleSystemComponent#sphereEmitFromShell",
    "longname": "ParticleSystemComponent#sphereEmitFromShell",
    "name": "sphereEmitFromShell",
    "scope": "instance",
    "kind": "member",
    "description": "Whether to emit from the sphere shell, if sphere shape is used.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 854,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 94
  },
  {
    "id": "ParticleSystemComponent#startAngle",
    "longname": "ParticleSystemComponent#startAngle",
    "name": "startAngle",
    "scope": "instance",
    "kind": "member",
    "description": "The initial angle of particles, as a curve over the emitter duration.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Curve",
        "null"
      ]
    },
    "meta": {
      "lineno": 869,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 95
  },
  {
    "id": "ParticleSystemComponent#startAngleScale",
    "longname": "ParticleSystemComponent#startAngleScale",
    "name": "startAngleScale",
    "scope": "instance",
    "kind": "member",
    "description": "Acts as a scale on the startAngle curve.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 884,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 96
  },
  {
    "id": "ParticleSystemComponent#startColor",
    "longname": "ParticleSystemComponent#startColor",
    "name": "startColor",
    "scope": "instance",
    "kind": "member",
    "description": "The initial color of particles as a color curve over the emitter duration.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Vector4Curve",
        "null"
      ]
    },
    "meta": {
      "lineno": 898,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 97
  },
  {
    "id": "ParticleSystemComponent#startLifetime",
    "longname": "ParticleSystemComponent#startLifetime",
    "name": "startLifetime",
    "scope": "instance",
    "kind": "member",
    "description": "Initial life time of particles, as a curve over the emitter duration.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Curve",
        "null"
      ]
    },
    "meta": {
      "lineno": 913,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 98
  },
  {
    "id": "ParticleSystemComponent#startSize",
    "longname": "ParticleSystemComponent#startSize",
    "name": "startSize",
    "scope": "instance",
    "kind": "member",
    "description": "Initial size of particles, as a curve over the emitter duration.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Curve",
        "null"
      ]
    },
    "meta": {
      "lineno": 928,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 99
  },
  {
    "id": "ParticleSystemComponent#startSizeScale",
    "longname": "ParticleSystemComponent#startSizeScale",
    "name": "startSizeScale",
    "scope": "instance",
    "kind": "member",
    "description": "Acts as a scale on the startSize curve.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "todoList": [
      {
        "done": false,
        "task": "should this be .scale?"
      }
    ],
    "meta": {
      "lineno": 944,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 100
  },
  {
    "id": "ParticleSystemComponent#startSpeed",
    "longname": "ParticleSystemComponent#startSpeed",
    "name": "startSpeed",
    "scope": "instance",
    "kind": "member",
    "description": "Initial speed of the particles, described by a curve over the emitter duration.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Curve",
        "null"
      ]
    },
    "meta": {
      "lineno": 958,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 101
  },
  {
    "id": "ParticleSystemComponent#texture",
    "longname": "ParticleSystemComponent#texture",
    "name": "texture",
    "scope": "instance",
    "kind": "member",
    "description": "A texture for the particles.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Texture",
        "null"
      ]
    },
    "meta": {
      "lineno": 973,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 102
  },
  {
    "id": "ParticleSystemComponent#textureAnimationCycles",
    "longname": "ParticleSystemComponent#textureAnimationCycles",
    "name": "textureAnimationCycles",
    "scope": "instance",
    "kind": "member",
    "description": "How fast the texture animation should cycle. Acts as a scale on the textureFrameOverLifetime curve.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 995,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 103
  },
  {
    "id": "ParticleSystemComponent#textureFrameOverLifetime",
    "longname": "ParticleSystemComponent#textureFrameOverLifetime",
    "name": "textureFrameOverLifetime",
    "scope": "instance",
    "kind": "member",
    "description": "The current texture frame, given by a curve over the particle life time.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Curve",
        "null"
      ]
    },
    "meta": {
      "lineno": 1009,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 104
  },
  {
    "id": "ParticleSystemComponent#textureTilesX",
    "longname": "ParticleSystemComponent#textureTilesX",
    "name": "textureTilesX",
    "scope": "instance",
    "kind": "member",
    "description": "Texture tiling in the X direction.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 1024,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 105
  },
  {
    "id": "ParticleSystemComponent#textureTilesY",
    "longname": "ParticleSystemComponent#textureTilesY",
    "name": "textureTilesY",
    "scope": "instance",
    "kind": "member",
    "description": "Texture tiling in the Y direction.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 1038,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 106
  },
  {
    "id": "ParticleSystemComponent#worldVelocityOverLifetime",
    "longname": "ParticleSystemComponent#worldVelocityOverLifetime",
    "name": "worldVelocityOverLifetime",
    "scope": "instance",
    "kind": "member",
    "description": "Velocity of particles in world space.",
    "memberof": "ParticleSystemComponent",
    "type": {
      "names": [
        "Vector3Curve",
        "null"
      ]
    },
    "meta": {
      "lineno": 1052,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 107
  },
  {
    "id": "<anonymous>~ConstantCurve#value",
    "longname": "<anonymous>~ConstantCurve#value",
    "name": "value",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ConstantCurve",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 25,
      "filename": "ConstantCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 129
  },
  {
    "id": "<anonymous>~Curve#type",
    "longname": "<anonymous>~Curve#type",
    "name": "type",
    "scope": "instance",
    "kind": "member",
    "description": "The value type. Should be 'float', 'vec3' or 'vec4' to indicate which getValueAt method to use.",
    "memberof": "<anonymous>~Curve",
    "meta": {
      "lineno": 18,
      "filename": "Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 132
  },
  {
    "id": "<anonymous>~Curve#timeOffset",
    "longname": "<anonymous>~Curve#timeOffset",
    "name": "timeOffset",
    "scope": "instance",
    "kind": "member",
    "description": "The offset of this curve, when used in a PolyCurve. Needs to be a number between 0 and 1.",
    "memberof": "<anonymous>~Curve",
    "type": {
      "names": [
        "Number"
      ]
    },
    "meta": {
      "lineno": 24,
      "filename": "Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 133
  },
  {
    "id": "<anonymous>~LerpCurve#curveA",
    "longname": "<anonymous>~LerpCurve#curveA",
    "name": "curveA",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~LerpCurve",
    "type": {
      "names": [
        "Curve"
      ]
    },
    "meta": {
      "lineno": 28,
      "filename": "LerpCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 143
  },
  {
    "id": "<anonymous>~LerpCurve#curveB",
    "longname": "<anonymous>~LerpCurve#curveB",
    "name": "curveB",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~LerpCurve",
    "type": {
      "names": [
        "Curve"
      ]
    },
    "meta": {
      "lineno": 33,
      "filename": "LerpCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 144
  },
  {
    "id": "<anonymous>~LinearCurve#k",
    "longname": "<anonymous>~LinearCurve#k",
    "name": "k",
    "scope": "instance",
    "kind": "member",
    "description": "Slope of the line.",
    "memberof": "<anonymous>~LinearCurve",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 26,
      "filename": "LinearCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 147
  },
  {
    "id": "<anonymous>~LinearCurve#m",
    "longname": "<anonymous>~LinearCurve#m",
    "name": "m",
    "scope": "instance",
    "kind": "member",
    "description": "Value of the line when time is 0.",
    "memberof": "<anonymous>~LinearCurve",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 32,
      "filename": "LinearCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 148
  },
  {
    "id": "<anonymous>~PolyCurve#segments",
    "longname": "<anonymous>~PolyCurve#segments",
    "name": "segments",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~PolyCurve",
    "type": {
      "names": [
        "Array.<Curve>"
      ]
    },
    "meta": {
      "lineno": 24,
      "filename": "PolyCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 152
  },
  {
    "id": "<anonymous>~ParticleData#component",
    "longname": "<anonymous>~ParticleData#component",
    "name": "component",
    "scope": "instance",
    "kind": "member",
    "description": "The owner component",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 21,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 172
  },
  {
    "id": "<anonymous>~ParticleData#index",
    "longname": "<anonymous>~ParticleData#index",
    "name": "index",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 26,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 173
  },
  {
    "id": "<anonymous>~ParticleData#lifeTime",
    "longname": "<anonymous>~ParticleData#lifeTime",
    "name": "lifeTime",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 31,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 174
  },
  {
    "id": "<anonymous>~ParticleData#emitTime",
    "longname": "<anonymous>~ParticleData#emitTime",
    "name": "emitTime",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 36,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 175
  },
  {
    "id": "<anonymous>~ParticleData#active",
    "longname": "<anonymous>~ParticleData#active",
    "name": "active",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 41,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 176
  },
  {
    "id": "<anonymous>~ParticleData#startPosition",
    "longname": "<anonymous>~ParticleData#startPosition",
    "name": "startPosition",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 46,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 177
  },
  {
    "id": "<anonymous>~ParticleData#startDirection",
    "longname": "<anonymous>~ParticleData#startDirection",
    "name": "startDirection",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 51,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 178
  },
  {
    "id": "<anonymous>~ParticleData#startAngle",
    "longname": "<anonymous>~ParticleData#startAngle",
    "name": "startAngle",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 56,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 179
  },
  {
    "id": "<anonymous>~ParticleData#startSize",
    "longname": "<anonymous>~ParticleData#startSize",
    "name": "startSize",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 61,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 180
  },
  {
    "id": "<anonymous>~ParticleData#sortValue",
    "longname": "<anonymous>~ParticleData#sortValue",
    "name": "sortValue",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 66,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 181
  },
  {
    "id": "<anonymous>~ParticleData#emitRandom",
    "longname": "<anonymous>~ParticleData#emitRandom",
    "name": "emitRandom",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 71,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 182
  },
  {
    "id": "<anonymous>~ParticleData#loopAfter",
    "longname": "<anonymous>~ParticleData#loopAfter",
    "name": "loopAfter",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~ParticleData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 76,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 183
  },
  {
    "id": "<anonymous>~ParticleDebugRenderSystem#renderAll",
    "longname": "<anonymous>~ParticleDebugRenderSystem#renderAll",
    "name": "renderAll",
    "scope": "instance",
    "kind": "member",
    "description": "If set to true, all entities with a ParticleSystemComponent attached is rendered, and the selection is disregarded.",
    "memberof": "<anonymous>~ParticleDebugRenderSystem",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 46,
      "filename": "ParticleDebugRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/systems"
    },
    "order": 187
  },
  {
    "id": "<anonymous>~ParticleDebugRenderSystem#selection",
    "longname": "<anonymous>~ParticleDebugRenderSystem#selection",
    "name": "selection",
    "scope": "instance",
    "kind": "member",
    "description": "The selected entities to be rendered.",
    "memberof": "<anonymous>~ParticleDebugRenderSystem",
    "type": {
      "names": [
        "EntitySelection"
      ]
    },
    "meta": {
      "lineno": 52,
      "filename": "ParticleDebugRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/systems"
    },
    "order": 188
  },
  {
    "id": "<anonymous>~BoxCollider#halfExtents",
    "longname": "<anonymous>~BoxCollider#halfExtents",
    "name": "halfExtents",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~BoxCollider",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 24,
      "filename": "BoxCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 204
  },
  {
    "id": "<anonymous>~CylinderCollider#radius",
    "longname": "<anonymous>~CylinderCollider#radius",
    "name": "radius",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~CylinderCollider",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 23,
      "filename": "CylinderCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 213
  },
  {
    "id": "<anonymous>~CylinderCollider#height",
    "longname": "<anonymous>~CylinderCollider#height",
    "name": "height",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~CylinderCollider",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 28,
      "filename": "CylinderCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 214
  },
  {
    "id": "<anonymous>~MeshCollider#meshData",
    "longname": "<anonymous>~MeshCollider#meshData",
    "name": "meshData",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~MeshCollider",
    "type": {
      "names": [
        "MeshData"
      ]
    },
    "meta": {
      "lineno": 25,
      "filename": "MeshCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 219
  },
  {
    "id": "<anonymous>~MeshCollider#scale",
    "longname": "<anonymous>~MeshCollider#scale",
    "name": "scale",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~MeshCollider",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 30,
      "filename": "MeshCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 220
  },
  {
    "id": "<anonymous>~SphereCollider#radius",
    "longname": "<anonymous>~SphereCollider#radius",
    "name": "radius",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~SphereCollider",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 21,
      "filename": "SphereCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 229
  },
  {
    "id": "<anonymous>~AbstractColliderComponent#collider",
    "longname": "<anonymous>~AbstractColliderComponent#collider",
    "name": "collider",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~AbstractColliderComponent",
    "type": {
      "names": [
        "Collider"
      ]
    },
    "meta": {
      "lineno": 33,
      "filename": "AbstractColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 235
  },
  {
    "id": "<anonymous>~AbstractColliderComponent#worldCollider",
    "longname": "<anonymous>~AbstractColliderComponent#worldCollider",
    "name": "worldCollider",
    "scope": "instance",
    "kind": "member",
    "description": "The world-scaled version of the collider. Use .updateWorldCollider() to update it.",
    "memberof": "<anonymous>~AbstractColliderComponent",
    "type": {
      "names": [
        "Collider"
      ]
    },
    "meta": {
      "lineno": 39,
      "filename": "AbstractColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 236
  },
  {
    "id": "<anonymous>~AbstractColliderComponent#isTrigger",
    "longname": "<anonymous>~AbstractColliderComponent#isTrigger",
    "name": "isTrigger",
    "scope": "instance",
    "kind": "member",
    "description": "If the collider is a Trigger, it does not interact with other objects, but it does emit contact events.",
    "memberof": "<anonymous>~AbstractColliderComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 45,
      "filename": "AbstractColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 237
  },
  {
    "id": "<anonymous>~AbstractColliderComponent#bodyEntity",
    "longname": "<anonymous>~AbstractColliderComponent#bodyEntity",
    "name": "bodyEntity",
    "scope": "instance",
    "kind": "member",
    "description": "The entity with a rigid body component that instantiated the collider, or null if it wasn't instantiated.",
    "memberof": "<anonymous>~AbstractColliderComponent",
    "type": {
      "names": [
        "Entity"
      ]
    },
    "meta": {
      "lineno": 51,
      "filename": "AbstractColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 238
  },
  {
    "id": "<anonymous>~AbstractColliderComponent#material",
    "longname": "<anonymous>~AbstractColliderComponent#material",
    "name": "material",
    "scope": "instance",
    "kind": "member",
    "description": "The collider material.",
    "memberof": "<anonymous>~AbstractColliderComponent",
    "type": {
      "names": [
        "PhysicsMaterial"
      ]
    },
    "meta": {
      "lineno": 57,
      "filename": "AbstractColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 239
  },
  {
    "id": "<anonymous>~AbstractRigidBodyComponent#joints",
    "longname": "<anonymous>~AbstractRigidBodyComponent#joints",
    "name": "joints",
    "scope": "instance",
    "kind": "member",
    "description": "Joints on the body. Use .addJoint to add one, or .removeJoint to remove.",
    "memberof": "<anonymous>~AbstractRigidBodyComponent",
    "type": {
      "names": [
        "Array"
      ]
    },
    "meta": {
      "lineno": 30,
      "filename": "AbstractRigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 247
  },
  {
    "id": "<anonymous>~ColliderComponent#cannonBody",
    "longname": "<anonymous>~ColliderComponent#cannonBody",
    "name": "cannonBody",
    "scope": "instance",
    "kind": "member",
    "description": "The Cannon.js Body instance, if the ColliderComponent was initialized without a RigidBodyComponent.",
    "memberof": "<anonymous>~ColliderComponent",
    "type": {
      "names": [
        "CANNON.Body"
      ]
    },
    "meta": {
      "lineno": 45,
      "filename": "ColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 260
  },
  {
    "id": "<anonymous>~ColliderComponent#cannonShape",
    "longname": "<anonymous>~ColliderComponent#cannonShape",
    "name": "cannonShape",
    "scope": "instance",
    "kind": "member",
    "description": "The Cannon.js Shape instance",
    "memberof": "<anonymous>~ColliderComponent",
    "type": {
      "names": [
        "CANNON.Body"
      ]
    },
    "meta": {
      "lineno": 51,
      "filename": "ColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 261
  },
  {
    "id": "<anonymous>~RigidBodyComponent#cannonBody",
    "longname": "<anonymous>~RigidBodyComponent#cannonBody",
    "name": "cannonBody",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "CANNON.Body"
      ]
    },
    "meta": {
      "lineno": 56,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 268
  },
  {
    "id": "<anonymous>~RigidBodyComponent#_colliderEntities",
    "longname": "<anonymous>~RigidBodyComponent#_colliderEntities",
    "name": "_colliderEntities",
    "scope": "instance",
    "kind": "member",
    "description": "All the attached colliders.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "Array"
      ]
    },
    "meta": {
      "lineno": 133,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 279
  },
  {
    "id": "<anonymous>~RigidBodyComponent#interpolation",
    "longname": "<anonymous>~RigidBodyComponent#interpolation",
    "name": "interpolation",
    "scope": "instance",
    "kind": "member",
    "description": "How smoothing of the rigid body movement should be done. Set it to {@link RigidBodyComponent.NONE} or {@link RigidBodyComponent.INTERPOLATE}.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 139,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 280
  },
  {
    "id": "<anonymous>~RigidBodyComponent#_constraints",
    "longname": "<anonymous>~RigidBodyComponent#_constraints",
    "name": "_constraints",
    "scope": "instance",
    "kind": "member",
    "description": "Constraint the movement of the rigid body. Set it to RigidBodyComponent.FREEZE_NONE, RigidBodyComponent.FREEZE_POSITION_X, RigidBodyComponent.FREEZE_POSITION_Y, RigidBodyComponent.FREEZE_POSITION_Z, RigidBodyComponent.FREEZE_ROTATION_X, RigidBodyComponent.FREEZE_ROTATION_Y, RigidBodyComponent.FREEZE_ROTATION_Z, RigidBodyComponent.FREEZE_POSITION, RigidBodyComponent.FREEZE_ROTATION or RigidBodyComponent.FREEZE_ALL.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 146,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 281
  },
  {
    "id": "RigidBodyComponent#linearDamping",
    "longname": "RigidBodyComponent#linearDamping",
    "name": "linearDamping",
    "scope": "instance",
    "kind": "member",
    "memberof": "RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 448,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 312
  },
  {
    "id": "RigidBodyComponent#angularDamping",
    "longname": "RigidBodyComponent#angularDamping",
    "name": "angularDamping",
    "scope": "instance",
    "kind": "member",
    "memberof": "RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 464,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 313
  },
  {
    "id": "RigidBodyComponent#isKinematic",
    "longname": "RigidBodyComponent#isKinematic",
    "name": "isKinematic",
    "scope": "instance",
    "kind": "member",
    "memberof": "RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 480,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 314
  },
  {
    "id": "RigidBodyComponent#sleepingThreshold",
    "longname": "RigidBodyComponent#sleepingThreshold",
    "name": "sleepingThreshold",
    "scope": "instance",
    "kind": "member",
    "memberof": "RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 497,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 315
  },
  {
    "id": "RigidBodyComponent#mass",
    "longname": "RigidBodyComponent#mass",
    "name": "mass",
    "scope": "instance",
    "kind": "member",
    "memberof": "RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 513,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 316
  },
  {
    "id": "RigidBodyComponent#sleepingTimeLimit",
    "longname": "RigidBodyComponent#sleepingTimeLimit",
    "name": "sleepingTimeLimit",
    "scope": "instance",
    "kind": "member",
    "memberof": "RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 530,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 317
  },
  {
    "id": "RigidBodyComponent#constraints",
    "longname": "RigidBodyComponent#constraints",
    "name": "constraints",
    "scope": "instance",
    "kind": "member",
    "description": "Constraint the movement of the rigid body. Set it to RigidBodyComponent.FREEZE_NONE, RigidBodyComponent.FREEZE_POSITION_X, RigidBodyComponent.FREEZE_POSITION_Y, RigidBodyComponent.FREEZE_POSITION_Z, RigidBodyComponent.FREEZE_ROTATION_X, RigidBodyComponent.FREEZE_ROTATION_Y, RigidBodyComponent.FREEZE_ROTATION_Z, RigidBodyComponent.FREEZE_POSITION, RigidBodyComponent.FREEZE_ROTATION or RigidBodyComponent.FREEZE_ALL.",
    "memberof": "RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 547,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 318
  },
  {
    "id": "<anonymous>~BallJoint#localPivot",
    "longname": "<anonymous>~BallJoint#localPivot",
    "name": "localPivot",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~BallJoint",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 26,
      "filename": "BallJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 340
  },
  {
    "id": "<anonymous>~BallJoint#autoConfigureConnectedPivot",
    "longname": "<anonymous>~BallJoint#autoConfigureConnectedPivot",
    "name": "autoConfigureConnectedPivot",
    "scope": "instance",
    "kind": "member",
    "description": "Automatically compute the connectedLocalPivot by using the entities initial transforms.",
    "memberof": "<anonymous>~BallJoint",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": "true",
    "meta": {
      "lineno": 33,
      "filename": "BallJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 341
  },
  {
    "id": "<anonymous>~BallJoint#connectedLocalPivot",
    "longname": "<anonymous>~BallJoint#connectedLocalPivot",
    "name": "connectedLocalPivot",
    "scope": "instance",
    "kind": "member",
    "description": "The pivot point defined inside the connected entity.",
    "memberof": "<anonymous>~BallJoint",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 39,
      "filename": "BallJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 342
  },
  {
    "id": "<anonymous>~HingeJoint#localPivot",
    "longname": "<anonymous>~HingeJoint#localPivot",
    "name": "localPivot",
    "scope": "instance",
    "kind": "member",
    "description": "A point defined locally in the entity that the Hinge should rotate around.",
    "memberof": "<anonymous>~HingeJoint",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 29,
      "filename": "HingeJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 345
  },
  {
    "id": "<anonymous>~HingeJoint#autoConfigureConnectedPivot",
    "longname": "<anonymous>~HingeJoint#autoConfigureConnectedPivot",
    "name": "autoConfigureConnectedPivot",
    "scope": "instance",
    "kind": "member",
    "description": "Automatically compute the connectedLocalPivot",
    "memberof": "<anonymous>~HingeJoint",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": "true",
    "meta": {
      "lineno": 36,
      "filename": "HingeJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 346
  },
  {
    "id": "<anonymous>~HingeJoint#connectedLocalPivot",
    "longname": "<anonymous>~HingeJoint#connectedLocalPivot",
    "name": "connectedLocalPivot",
    "scope": "instance",
    "kind": "member",
    "description": "The pivot point defined inside the connected entity.",
    "memberof": "<anonymous>~HingeJoint",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 42,
      "filename": "HingeJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 347
  },
  {
    "id": "<anonymous>~HingeJoint#localAxis",
    "longname": "<anonymous>~HingeJoint#localAxis",
    "name": "localAxis",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~HingeJoint",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 47,
      "filename": "HingeJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 348
  },
  {
    "id": "<anonymous>~PhysicsJoint#connectedEntity",
    "longname": "<anonymous>~PhysicsJoint#connectedEntity",
    "name": "connectedEntity",
    "scope": "instance",
    "kind": "member",
    "description": "The entity connected",
    "memberof": "<anonymous>~PhysicsJoint",
    "type": {
      "names": [
        "Entity"
      ]
    },
    "meta": {
      "lineno": 19,
      "filename": "PhysicsJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 351
  },
  {
    "id": "<anonymous>~PhysicsJoint#collideConnected",
    "longname": "<anonymous>~PhysicsJoint#collideConnected",
    "name": "collideConnected",
    "scope": "instance",
    "kind": "member",
    "description": "Indicates if the connected entities should collide.",
    "memberof": "<anonymous>~PhysicsJoint",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 25,
      "filename": "PhysicsJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 352
  },
  {
    "id": "<anonymous>~PhysicsMaterial#friction",
    "longname": "<anonymous>~PhysicsMaterial#friction",
    "name": "friction",
    "scope": "instance",
    "kind": "member",
    "description": "The friction coefficient. Multiplication is used to combine two friction values.",
    "memberof": "<anonymous>~PhysicsMaterial",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 17,
      "filename": "PhysicsMaterial.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack"
    },
    "order": 355
  },
  {
    "id": "<anonymous>~PhysicsMaterial#restitution",
    "longname": "<anonymous>~PhysicsMaterial#restitution",
    "name": "restitution",
    "scope": "instance",
    "kind": "member",
    "description": "The \"bounciness\" of the collider.",
    "memberof": "<anonymous>~PhysicsMaterial",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 23,
      "filename": "PhysicsMaterial.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack"
    },
    "order": 356
  },
  {
    "id": "<anonymous>~RaycastResult#point",
    "longname": "<anonymous>~RaycastResult#point",
    "name": "point",
    "scope": "instance",
    "kind": "member",
    "description": "The impact point in world space where the ray hit the collider.",
    "memberof": "<anonymous>~RaycastResult",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 25,
      "filename": "RaycastResult.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack"
    },
    "order": 359
  },
  {
    "id": "<anonymous>~RaycastResult#normal",
    "longname": "<anonymous>~RaycastResult#normal",
    "name": "normal",
    "scope": "instance",
    "kind": "member",
    "description": "The normal of the surface the ray hit.",
    "memberof": "<anonymous>~RaycastResult",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 31,
      "filename": "RaycastResult.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack"
    },
    "order": 360
  },
  {
    "id": "<anonymous>~RaycastResult#entity",
    "longname": "<anonymous>~RaycastResult#entity",
    "name": "entity",
    "scope": "instance",
    "kind": "member",
    "description": "The Collider that was hit.",
    "memberof": "<anonymous>~RaycastResult",
    "type": {
      "names": [
        "Entity"
      ]
    },
    "meta": {
      "lineno": 37,
      "filename": "RaycastResult.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack"
    },
    "order": 361
  },
  {
    "id": "<anonymous>~RaycastResult#distance",
    "longname": "<anonymous>~RaycastResult#distance",
    "name": "distance",
    "scope": "instance",
    "kind": "member",
    "description": "The distance from the ray's origin to the impact point.",
    "memberof": "<anonymous>~RaycastResult",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "-1",
    "meta": {
      "lineno": 44,
      "filename": "RaycastResult.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack"
    },
    "order": 362
  },
  {
    "id": "<anonymous>~AbstractPhysicsSystem#_activeColliderEntities",
    "longname": "<anonymous>~AbstractPhysicsSystem#_activeColliderEntities",
    "name": "_activeColliderEntities",
    "scope": "instance",
    "kind": "member",
    "description": "Entitites that holds ColliderComponents, but aren't instantiated since they have no RigidBodyComponent",
    "memberof": "<anonymous>~AbstractPhysicsSystem",
    "meta": {
      "lineno": 24,
      "filename": "AbstractPhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 381
  },
  {
    "id": "<anonymous>~PhysicsDebugRenderSystem#renderAll",
    "longname": "<anonymous>~PhysicsDebugRenderSystem#renderAll",
    "name": "renderAll",
    "scope": "instance",
    "kind": "member",
    "description": "If set to true, all entities with a ColliderComponent attached is rendered, and the selection is disregarded.",
    "memberof": "<anonymous>~PhysicsDebugRenderSystem",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 72,
      "filename": "PhysicsDebugRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 398
  },
  {
    "id": "<anonymous>~PhysicsDebugRenderSystem#selection",
    "longname": "<anonymous>~PhysicsDebugRenderSystem#selection",
    "name": "selection",
    "scope": "instance",
    "kind": "member",
    "description": "The selected entities to be rendered.",
    "memberof": "<anonymous>~PhysicsDebugRenderSystem",
    "type": {
      "names": [
        "EntitySelection"
      ]
    },
    "meta": {
      "lineno": 78,
      "filename": "PhysicsDebugRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 399
  },
  {
    "id": "<anonymous>~PhysicsSystem#cannonWorld",
    "longname": "<anonymous>~PhysicsSystem#cannonWorld",
    "name": "cannonWorld",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~PhysicsSystem",
    "type": {
      "names": [
        "CANNON.World"
      ]
    },
    "meta": {
      "lineno": 45,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 408
  },
  {
    "id": "<anonymous>~PhysicsSystem#stepFrequency",
    "longname": "<anonymous>~PhysicsSystem#stepFrequency",
    "name": "stepFrequency",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~PhysicsSystem",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "60",
    "meta": {
      "lineno": 122,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 409
  },
  {
    "id": "<anonymous>~PhysicsSystem#maxSubSteps",
    "longname": "<anonymous>~PhysicsSystem#maxSubSteps",
    "name": "maxSubSteps",
    "scope": "instance",
    "kind": "member",
    "description": "The maximum number of timesteps to use for making the physics clock catch up with the wall clock. If set to zero, a variable timestep is used (not recommended).",
    "memberof": "<anonymous>~PhysicsSystem",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "10",
    "meta": {
      "lineno": 129,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 410
  },
  {
    "id": "<anonymous>~AnimationComponent#layers",
    "longname": "<anonymous>~AnimationComponent#layers",
    "name": "layers",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~AnimationComponent",
    "type": {
      "names": [
        "Array.<AnimationLayer>"
      ]
    },
    "meta": {
      "lineno": 32,
      "filename": "AnimationComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/components"
    },
    "order": 522
  },
  {
    "id": "<anonymous>~CameraComponent#camera",
    "longname": "<anonymous>~CameraComponent#camera",
    "name": "camera",
    "scope": "instance",
    "kind": "member",
    "description": "The camera contained by the component.",
    "memberof": "<anonymous>~CameraComponent",
    "type": {
      "names": [
        "Camera"
      ]
    },
    "meta": {
      "lineno": 30,
      "filename": "CameraComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 633
  },
  {
    "id": "<anonymous>~CameraComponent#leftVec",
    "longname": "<anonymous>~CameraComponent#leftVec",
    "name": "leftVec",
    "scope": "instance",
    "kind": "member",
    "description": "Left vector.",
    "memberof": "<anonymous>~CameraComponent",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "defaultvalue": "(-1, 0, 0)",
    "meta": {
      "lineno": 37,
      "filename": "CameraComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 634
  },
  {
    "id": "<anonymous>~CameraComponent#upVec",
    "longname": "<anonymous>~CameraComponent#upVec",
    "name": "upVec",
    "scope": "instance",
    "kind": "member",
    "description": "Up vector.",
    "memberof": "<anonymous>~CameraComponent",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "defaultvalue": "(0, 1, 0)",
    "meta": {
      "lineno": 44,
      "filename": "CameraComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 635
  },
  {
    "id": "<anonymous>~CameraComponent#dirVec",
    "longname": "<anonymous>~CameraComponent#dirVec",
    "name": "dirVec",
    "scope": "instance",
    "kind": "member",
    "description": "Direction vector.",
    "memberof": "<anonymous>~CameraComponent",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "defaultvalue": "(0, 0, -1)",
    "meta": {
      "lineno": 51,
      "filename": "CameraComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 636
  },
  {
    "id": "<anonymous>~Component#enabled",
    "longname": "<anonymous>~Component#enabled",
    "name": "enabled",
    "scope": "instance",
    "kind": "member",
    "description": "If the component should be processed for containing entities.",
    "memberof": "<anonymous>~Component",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 13,
      "filename": "Component.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 641
  },
  {
    "id": "<anonymous>~CssTransformComponent#domElement",
    "longname": "<anonymous>~CssTransformComponent#domElement",
    "name": "domElement",
    "scope": "instance",
    "kind": "member",
    "description": "DOM element.",
    "memberof": "<anonymous>~CssTransformComponent",
    "meta": {
      "lineno": 24,
      "filename": "CssTransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 646
  },
  {
    "id": "<anonymous>~CssTransformComponent#scale",
    "longname": "<anonymous>~CssTransformComponent#scale",
    "name": "scale",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~CssTransformComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "1",
    "meta": {
      "lineno": 30,
      "filename": "CssTransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 647
  },
  {
    "id": "<anonymous>~CssTransformComponent#faceCamera",
    "longname": "<anonymous>~CssTransformComponent#faceCamera",
    "name": "faceCamera",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~CssTransformComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 35,
      "filename": "CssTransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 648
  },
  {
    "id": "<anonymous>~Dom3dComponent#hidden",
    "longname": "<anonymous>~Dom3dComponent#hidden",
    "name": "hidden",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Dom3dComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 34,
      "filename": "Dom3dComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 651
  },
  {
    "id": "<anonymous>~HtmlComponent#domElement",
    "longname": "<anonymous>~HtmlComponent#domElement",
    "name": "domElement",
    "scope": "instance",
    "kind": "member",
    "description": "DOM element.",
    "memberof": "<anonymous>~HtmlComponent",
    "meta": {
      "lineno": 23,
      "filename": "HtmlComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 654
  },
  {
    "id": "<anonymous>~HtmlComponent#hidden",
    "longname": "<anonymous>~HtmlComponent#hidden",
    "name": "hidden",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~HtmlComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 28,
      "filename": "HtmlComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 655
  },
  {
    "id": "<anonymous>~HtmlComponent#useTransformComponent",
    "longname": "<anonymous>~HtmlComponent#useTransformComponent",
    "name": "useTransformComponent",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~HtmlComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 33,
      "filename": "HtmlComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 656
  },
  {
    "id": "<anonymous>~LightComponent#light",
    "longname": "<anonymous>~LightComponent#light",
    "name": "light",
    "scope": "instance",
    "kind": "member",
    "description": "Light contained in this component.",
    "memberof": "<anonymous>~LightComponent",
    "meta": {
      "lineno": 26,
      "filename": "LightComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 659
  },
  {
    "id": "<anonymous>~LightComponent#hidden",
    "longname": "<anonymous>~LightComponent#hidden",
    "name": "hidden",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~LightComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": false,
    "meta": {
      "lineno": 32,
      "filename": "LightComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 660
  },
  {
    "id": "<anonymous>~MeshDataComponent#meshData",
    "longname": "<anonymous>~MeshDataComponent#meshData",
    "name": "meshData",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~MeshDataComponent",
    "type": {
      "names": [
        "MeshData"
      ]
    },
    "meta": {
      "lineno": 28,
      "filename": "MeshDataComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 663
  },
  {
    "id": "<anonymous>~MeshDataComponent#modelBound",
    "longname": "<anonymous>~MeshDataComponent#modelBound",
    "name": "modelBound",
    "scope": "instance",
    "kind": "member",
    "description": "Bounding volume in local space.",
    "memberof": "<anonymous>~MeshDataComponent",
    "type": {
      "names": [
        "BoundingVolume"
      ]
    },
    "meta": {
      "lineno": 33,
      "filename": "MeshDataComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 664
  },
  {
    "id": "<anonymous>~MeshDataComponent#autoCompute",
    "longname": "<anonymous>~MeshDataComponent#autoCompute",
    "name": "autoCompute",
    "scope": "instance",
    "kind": "member",
    "description": "Automatically compute bounding fit.",
    "memberof": "<anonymous>~MeshDataComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": true,
    "meta": {
      "lineno": 39,
      "filename": "MeshDataComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 665
  },
  {
    "id": "<anonymous>~MeshDataComponent#currentPose",
    "longname": "<anonymous>~MeshDataComponent#currentPose",
    "name": "currentPose",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~MeshDataComponent",
    "type": {
      "names": [
        "SkeletonPose"
      ]
    },
    "defaultvalue": null,
    "meta": {
      "lineno": 45,
      "filename": "MeshDataComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 666
  },
  {
    "id": "<anonymous>~MeshRendererComponent#materials",
    "longname": "<anonymous>~MeshRendererComponent#materials",
    "name": "materials",
    "scope": "instance",
    "kind": "member",
    "description": "Materials to use when rendering",
    "memberof": "<anonymous>~MeshRendererComponent",
    "type": {
      "names": [
        "Array.<Material>"
      ]
    },
    "meta": {
      "lineno": 26,
      "filename": "MeshRendererComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 671
  },
  {
    "id": "<anonymous>~MeshRendererComponent#worldBound",
    "longname": "<anonymous>~MeshRendererComponent#worldBound",
    "name": "worldBound",
    "scope": "instance",
    "kind": "member",
    "description": "Worldspace bounding considering entity transformations",
    "memberof": "<anonymous>~MeshRendererComponent",
    "type": {
      "names": [
        "BoundingVolume"
      ]
    },
    "meta": {
      "lineno": 30,
      "filename": "MeshRendererComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 672
  },
  {
    "id": "<anonymous>~MeshRendererComponent#cullMode",
    "longname": "<anonymous>~MeshRendererComponent#cullMode",
    "name": "cullMode",
    "scope": "instance",
    "kind": "member",
    "description": "Culling mode. Other valid values: 'Never'",
    "memberof": "<anonymous>~MeshRendererComponent",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "Dynamic",
    "meta": {
      "lineno": 36,
      "filename": "MeshRendererComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 673
  },
  {
    "id": "<anonymous>~MeshRendererComponent#castShadows",
    "longname": "<anonymous>~MeshRendererComponent#castShadows",
    "name": "castShadows",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~MeshRendererComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": true,
    "meta": {
      "lineno": 41,
      "filename": "MeshRendererComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 674
  },
  {
    "id": "<anonymous>~MeshRendererComponent#receiveShadows",
    "longname": "<anonymous>~MeshRendererComponent#receiveShadows",
    "name": "receiveShadows",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~MeshRendererComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": true,
    "meta": {
      "lineno": 46,
      "filename": "MeshRendererComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 675
  },
  {
    "id": "<anonymous>~MeshRendererComponent#isPickable",
    "longname": "<anonymous>~MeshRendererComponent#isPickable",
    "name": "isPickable",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~MeshRendererComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": true,
    "meta": {
      "lineno": 52,
      "filename": "MeshRendererComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 676
  },
  {
    "id": "<anonymous>~MeshRendererComponent#isReflectable",
    "longname": "<anonymous>~MeshRendererComponent#isReflectable",
    "name": "isReflectable",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~MeshRendererComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": true,
    "meta": {
      "lineno": 58,
      "filename": "MeshRendererComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 677
  },
  {
    "id": "<anonymous>~MeshRendererComponent#hidden",
    "longname": "<anonymous>~MeshRendererComponent#hidden",
    "name": "hidden",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~MeshRendererComponent",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": false,
    "meta": {
      "lineno": 64,
      "filename": "MeshRendererComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 678
  },
  {
    "id": "<anonymous>~PortalComponent#camera",
    "longname": "<anonymous>~PortalComponent#camera",
    "name": "camera",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~PortalComponent",
    "type": {
      "names": [
        "Camera"
      ]
    },
    "meta": {
      "lineno": 45,
      "filename": "PortalComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 692
  },
  {
    "id": "<anonymous>~PortalComponent#target",
    "longname": "<anonymous>~PortalComponent#target",
    "name": "target",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~PortalComponent",
    "type": {
      "names": [
        "RenderTarget"
      ]
    },
    "meta": {
      "lineno": 50,
      "filename": "PortalComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 693
  },
  {
    "id": "<anonymous>~ScriptComponent#scripts",
    "longname": "<anonymous>~ScriptComponent#scripts",
    "name": "scripts",
    "scope": "instance",
    "kind": "member",
    "description": "Array of scripts tied to this script component. Scripts can be added to the component\nusing the constructor or by manually adding to the array.",
    "memberof": "<anonymous>~ScriptComponent",
    "examples": [
      "// Add a script to script component\nvar scriptComponent = new ScriptComponent();\nvar controlScript = new WasdControlScript();\nscriptComponent.scripts.push(controlScript);"
    ],
    "type": {
      "names": [
        "Array"
      ]
    },
    "meta": {
      "lineno": 46,
      "filename": "ScriptComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 697
  },
  {
    "id": "<anonymous>~SoundComponent#sounds",
    "longname": "<anonymous>~SoundComponent#sounds",
    "name": "sounds",
    "scope": "instance",
    "kind": "member",
    "description": "Current sounds in the entity. Add a sound using {@link SoundComponent#addSound}.",
    "memberof": "<anonymous>~SoundComponent",
    "type": {
      "names": [
        "Array.<Sound>"
      ]
    },
    "meta": {
      "lineno": 34,
      "filename": "SoundComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 706
  },
  {
    "id": "<anonymous>~TransformComponent#parent",
    "longname": "<anonymous>~TransformComponent#parent",
    "name": "parent",
    "scope": "instance",
    "kind": "member",
    "description": "Parent TransformComponent in the \"scene graph\".",
    "memberof": "<anonymous>~TransformComponent",
    "type": {
      "names": [
        "TransformComponent"
      ]
    },
    "meta": {
      "lineno": 32,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 716
  },
  {
    "id": "<anonymous>~TransformComponent#children",
    "longname": "<anonymous>~TransformComponent#children",
    "name": "children",
    "scope": "instance",
    "kind": "member",
    "description": "Child TransformComponents in the \"scene graph\".",
    "memberof": "<anonymous>~TransformComponent",
    "type": {
      "names": [
        "Array.<TransformComponent>"
      ]
    },
    "meta": {
      "lineno": 37,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 717
  },
  {
    "id": "<anonymous>~TransformComponent#transform",
    "longname": "<anonymous>~TransformComponent#transform",
    "name": "transform",
    "scope": "instance",
    "kind": "member",
    "description": "The entity's transform in local space.",
    "memberof": "<anonymous>~TransformComponent",
    "type": {
      "names": [
        "Transform"
      ]
    },
    "meta": {
      "lineno": 43,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 718
  },
  {
    "id": "<anonymous>~TransformComponent#worldTransform",
    "longname": "<anonymous>~TransformComponent#worldTransform",
    "name": "worldTransform",
    "scope": "instance",
    "kind": "member",
    "description": "The entity's transform in world space.",
    "memberof": "<anonymous>~TransformComponent",
    "type": {
      "names": [
        "Transform"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 50,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 719
  },
  {
    "id": "<anonymous>~Entity#skip",
    "longname": "<anonymous>~Entity#skip",
    "name": "skip",
    "scope": "instance",
    "kind": "member",
    "description": "Set to true to skip all processing (rendering, script updating, et cetera) of the entity.",
    "memberof": "<anonymous>~Entity",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": "false",
    "meta": {
      "lineno": 42,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 759
  },
  {
    "id": "<anonymous>~Entity#hidden",
    "longname": "<anonymous>~Entity#hidden",
    "name": "hidden",
    "scope": "instance",
    "kind": "member",
    "description": "Holds the hidden status of the entity. The hidden status will not however propagate to components or child entities.",
    "memberof": "<anonymous>~Entity",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": "false",
    "deprecated": "The usage of this flag changed. Please use entity.hide/show() instead to change the hidden status of the entity and entity.isHidden/isVisiblyHidden() to query the status",
    "meta": {
      "lineno": 49,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 760
  },
  {
    "id": "<anonymous>~Entity#isVisible",
    "longname": "<anonymous>~Entity#isVisible",
    "name": "isVisible",
    "scope": "instance",
    "kind": "member",
    "description": "True if the entity is within the frustum",
    "memberof": "<anonymous>~Entity",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 63,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 762
  },
  {
    "id": "<anonymous>~Entity#static",
    "longname": "<anonymous>~Entity#static",
    "name": "static",
    "scope": "instance",
    "kind": "member",
    "description": "Mark entity as static.\nNon static entities become roots in the tree of combined ones so one can have statics under a moving node that combines but you can still move the parent node.",
    "memberof": "<anonymous>~Entity",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": "false",
    "meta": {
      "lineno": 70,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 763
  },
  {
    "id": "<anonymous>~GooRunner#world",
    "longname": "<anonymous>~GooRunner#world",
    "name": "world",
    "scope": "instance",
    "kind": "member",
    "description": "Automatically created Goo world.",
    "memberof": "<anonymous>~GooRunner",
    "type": {
      "names": [
        "World"
      ]
    },
    "meta": {
      "lineno": 93,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 796
  },
  {
    "id": "<anonymous>~GooRunner#renderer",
    "longname": "<anonymous>~GooRunner#renderer",
    "name": "renderer",
    "scope": "instance",
    "kind": "member",
    "description": "Automatically created renderer.",
    "memberof": "<anonymous>~GooRunner",
    "type": {
      "names": [
        "Renderer"
      ]
    },
    "meta": {
      "lineno": 99,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 797
  },
  {
    "id": "<anonymous>~GooRunner#useTryCatch",
    "longname": "<anonymous>~GooRunner#useTryCatch",
    "name": "useTryCatch",
    "scope": "instance",
    "kind": "member",
    "description": "Set to true to run user-defined callbacks within try/catch statements. Errors will be printed to console.",
    "memberof": "<anonymous>~GooRunner",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": "true",
    "meta": {
      "lineno": 106,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 798
  },
  {
    "id": "<anonymous>~GooRunner#callbacksPreProcess",
    "longname": "<anonymous>~GooRunner#callbacksPreProcess",
    "name": "callbacksPreProcess",
    "scope": "instance",
    "kind": "member",
    "description": "A list of callbacks to call every frame, before the world is processed.",
    "memberof": "<anonymous>~GooRunner",
    "type": {
      "names": [
        "Array"
      ]
    },
    "meta": {
      "lineno": 134,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 799
  },
  {
    "id": "<anonymous>~GooRunner#callbacksPreRender",
    "longname": "<anonymous>~GooRunner#callbacksPreRender",
    "name": "callbacksPreRender",
    "scope": "instance",
    "kind": "member",
    "description": "A list of callbacks to call every frame, after the world is processed and before the rendering is done.",
    "memberof": "<anonymous>~GooRunner",
    "type": {
      "names": [
        "Array"
      ]
    },
    "meta": {
      "lineno": 140,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 800
  },
  {
    "id": "<anonymous>~GooRunner#callbacks",
    "longname": "<anonymous>~GooRunner#callbacks",
    "name": "callbacks",
    "scope": "instance",
    "kind": "member",
    "description": "A list of callbacks to call every frame, after the rendering is done.",
    "memberof": "<anonymous>~GooRunner",
    "type": {
      "names": [
        "Array"
      ]
    },
    "meta": {
      "lineno": 146,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 801
  },
  {
    "id": "<anonymous>~GooRunner#callbacksNextFrame",
    "longname": "<anonymous>~GooRunner#callbacksNextFrame",
    "name": "callbacksNextFrame",
    "scope": "instance",
    "kind": "member",
    "description": "A list of callbacks to call once, in the following frame, before the world is processed.",
    "memberof": "<anonymous>~GooRunner",
    "type": {
      "names": [
        "Array"
      ]
    },
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/entities/CallbacksNextFrame/CallbacksNextFrame-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 153,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 802
  },
  {
    "id": "EntityManager#by",
    "longname": "EntityManager#by",
    "name": "by",
    "scope": "instance",
    "kind": "member",
    "description": "Entity selector. Its methods return an {@link EntitySelection}. Can select by id or name, see examples for usage.\n<br><i>Injected into {@link World}.</i>",
    "memberof": "EntityManager",
    "examples": [
      "var byId = gooRunner.world.by.id(\"2b88941938444da8afab8205b1c80616.entity\").first();\nvar byName = gooRunner.world.by.name(\"Box\").first();"
    ],
    "meta": {
      "lineno": 24,
      "filename": "EntityManager.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/managers"
    },
    "order": 824
  },
  {
    "id": "<anonymous>~Selection#forEach",
    "longname": "<anonymous>~Selection#forEach",
    "name": "forEach",
    "scope": "instance",
    "kind": "member",
    "description": "Alias for `each`",
    "memberof": "<anonymous>~Selection",
    "type": {
      "names": [
        "function"
      ]
    },
    "meta": {
      "lineno": 84,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 839
  },
  {
    "id": "<anonymous>~SoundSystem#rolloffFactor",
    "longname": "<anonymous>~SoundSystem#rolloffFactor",
    "name": "rolloffFactor",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~SoundSystem",
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 42,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 876
  },
  {
    "id": "<anonymous>~SoundSystem#maxDistance",
    "longname": "<anonymous>~SoundSystem#maxDistance",
    "name": "maxDistance",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~SoundSystem",
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 48,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 877
  },
  {
    "id": "<anonymous>~SoundSystem#dopplerFactor",
    "longname": "<anonymous>~SoundSystem#dopplerFactor",
    "name": "dopplerFactor",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~SoundSystem",
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 54,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 878
  },
  {
    "id": "<anonymous>~SoundSystem#volume",
    "longname": "<anonymous>~SoundSystem#volume",
    "name": "volume",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~SoundSystem",
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 60,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 879
  },
  {
    "id": "<anonymous>~SoundSystem#reverb",
    "longname": "<anonymous>~SoundSystem#reverb",
    "name": "reverb",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~SoundSystem",
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 66,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 880
  },
  {
    "id": "<anonymous>~SoundSystem#muted",
    "longname": "<anonymous>~SoundSystem#muted",
    "name": "muted",
    "scope": "instance",
    "kind": "member",
    "description": "The muted state. To mute or unmute, see the mute() and unmute() methods.",
    "memberof": "<anonymous>~SoundSystem",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 73,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 881
  },
  {
    "id": "<anonymous>~System#priority",
    "longname": "<anonymous>~System#priority",
    "name": "priority",
    "scope": "instance",
    "kind": "member",
    "description": "Priority of a system. The lower the number the higher the priority is. By default a systems has priority 0. Internal goo systems (like TransformSystem and CameraSystem) should have negative priority.",
    "memberof": "<anonymous>~System",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 34,
      "filename": "System.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 894
  },
  {
    "id": "<anonymous>~World#gooRunner",
    "longname": "<anonymous>~World#gooRunner",
    "name": "gooRunner",
    "scope": "instance",
    "kind": "member",
    "description": "GooRunner for updating the world and calling the renderers.",
    "memberof": "<anonymous>~World",
    "type": {
      "names": [
        "GooRunner"
      ]
    },
    "meta": {
      "lineno": 35,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 905
  },
  {
    "id": "<anonymous>~World#by",
    "longname": "<anonymous>~World#by",
    "name": "by",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~World",
    "type": {
      "names": [
        "WorldBy"
      ]
    },
    "meta": {
      "lineno": 47,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 906
  },
  {
    "id": "<anonymous>~World#entityManager",
    "longname": "<anonymous>~World#entityManager",
    "name": "entityManager",
    "scope": "instance",
    "kind": "member",
    "description": "Main keeper of entities.",
    "memberof": "<anonymous>~World",
    "type": {
      "names": [
        "EntityManager"
      ]
    },
    "meta": {
      "lineno": 52,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 907
  },
  {
    "id": "<anonymous>~World#time",
    "longname": "<anonymous>~World#time",
    "name": "time",
    "scope": "instance",
    "kind": "member",
    "description": "Accumulated time per frames(tpf) the world has been running.  Calculated at the start of each frame.",
    "memberof": "<anonymous>~World",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 58,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 908
  },
  {
    "id": "<anonymous>~World#tpf",
    "longname": "<anonymous>~World#tpf",
    "name": "tpf",
    "scope": "instance",
    "kind": "member",
    "description": "Time since last frame in seconds.",
    "memberof": "<anonymous>~World",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 63,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 909
  },
  {
    "id": "<anonymous>~WaitAction#currentTime",
    "longname": "<anonymous>~WaitAction#currentTime",
    "name": "currentTime",
    "scope": "instance",
    "kind": "member",
    "description": "Current time, in milliseconds.",
    "memberof": "<anonymous>~WaitAction",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 23,
      "filename": "WaitAction.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine/actions"
    },
    "order": 941
  },
  {
    "id": "<anonymous>~WaitAction#totalWait",
    "longname": "<anonymous>~WaitAction#totalWait",
    "name": "totalWait",
    "scope": "instance",
    "kind": "member",
    "description": "Wait time, in milliseconds.",
    "memberof": "<anonymous>~WaitAction",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 29,
      "filename": "WaitAction.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine/actions"
    },
    "order": 942
  },
  {
    "id": "<anonymous>~StateMachineSystem#time",
    "longname": "<anonymous>~StateMachineSystem#time",
    "name": "time",
    "scope": "instance",
    "kind": "member",
    "description": "Current time, in seconds.",
    "memberof": "<anonymous>~StateMachineSystem",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 28,
      "filename": "StateMachineSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine"
    },
    "order": 953
  },
  {
    "id": "<anonymous>~StateMachineSystem#resume",
    "longname": "<anonymous>~StateMachineSystem#resume",
    "name": "resume",
    "scope": "instance",
    "kind": "member",
    "description": "Resumes updating the entities; an alias for `.play`",
    "memberof": "<anonymous>~StateMachineSystem",
    "meta": {
      "lineno": 115,
      "filename": "StateMachineSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine"
    },
    "order": 956
  },
  {
    "id": "<anonymous>~Matrix#data",
    "longname": "<anonymous>~Matrix#data",
    "name": "data",
    "scope": "instance",
    "kind": "member",
    "description": "Column-major storage for the matrix components.",
    "memberof": "<anonymous>~Matrix",
    "type": {
      "names": [
        "Float32Array"
      ]
    },
    "meta": {
      "lineno": 22,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1231
  },
  {
    "id": "<anonymous>~Matrix#add",
    "longname": "<anonymous>~Matrix#add",
    "name": "add",
    "scope": "instance",
    "kind": "member",
    "description": "Performs a component-wise addition.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix",
            "number"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 150,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1237
  },
  {
    "id": "<anonymous>~Matrix#sub",
    "longname": "<anonymous>~Matrix#sub",
    "name": "sub",
    "scope": "instance",
    "kind": "member",
    "description": "Performs a component-wise subtraction.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix",
            "number"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 198,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1239
  },
  {
    "id": "<anonymous>~Matrix#mul",
    "longname": "<anonymous>~Matrix#mul",
    "name": "mul",
    "scope": "instance",
    "kind": "member",
    "description": "Performs a component-wise multiplication.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix",
            "number"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 247,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1241
  },
  {
    "id": "<anonymous>~Matrix#div",
    "longname": "<anonymous>~Matrix#div",
    "name": "div",
    "scope": "instance",
    "kind": "member",
    "description": "Performs a component-wise division.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix",
            "number"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 298,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1243
  },
  {
    "id": "<anonymous>~Matrix#combine",
    "longname": "<anonymous>~Matrix#combine",
    "name": "combine",
    "scope": "instance",
    "kind": "member",
    "description": "Combines two matrices (matrix multiplication) and stores the result locally.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Matrix on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 355,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1245
  },
  {
    "id": "<anonymous>~Matrix#transpose",
    "longname": "<anonymous>~Matrix#transpose",
    "name": "transpose",
    "scope": "instance",
    "kind": "member",
    "description": "Transposes the matrix (exchanges rows and columns) and stores the result locally.",
    "memberof": "<anonymous>~Matrix",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 404,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1247
  },
  {
    "id": "<anonymous>~Matrix#copy",
    "longname": "<anonymous>~Matrix#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "member",
    "description": "Copies component values and stores them locally.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Source matrix.",
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 444,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1249
  },
  {
    "id": "<anonymous>~Matrix#equals",
    "longname": "<anonymous>~Matrix#equals",
    "name": "equals",
    "scope": "instance",
    "kind": "member",
    "description": "Compares two matrices for approximate equality.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Matrix on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if equal."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 489,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1251
  },
  {
    "id": "<anonymous>~Matrix#isOrthogonal",
    "longname": "<anonymous>~Matrix#isOrthogonal",
    "name": "isOrthogonal",
    "scope": "instance",
    "kind": "member",
    "description": "Tests if the matrix is orthogonal.",
    "memberof": "<anonymous>~Matrix",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if orthogonal."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 504,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1252
  },
  {
    "id": "<anonymous>~Matrix#isNormal",
    "longname": "<anonymous>~Matrix#isNormal",
    "name": "isNormal",
    "scope": "instance",
    "kind": "member",
    "description": "Tests if the matrix is normal.",
    "memberof": "<anonymous>~Matrix",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if normal."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 535,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1253
  },
  {
    "id": "<anonymous>~Matrix#isOrthonormal",
    "longname": "<anonymous>~Matrix#isOrthonormal",
    "name": "isOrthonormal",
    "scope": "instance",
    "kind": "member",
    "description": "Tests if the matrix is orthonormal.",
    "memberof": "<anonymous>~Matrix",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if orthonormal."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 563,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1254
  },
  {
    "id": "<anonymous>~Matrix#clone",
    "longname": "<anonymous>~Matrix#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "member",
    "description": "Clones the matrix.",
    "memberof": "<anonymous>~Matrix",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Clone of self."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 578,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1255
  },
  {
    "id": "<anonymous>~Matrix#set",
    "longname": "<anonymous>~Matrix#set",
    "name": "set",
    "scope": "instance",
    "kind": "member",
    "description": "Sets the components of the matrix.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix",
            "Array.<number>",
            "number"
          ]
        },
        "description": "Component values.",
        "name": "arguments"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 594,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1256
  },
  {
    "id": "<anonymous>~Matrix#toString",
    "longname": "<anonymous>~Matrix#toString",
    "name": "toString",
    "scope": "instance",
    "kind": "member",
    "description": "Converts the matrix into a string.",
    "memberof": "<anonymous>~Matrix",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "String of component values."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 621,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1257
  },
  {
    "id": "<anonymous>~Matrix2#set",
    "longname": "<anonymous>~Matrix2#set",
    "name": "set",
    "scope": "instance",
    "kind": "member",
    "description": "Sets the matrix's values from another matrix's values; an alias for .copy",
    "memberof": "<anonymous>~Matrix2",
    "params": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Source matrix",
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 319,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1276
  },
  {
    "id": "<anonymous>~Matrix2#combine",
    "longname": "<anonymous>~Matrix2#combine",
    "name": "combine",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 500,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1284
  },
  {
    "id": "<anonymous>~Matrix2#div",
    "longname": "<anonymous>~Matrix2#div",
    "name": "div",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 511,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1285
  },
  {
    "id": "<anonymous>~Matrix3#set",
    "longname": "<anonymous>~Matrix3#set",
    "name": "set",
    "scope": "instance",
    "kind": "member",
    "description": "Sets the matrix's values from another matrix's values; an alias for .copy",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Source matrix",
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 761,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1315
  },
  {
    "id": "<anonymous>~Matrix3#div",
    "longname": "<anonymous>~Matrix3#div",
    "name": "div",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 933,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1321
  },
  {
    "id": "<anonymous>~Matrix3#combine",
    "longname": "<anonymous>~Matrix3#combine",
    "name": "combine",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 981,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1323
  },
  {
    "id": "<anonymous>~Matrix3#applyPost",
    "longname": "<anonymous>~Matrix3#applyPost",
    "name": "applyPost",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 1036,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1325
  },
  {
    "id": "<anonymous>~Matrix3#applyPre",
    "longname": "<anonymous>~Matrix3#applyPre",
    "name": "applyPre",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 1057,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1326
  },
  {
    "id": "<anonymous>~Matrix4#set",
    "longname": "<anonymous>~Matrix4#set",
    "name": "set",
    "scope": "instance",
    "kind": "member",
    "description": "Sets the matrix's values from another matrix's values; an alias for .copy",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Source matrix",
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 697,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1352
  },
  {
    "id": "<anonymous>~Matrix4#div",
    "longname": "<anonymous>~Matrix4#div",
    "name": "div",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 919,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1358
  },
  {
    "id": "<anonymous>~Matrix4#combine",
    "longname": "<anonymous>~Matrix4#combine",
    "name": "combine",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 977,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1360
  },
  {
    "id": "<anonymous>~Matrix4#applyPre",
    "longname": "<anonymous>~Matrix4#applyPre",
    "name": "applyPre",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 1048,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1362
  },
  {
    "id": "<anonymous>~Matrix4#applyPost",
    "longname": "<anonymous>~Matrix4#applyPost",
    "name": "applyPost",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 1070,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1363
  },
  {
    "id": "<anonymous>~Matrix4#applyPostPoint",
    "longname": "<anonymous>~Matrix4#applyPostPoint",
    "name": "applyPostPoint",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 1092,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1364
  },
  {
    "id": "<anonymous>~Matrix4#applyPostVector",
    "longname": "<anonymous>~Matrix4#applyPostVector",
    "name": "applyPostVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 1103,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1365
  },
  {
    "id": "<anonymous>~Quaternion#add",
    "longname": "<anonymous>~Quaternion#add",
    "name": "add",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 612,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1395
  },
  {
    "id": "<anonymous>~Quaternion#div",
    "longname": "<anonymous>~Quaternion#div",
    "name": "div",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 623,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1396
  },
  {
    "id": "<anonymous>~Quaternion#magnitude",
    "longname": "<anonymous>~Quaternion#magnitude",
    "name": "magnitude",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 634,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1397
  },
  {
    "id": "<anonymous>~Quaternion#magnitudeSquared",
    "longname": "<anonymous>~Quaternion#magnitudeSquared",
    "name": "magnitudeSquared",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 649,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1398
  },
  {
    "id": "<anonymous>~Quaternion#setArray",
    "longname": "<anonymous>~Quaternion#setArray",
    "name": "setArray",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 744,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1403
  },
  {
    "id": "<anonymous>~Quaternion#setVector",
    "longname": "<anonymous>~Quaternion#setVector",
    "name": "setVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 760,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1404
  },
  {
    "id": "<anonymous>~Quaternion#sub",
    "longname": "<anonymous>~Quaternion#sub",
    "name": "sub",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 776,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1405
  },
  {
    "id": "<anonymous>~Quaternion#scalarAdd",
    "longname": "<anonymous>~Quaternion#scalarAdd",
    "name": "scalarAdd",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 787,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1406
  },
  {
    "id": "<anonymous>~Quaternion#scalarSub",
    "longname": "<anonymous>~Quaternion#scalarSub",
    "name": "scalarSub",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 798,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1407
  },
  {
    "id": "<anonymous>~Quaternion#scalarMul",
    "longname": "<anonymous>~Quaternion#scalarMul",
    "name": "scalarMul",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 809,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1408
  },
  {
    "id": "<anonymous>~Quaternion#scalarDiv",
    "longname": "<anonymous>~Quaternion#scalarDiv",
    "name": "scalarDiv",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 820,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1409
  },
  {
    "id": "<anonymous>~Transform#matrix",
    "longname": "<anonymous>~Transform#matrix",
    "name": "matrix",
    "scope": "instance",
    "kind": "member",
    "description": "Read only, will be updated automatically by {@link Transform.update}",
    "memberof": "<anonymous>~Transform",
    "type": {
      "names": [
        "Matrix4"
      ]
    },
    "meta": {
      "lineno": 24,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1428
  },
  {
    "id": "<anonymous>~Transform#translation",
    "longname": "<anonymous>~Transform#translation",
    "name": "translation",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Transform",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 28,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1429
  },
  {
    "id": "<anonymous>~Transform#rotation",
    "longname": "<anonymous>~Transform#rotation",
    "name": "rotation",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Transform",
    "type": {
      "names": [
        "Matrix3"
      ]
    },
    "meta": {
      "lineno": 30,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1430
  },
  {
    "id": "<anonymous>~Transform#scale",
    "longname": "<anonymous>~Transform#scale",
    "name": "scale",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Transform",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 32,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1431
  },
  {
    "id": "<anonymous>~Vector#_size",
    "longname": "<anonymous>~Vector#_size",
    "name": "_size",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 20,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1445
  },
  {
    "id": "<anonymous>~Vector#add",
    "longname": "<anonymous>~Vector#add",
    "name": "add",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 167,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1450
  },
  {
    "id": "<anonymous>~Vector#sub",
    "longname": "<anonymous>~Vector#sub",
    "name": "sub",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 195,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1452
  },
  {
    "id": "<anonymous>~Vector#mul",
    "longname": "<anonymous>~Vector#mul",
    "name": "mul",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 223,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1454
  },
  {
    "id": "<anonymous>~Vector#div",
    "longname": "<anonymous>~Vector#div",
    "name": "div",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 251,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1456
  },
  {
    "id": "<anonymous>~Vector#copy",
    "longname": "<anonymous>~Vector#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 277,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1458
  },
  {
    "id": "<anonymous>~Vector#dot",
    "longname": "<anonymous>~Vector#dot",
    "name": "dot",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 307,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1460
  },
  {
    "id": "<anonymous>~Vector#apply",
    "longname": "<anonymous>~Vector#apply",
    "name": "apply",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 349,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1462
  },
  {
    "id": "<anonymous>~Vector#equals",
    "longname": "<anonymous>~Vector#equals",
    "name": "equals",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 380,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1464
  },
  {
    "id": "<anonymous>~Vector#distanceSquared",
    "longname": "<anonymous>~Vector#distanceSquared",
    "name": "distanceSquared",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 396,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1466
  },
  {
    "id": "<anonymous>~Vector#distance",
    "longname": "<anonymous>~Vector#distance",
    "name": "distance",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 412,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1468
  },
  {
    "id": "<anonymous>~Vector#lengthSquared",
    "longname": "<anonymous>~Vector#lengthSquared",
    "name": "lengthSquared",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 420,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1469
  },
  {
    "id": "<anonymous>~Vector#length",
    "longname": "<anonymous>~Vector#length",
    "name": "length",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 428,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1470
  },
  {
    "id": "<anonymous>~Vector#scale",
    "longname": "<anonymous>~Vector#scale",
    "name": "scale",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 436,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1471
  },
  {
    "id": "<anonymous>~Vector#invert",
    "longname": "<anonymous>~Vector#invert",
    "name": "invert",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 447,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1472
  },
  {
    "id": "<anonymous>~Vector#normalize",
    "longname": "<anonymous>~Vector#normalize",
    "name": "normalize",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 459,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1473
  },
  {
    "id": "<anonymous>~Vector#clone",
    "longname": "<anonymous>~Vector#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 481,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1474
  },
  {
    "id": "<anonymous>~Vector#set",
    "longname": "<anonymous>~Vector#set",
    "name": "set",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 489,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1475
  },
  {
    "id": "<anonymous>~Vector#toString",
    "longname": "<anonymous>~Vector#toString",
    "name": "toString",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 511,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1476
  },
  {
    "id": "<anonymous>~Vector2#copy",
    "longname": "<anonymous>~Vector2#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "member",
    "description": "Copies the values of another vector to this vector; an alias for .setVector",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "vector",
        "name": "Source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 511,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1512
  },
  {
    "id": "<anonymous>~Vector2#dotVector",
    "longname": "<anonymous>~Vector2#dotVector",
    "name": "dotVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 737,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1523
  },
  {
    "id": "<anonymous>~Vector2#addVector",
    "longname": "<anonymous>~Vector2#addVector",
    "name": "addVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 749,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1524
  },
  {
    "id": "<anonymous>~Vector2#mulVector",
    "longname": "<anonymous>~Vector2#mulVector",
    "name": "mulVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 760,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1525
  },
  {
    "id": "<anonymous>~Vector2#subVector",
    "longname": "<anonymous>~Vector2#subVector",
    "name": "subVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 771,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1526
  },
  {
    "id": "<anonymous>~Vector3#copy",
    "longname": "<anonymous>~Vector3#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "member",
    "description": "Copies the values of another vector to this vector; an alias for .setVector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "vector",
        "name": "Source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 670,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1567
  },
  {
    "id": "<anonymous>~Vector3#setVector",
    "longname": "<anonymous>~Vector3#setVector",
    "name": "setVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 769,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1573
  },
  {
    "id": "<anonymous>~Vector3#addVector",
    "longname": "<anonymous>~Vector3#addVector",
    "name": "addVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 934,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1581
  },
  {
    "id": "<anonymous>~Vector3#mulVector",
    "longname": "<anonymous>~Vector3#mulVector",
    "name": "mulVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 946,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1582
  },
  {
    "id": "<anonymous>~Vector3#dotVector",
    "longname": "<anonymous>~Vector3#dotVector",
    "name": "dotVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 958,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1583
  },
  {
    "id": "<anonymous>~Vector3#invert",
    "longname": "<anonymous>~Vector3#invert",
    "name": "invert",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 971,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1584
  },
  {
    "id": "<anonymous>~Vector3#subVector",
    "longname": "<anonymous>~Vector3#subVector",
    "name": "subVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 983,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1585
  },
  {
    "id": "<anonymous>~Vector4#copy",
    "longname": "<anonymous>~Vector4#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "member",
    "description": "Copies the values of another vector to this vector; an alias for .setVector",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "vector",
        "name": "Source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 599,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1624
  },
  {
    "id": "<anonymous>~Vector4#setVector",
    "longname": "<anonymous>~Vector4#setVector",
    "name": "setVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 715,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1630
  },
  {
    "id": "<anonymous>~Vector4#addVector",
    "longname": "<anonymous>~Vector4#addVector",
    "name": "addVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 857,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1636
  },
  {
    "id": "<anonymous>~Vector4#dotVector",
    "longname": "<anonymous>~Vector4#dotVector",
    "name": "dotVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 870,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1637
  },
  {
    "id": "<anonymous>~Vector4#mulVector",
    "longname": "<anonymous>~Vector4#mulVector",
    "name": "mulVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 884,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1638
  },
  {
    "id": "<anonymous>~Vector4#setVector",
    "longname": "<anonymous>~Vector4#setVector",
    "name": "setVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 897,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1639
  },
  {
    "id": "<anonymous>~Vector4#subVector",
    "longname": "<anonymous>~Vector4#subVector",
    "name": "subVector",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Vector4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 910,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1640
  },
  {
    "id": "<anonymous>~OcclusionPartitioner#occluderList",
    "longname": "<anonymous>~OcclusionPartitioner#occluderList",
    "name": "occluderList",
    "scope": "instance",
    "kind": "member",
    "description": "Array of the Entities with an OccluderComponent in the view frustum.",
    "memberof": "<anonymous>~OcclusionPartitioner",
    "type": {
      "names": [
        "Array.<Entity>"
      ]
    },
    "meta": {
      "lineno": 25,
      "filename": "OcclusionPartitioner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack"
    },
    "order": 1657
  },
  {
    "id": "<anonymous>~ParticleInfluence#prepare",
    "longname": "<anonymous>~ParticleInfluence#prepare",
    "name": "prepare",
    "scope": "instance",
    "kind": "member",
    "description": "Function for preparing to apply this particle influence. Useful for expensive operations that should only need computing once per frame.",
    "memberof": "<anonymous>~ParticleInfluence",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "optional": true,
        "description": "The Entity on which the ParticleComponent is attached to.",
        "name": "particleEntity"
      },
      {
        "type": {
          "names": [
            "ParticleEmitter"
          ]
        },
        "optional": true,
        "description": "The ParticleEmitter on which this ParticleInfluence is attached to.",
        "name": "emitter"
      }
    ],
    "type": {
      "names": [
        "function"
      ]
    },
    "meta": {
      "lineno": 22,
      "filename": "ParticleInfluence.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1725
  },
  {
    "id": "<anonymous>~ParticleInfluence#apply",
    "longname": "<anonymous>~ParticleInfluence#apply",
    "name": "apply",
    "scope": "instance",
    "kind": "member",
    "description": "Function for applying this particle influence",
    "memberof": "<anonymous>~ParticleInfluence",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Time since last frame.",
        "name": "tpf"
      },
      {
        "type": {
          "names": [
            "Particle"
          ]
        },
        "optional": true,
        "description": "The Particle object this function is applyed with.",
        "name": "particle"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The particle's index in the ParticleComponents.particles array.",
        "name": "index"
      }
    ],
    "type": {
      "names": [
        "function"
      ]
    },
    "meta": {
      "lineno": 31,
      "filename": "ParticleInfluence.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1726
  },
  {
    "id": "<anonymous>~ParticleInfluence#enabled",
    "longname": "<anonymous>~ParticleInfluence#enabled",
    "name": "enabled",
    "scope": "instance",
    "kind": "member",
    "description": "Specifies whether this influence should be applied to particles. Prepare is called regardless",
    "memberof": "<anonymous>~ParticleInfluence",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 37,
      "filename": "ParticleInfluence.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1727
  },
  {
    "id": "<anonymous>~DoubleQuad#xExtent",
    "longname": "<anonymous>~DoubleQuad#xExtent",
    "name": "xExtent",
    "scope": "instance",
    "kind": "member",
    "description": "Half-extent along the local x axis.",
    "memberof": "<anonymous>~DoubleQuad",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "0.5",
    "meta": {
      "lineno": 32,
      "filename": "DoubleQuad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1758
  },
  {
    "id": "<anonymous>~DoubleQuad#yExtent",
    "longname": "<anonymous>~DoubleQuad#yExtent",
    "name": "yExtent",
    "scope": "instance",
    "kind": "member",
    "description": "Half-extent along the local y axis.",
    "memberof": "<anonymous>~DoubleQuad",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "0.5",
    "meta": {
      "lineno": 38,
      "filename": "DoubleQuad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1759
  },
  {
    "id": "<anonymous>~DoubleQuad#tileX",
    "longname": "<anonymous>~DoubleQuad#tileX",
    "name": "tileX",
    "scope": "instance",
    "kind": "member",
    "description": "Number of texture repetitions in the texture's x direction.",
    "memberof": "<anonymous>~DoubleQuad",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "1",
    "meta": {
      "lineno": 44,
      "filename": "DoubleQuad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1760
  },
  {
    "id": "<anonymous>~DoubleQuad#tileY",
    "longname": "<anonymous>~DoubleQuad#tileY",
    "name": "tileY",
    "scope": "instance",
    "kind": "member",
    "description": "Number of texture repetitions in the texture's y direction.",
    "memberof": "<anonymous>~DoubleQuad",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "1",
    "meta": {
      "lineno": 50,
      "filename": "DoubleQuad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1761
  },
  {
    "id": "<anonymous>~QuadComponent#width",
    "longname": "<anonymous>~QuadComponent#width",
    "name": "width",
    "scope": "instance",
    "kind": "member",
    "description": "The width of the component in 3D space",
    "memberof": "<anonymous>~QuadComponent",
    "meta": {
      "lineno": 54,
      "filename": "QuadComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1765
  },
  {
    "id": "<anonymous>~QuadComponent#height",
    "longname": "<anonymous>~QuadComponent#height",
    "name": "height",
    "scope": "instance",
    "kind": "member",
    "description": "The height of the component in 3D space",
    "memberof": "<anonymous>~QuadComponent",
    "meta": {
      "lineno": 60,
      "filename": "QuadComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1766
  },
  {
    "id": "<anonymous>~QuadComponent#tileX",
    "longname": "<anonymous>~QuadComponent#tileX",
    "name": "tileX",
    "scope": "instance",
    "kind": "member",
    "description": "Tiling in x direction",
    "memberof": "<anonymous>~QuadComponent",
    "meta": {
      "lineno": 66,
      "filename": "QuadComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1767
  },
  {
    "id": "<anonymous>~QuadComponent#tileY",
    "longname": "<anonymous>~QuadComponent#tileY",
    "name": "tileY",
    "scope": "instance",
    "kind": "member",
    "description": "Tiling in y direction",
    "memberof": "<anonymous>~QuadComponent",
    "meta": {
      "lineno": 72,
      "filename": "QuadComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1768
  },
  {
    "id": "<anonymous>~QuadComponent#preserveAspectRatio",
    "longname": "<anonymous>~QuadComponent#preserveAspectRatio",
    "name": "preserveAspectRatio",
    "scope": "instance",
    "kind": "member",
    "description": "Whether to preserve aspect ratio or not. If this property is true, the component will have a maximum dimension of 1 in the 3D space.",
    "memberof": "<anonymous>~QuadComponent",
    "meta": {
      "lineno": 78,
      "filename": "QuadComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1769
  },
  {
    "id": "<anonymous>~QuadComponent#material",
    "longname": "<anonymous>~QuadComponent#material",
    "name": "material",
    "scope": "instance",
    "kind": "member",
    "description": "The material currently used by the component.",
    "memberof": "<anonymous>~QuadComponent",
    "type": {
      "names": [
        "Material"
      ]
    },
    "meta": {
      "lineno": 89,
      "filename": "QuadComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1771
  },
  {
    "id": "<anonymous>~DirectionalLight#direction",
    "longname": "<anonymous>~DirectionalLight#direction",
    "name": "direction",
    "scope": "instance",
    "kind": "member",
    "description": "The direction vector of the light",
    "memberof": "<anonymous>~DirectionalLight",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 25,
      "filename": "DirectionalLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1848
  },
  {
    "id": "<anonymous>~Light#translation",
    "longname": "<anonymous>~Light#translation",
    "name": "translation",
    "scope": "instance",
    "kind": "member",
    "description": "The light's translation in world space",
    "memberof": "<anonymous>~Light",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 19,
      "filename": "Light.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1852
  },
  {
    "id": "<anonymous>~Light#color",
    "longname": "<anonymous>~Light#color",
    "name": "color",
    "scope": "instance",
    "kind": "member",
    "description": "The color of the light",
    "memberof": "<anonymous>~Light",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 25,
      "filename": "Light.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1853
  },
  {
    "id": "<anonymous>~Light#intensity",
    "longname": "<anonymous>~Light#intensity",
    "name": "intensity",
    "scope": "instance",
    "kind": "member",
    "description": "The intensity of the light (typically between 0 and 1)",
    "memberof": "<anonymous>~Light",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 31,
      "filename": "Light.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1854
  },
  {
    "id": "<anonymous>~Light#specularIntensity",
    "longname": "<anonymous>~Light#specularIntensity",
    "name": "specularIntensity",
    "scope": "instance",
    "kind": "member",
    "description": "The specular intensity of the light (typically between 0 and 1)",
    "memberof": "<anonymous>~Light",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 37,
      "filename": "Light.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1855
  },
  {
    "id": "<anonymous>~Light#shadowCaster",
    "longname": "<anonymous>~Light#shadowCaster",
    "name": "shadowCaster",
    "scope": "instance",
    "kind": "member",
    "description": "Dictates wether this light will 'cast' shadows or not",
    "memberof": "<anonymous>~Light",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": false,
    "meta": {
      "lineno": 44,
      "filename": "Light.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1856
  },
  {
    "id": "<anonymous>~Light#lightCookie",
    "longname": "<anonymous>~Light#lightCookie",
    "name": "lightCookie",
    "scope": "instance",
    "kind": "member",
    "description": "By default lights shine a single color on surfaces. If however this parameter is used then the light will project a texture (called 'light cookie') on surfaces. The light cookie will be multiplied with the color of the light",
    "memberof": "<anonymous>~Light",
    "type": {
      "names": [
        "null"
      ]
    },
    "meta": {
      "lineno": 50,
      "filename": "Light.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1857
  },
  {
    "id": "<anonymous>~Light#shadowSettings",
    "longname": "<anonymous>~Light#shadowSettings",
    "name": "shadowSettings",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Light",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "2000",
        "name": "size"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "1",
        "name": "near"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "1000",
        "name": "far"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "512x512",
        "name": "resolution"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "UNIT_Y",
        "name": "upVector"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Shadow contribution",
        "name": "darkness"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Possible values 'VSM' = Variance Shadow Maps, 'PCF' = Percentage Closer Filtering, 'Basic' = No filtering",
        "name": "shadowType"
      }
    ],
    "meta": {
      "lineno": 62,
      "filename": "Light.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1858
  },
  {
    "id": "<anonymous>~PointLight#range",
    "longname": "<anonymous>~PointLight#range",
    "name": "range",
    "scope": "instance",
    "kind": "member",
    "description": "The range of the light (default is 1000)",
    "memberof": "<anonymous>~PointLight",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 22,
      "filename": "PointLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1861
  },
  {
    "id": "<anonymous>~SpotLight#direction",
    "longname": "<anonymous>~SpotLight#direction",
    "name": "direction",
    "scope": "instance",
    "kind": "member",
    "description": "The direction vector of the light",
    "memberof": "<anonymous>~SpotLight",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 29,
      "filename": "SpotLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1865
  },
  {
    "id": "<anonymous>~SpotLight#range",
    "longname": "<anonymous>~SpotLight#range",
    "name": "range",
    "scope": "instance",
    "kind": "member",
    "description": "The range of the light (default is 1000)",
    "memberof": "<anonymous>~SpotLight",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 35,
      "filename": "SpotLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1866
  },
  {
    "id": "<anonymous>~SpotLight#angle",
    "longname": "<anonymous>~SpotLight#angle",
    "name": "angle",
    "scope": "instance",
    "kind": "member",
    "description": "The angle (in degrees) of the cone of light that this spotlight projects (default is 45)",
    "memberof": "<anonymous>~SpotLight",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 41,
      "filename": "SpotLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1867
  },
  {
    "id": "<anonymous>~SpotLight#penumbra",
    "longname": "<anonymous>~SpotLight#penumbra",
    "name": "penumbra",
    "scope": "instance",
    "kind": "member",
    "description": "The angle to where light is full strength. Then it falls off linearly to the angle-value; penumbra is always smaller than angle. Set to null if the penumbra should be the same as the angle.",
    "memberof": "<anonymous>~SpotLight",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 47,
      "filename": "SpotLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1868
  },
  {
    "id": "<anonymous>~SpotLight#exponent",
    "longname": "<anonymous>~SpotLight#exponent",
    "name": "exponent",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~SpotLight",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 50,
      "filename": "SpotLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1869
  },
  {
    "id": "<anonymous>~Material#name",
    "longname": "<anonymous>~Material#name",
    "name": "name",
    "scope": "instance",
    "kind": "member",
    "description": "Material name",
    "memberof": "<anonymous>~Material",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 22,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1873
  },
  {
    "id": "<anonymous>~Material#shader",
    "longname": "<anonymous>~Material#shader",
    "name": "shader",
    "scope": "instance",
    "kind": "member",
    "description": "[Shader]{@link Shader} to use when rendering",
    "memberof": "<anonymous>~Material",
    "type": {
      "names": [
        "Shader"
      ]
    },
    "meta": {
      "lineno": 27,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1874
  },
  {
    "id": "<anonymous>~Material#uniforms",
    "longname": "<anonymous>~Material#uniforms",
    "name": "uniforms",
    "scope": "instance",
    "kind": "member",
    "description": "Possible overrides for shader uniforms",
    "memberof": "<anonymous>~Material",
    "type": {
      "names": [
        "Object"
      ]
    },
    "defaultvalue": "{}",
    "meta": {
      "lineno": 47,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "defaultvaluetype": "object",
    "order": 1875
  },
  {
    "id": "<anonymous>~Material#cullState",
    "longname": "<anonymous>~Material#cullState",
    "name": "cullState",
    "scope": "instance",
    "kind": "member",
    "description": "Specification of culling for this Material",
    "memberof": "<anonymous>~Material",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "enabled"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "possible values: 'Front', 'Back', 'FrontAndBack', default 'Back'",
        "name": "cullFace"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "possible values: 'CW' (clockwise) and 'CCW' (counterclockwise - default)",
        "name": "frontFace"
      }
    ],
    "meta": {
      "lineno": 80,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1876
  },
  {
    "id": "<anonymous>~Material#blendState",
    "longname": "<anonymous>~Material#blendState",
    "name": "blendState",
    "scope": "instance",
    "kind": "member",
    "description": "Specification of blending for this Material",
    "memberof": "<anonymous>~Material",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "possible values: <strong>'NoBlending'</strong>, 'TransparencyBlending', 'AdditiveBlending', 'SubtractiveBlending', 'MultiplyBlending', 'CustomBlending'",
        "name": "blending"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "possible values: <strong>'AddEquation'</strong>, 'SubtractEquation', 'ReverseSubtractEquation'",
        "name": "blendEquation"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "possible values: <strong>'SrcAlphaFactor'</strong>, 'ZeroFactor', 'OneFactor', 'SrcColorFactor', 'OneMinusSrcColorFactor', 'OneMinusSrcAlphaFactor', 'OneMinusDstAlphaFactor''DstColorFactor', 'OneMinusDstColorFactor', 'SrcAlphaSaturateFactor', 'DstAlphaFactor'",
        "name": "blendSrc"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "possible values: 'SrcAlphaFactor', 'ZeroFactor', 'OneFactor', 'SrcColorFactor', 'OneMinusSrcColorFactor', <strong>'OneMinusSrcAlphaFactor'</strong>, 'OneMinusDstAlphaFactor''DstColorFactor', 'OneMinusDstColorFactor', 'DstAlphaFactor'",
        "name": "blendDst"
      }
    ],
    "meta": {
      "lineno": 93,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1877
  },
  {
    "id": "<anonymous>~Material#depthState",
    "longname": "<anonymous>~Material#depthState",
    "name": "depthState",
    "scope": "instance",
    "kind": "member",
    "description": "Specification of depth handling for this Material",
    "memberof": "<anonymous>~Material",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "default: true",
        "name": "enabled"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "default: true",
        "name": "write"
      }
    ],
    "meta": {
      "lineno": 105,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1878
  },
  {
    "id": "<anonymous>~Material#offsetState",
    "longname": "<anonymous>~Material#offsetState",
    "name": "offsetState",
    "scope": "instance",
    "kind": "member",
    "description": "Specification of the polygon offset for this Material",
    "memberof": "<anonymous>~Material",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "enabled"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "default: 1",
        "name": "factor"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "default: 1",
        "name": "units"
      }
    ],
    "meta": {
      "lineno": 116,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1879
  },
  {
    "id": "<anonymous>~Material#dualTransparency",
    "longname": "<anonymous>~Material#dualTransparency",
    "name": "dualTransparency",
    "scope": "instance",
    "kind": "member",
    "description": "Render the mesh twice with front/back-facing for double transparency rendering",
    "memberof": "<anonymous>~Material",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": false,
    "meta": {
      "lineno": 126,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1880
  },
  {
    "id": "<anonymous>~Material#wireframe",
    "longname": "<anonymous>~Material#wireframe",
    "name": "wireframe",
    "scope": "instance",
    "kind": "member",
    "description": "Show wireframe on this material",
    "memberof": "<anonymous>~Material",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": false,
    "meta": {
      "lineno": 132,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1881
  },
  {
    "id": "<anonymous>~Material#renderQueue",
    "longname": "<anonymous>~Material#renderQueue",
    "name": "renderQueue",
    "scope": "instance",
    "kind": "member",
    "description": "Determines the order in which an object is drawn. There are four pre-defined render queues:\n\t\t<ul>\n\t\t\t<li>RenderQueue.BACKGROUND = Rendered before any other objects. Commonly used for skyboxes and the likes (0-999)\n\t\t\t<li>RenderQueue.OPAQUE = Used for most objects, typically opaque geometry. Rendered front to back (1000-1999)\n\t\t\t<li>RenderQueue.TRANSPARENT = For all alpha-blended objects. Rendered back to front (2000-2999)\n\t\t\t<li>RenderQueue.OVERLAY = For overlay effects like lens-flares etc (3000+)\n\t\t</ul>\nBy default materials use the render queue of the shader. See {@link Shader} or {@link RenderQueue} for more info",
    "memberof": "<anonymous>~Material",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 147,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1882
  },
  {
    "id": "<anonymous>~MeshData#vertexCount",
    "longname": "<anonymous>~MeshData#vertexCount",
    "name": "vertexCount",
    "scope": "instance",
    "kind": "member",
    "description": "The total number of vertices in the buffer.",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 36,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1897
  },
  {
    "id": "<anonymous>~MeshData#indexCount",
    "longname": "<anonymous>~MeshData#indexCount",
    "name": "indexCount",
    "scope": "instance",
    "kind": "member",
    "description": "The total number of indices in the buffer.",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 41,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1898
  },
  {
    "id": "<anonymous>~MeshData#indexLengths",
    "longname": "<anonymous>~MeshData#indexLengths",
    "name": "indexLengths",
    "scope": "instance",
    "kind": "member",
    "description": "The number of indices used by each segment, or null to indicate only one segment that uses the whole index buffer.",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "Array.<number>",
        "null"
      ]
    },
    "meta": {
      "lineno": 52,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1899
  },
  {
    "id": "<anonymous>~MeshData#indexModes",
    "longname": "<anonymous>~MeshData#indexModes",
    "name": "indexModes",
    "scope": "instance",
    "kind": "member",
    "description": "The primitive rendering types to use, for each segment. Default value of this property is ['Triangles'], but also TriangleStrip, TriangleFan, Lines, LineStrip, LineLoop and Points are available.",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "Array.<string>"
      ]
    },
    "meta": {
      "lineno": 57,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1900
  },
  {
    "id": "<anonymous>~Renderer#context",
    "longname": "<anonymous>~Renderer#context",
    "name": "context",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Renderer",
    "type": {
      "names": [
        "WebGLRenderingContext"
      ]
    },
    "meta": {
      "lineno": 93,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1940
  },
  {
    "id": "<anonymous>~Renderer#rendererRecord",
    "longname": "<anonymous>~Renderer#rendererRecord",
    "name": "rendererRecord",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Renderer",
    "type": {
      "names": [
        "RendererRecord"
      ]
    },
    "meta": {
      "lineno": 103,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1941
  },
  {
    "id": "<anonymous>~Renderer#shaderPrecision",
    "longname": "<anonymous>~Renderer#shaderPrecision",
    "name": "shaderPrecision",
    "scope": "instance",
    "kind": "member",
    "description": "Can be one of: <ul><li>lowp</li><li>mediump</li><li>highp</li></ul>\nIf the shader doesn't specify a precision, a string declaring this precision will be added.",
    "memberof": "<anonymous>~Renderer",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 112,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1942
  },
  {
    "id": "<anonymous>~Renderer#viewportX",
    "longname": "<anonymous>~Renderer#viewportX",
    "name": "viewportX",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Renderer",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 133,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1943
  },
  {
    "id": "<anonymous>~Renderer#viewportY",
    "longname": "<anonymous>~Renderer#viewportY",
    "name": "viewportY",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Renderer",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 135,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1944
  },
  {
    "id": "<anonymous>~Renderer#viewportWidth",
    "longname": "<anonymous>~Renderer#viewportWidth",
    "name": "viewportWidth",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Renderer",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 137,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1945
  },
  {
    "id": "<anonymous>~Renderer#viewportHeight",
    "longname": "<anonymous>~Renderer#viewportHeight",
    "name": "viewportHeight",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Renderer",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 139,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1946
  },
  {
    "id": "<anonymous>~Renderer#currentWidth",
    "longname": "<anonymous>~Renderer#currentWidth",
    "name": "currentWidth",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Renderer",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 141,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1947
  },
  {
    "id": "<anonymous>~Renderer#currentHeight",
    "longname": "<anonymous>~Renderer#currentHeight",
    "name": "currentHeight",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Renderer",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 143,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1948
  },
  {
    "id": "<anonymous>~Renderer#devicePixelRatio",
    "longname": "<anonymous>~Renderer#devicePixelRatio",
    "name": "devicePixelRatio",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Renderer",
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 148,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1949
  },
  {
    "id": "<anonymous>~Shader#name",
    "longname": "<anonymous>~Shader#name",
    "name": "name",
    "scope": "instance",
    "kind": "member",
    "description": "The shader name",
    "memberof": "<anonymous>~Shader",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 54,
      "filename": "Shader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2029
  },
  {
    "id": "<anonymous>~Shader#renderer",
    "longname": "<anonymous>~Shader#renderer",
    "name": "renderer",
    "scope": "instance",
    "kind": "member",
    "description": "The renderer where the program and shaders were allocated.",
    "memberof": "<anonymous>~Shader",
    "type": {
      "names": [
        "WebGLRenderingContext"
      ]
    },
    "meta": {
      "lineno": 64,
      "filename": "Shader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2030
  },
  {
    "id": "<anonymous>~Shader#attributeMapping",
    "longname": "<anonymous>~Shader#attributeMapping",
    "name": "attributeMapping",
    "scope": "instance",
    "kind": "member",
    "description": "Attributes detected in the shader source code.\nMaps attribute variable's name to <code>{format: string}</code>",
    "memberof": "<anonymous>~Shader",
    "type": {
      "names": [
        "Object.<string, object>"
      ]
    },
    "meta": {
      "lineno": 71,
      "filename": "Shader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2031
  },
  {
    "id": "<anonymous>~Shader#attributeIndexMapping",
    "longname": "<anonymous>~Shader#attributeIndexMapping",
    "name": "attributeIndexMapping",
    "scope": "instance",
    "kind": "member",
    "description": "Maps attribute variable's name to attribute location (from getAttribLocation).",
    "memberof": "<anonymous>~Shader",
    "type": {
      "names": [
        "Object.<string, number>"
      ]
    },
    "meta": {
      "lineno": 77,
      "filename": "Shader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2032
  },
  {
    "id": "<anonymous>~Shader#uniformMapping",
    "longname": "<anonymous>~Shader#uniformMapping",
    "name": "uniformMapping",
    "scope": "instance",
    "kind": "member",
    "description": "Uniforms detected in the shader source code.\nMaps variable name to <code>{format: string}</code>.",
    "memberof": "<anonymous>~Shader",
    "type": {
      "names": [
        "Object.<string, object>"
      ]
    },
    "meta": {
      "lineno": 84,
      "filename": "Shader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2033
  },
  {
    "id": "<anonymous>~Shader#uniformCallMapping",
    "longname": "<anonymous>~Shader#uniformCallMapping",
    "name": "uniformCallMapping",
    "scope": "instance",
    "kind": "member",
    "description": "Maps uniform variable name to ShaderCall object.",
    "memberof": "<anonymous>~Shader",
    "type": {
      "names": [
        "Object.<string, ShaderCall>"
      ]
    },
    "meta": {
      "lineno": 90,
      "filename": "Shader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2034
  },
  {
    "id": "<anonymous>~Shader#textureSlots",
    "longname": "<anonymous>~Shader#textureSlots",
    "name": "textureSlots",
    "scope": "instance",
    "kind": "member",
    "description": "Texture slots detected in the shader source code.\nWill be an array of <code>{format: string, name: string}</code>",
    "memberof": "<anonymous>~Shader",
    "type": {
      "names": [
        "Array"
      ]
    },
    "meta": {
      "lineno": 97,
      "filename": "Shader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2035
  },
  {
    "id": "<anonymous>~Shader#renderQueue",
    "longname": "<anonymous>~Shader#renderQueue",
    "name": "renderQueue",
    "scope": "instance",
    "kind": "member",
    "description": "Determines the order in which an object is drawn. There are four pre-defined render queues:\n\t\t<ul>\n\t\t\t<li>RenderQueue.BACKGROUND = Rendered before any other objects. Commonly used for skyboxes and the likes (0-999)\n\t\t\t<li>RenderQueue.OPAQUE = Used for most objects, typically opaque geometry. Rendered front to back (1000-1999)\n\t\t\t<li>RenderQueue.TRANSPARENT = For all alpha-blended objects. Rendered back to front (2000-2999)\n\t\t\t<li>RenderQueue.OVERLAY = For overlay effects like lens-flares etc (3000+)\n\t\t</ul>\nBy default materials use the render queue of the shader. See {@link RenderQueue} for more info",
    "memberof": "<anonymous>~Shader",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 125,
      "filename": "Shader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2036
  },
  {
    "id": "<anonymous>~Texture#anisotropy",
    "longname": "<anonymous>~Texture#anisotropy",
    "name": "anisotropy",
    "scope": "instance",
    "kind": "member",
    "description": "The anisotropic filtering level.",
    "memberof": "<anonymous>~Texture",
    "type": {
      "names": [
        "number"
      ]
    },
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/renderer/texture/AnisotropicFiltering/Anisotropic-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 96,
      "filename": "Texture.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2051
  },
  {
    "id": "<anonymous>~BasicControlScript#movementSpeed",
    "longname": "<anonymous>~BasicControlScript#movementSpeed",
    "name": "movementSpeed",
    "scope": "instance",
    "kind": "member",
    "description": "The regular speed of the entity.",
    "memberof": "<anonymous>~BasicControlScript",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 10,
    "meta": {
      "lineno": 22,
      "filename": "BasicControlScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2070
  },
  {
    "id": "<anonymous>~BasicControlScript#rollSpeed",
    "longname": "<anonymous>~BasicControlScript#rollSpeed",
    "name": "rollSpeed",
    "scope": "instance",
    "kind": "member",
    "description": "The regular speed of the entity when rolling.",
    "memberof": "<anonymous>~BasicControlScript",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 2,
    "meta": {
      "lineno": 27,
      "filename": "BasicControlScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2071
  },
  {
    "id": "<anonymous>~Box#xExtent",
    "longname": "<anonymous>~Box#xExtent",
    "name": "xExtent",
    "scope": "instance",
    "kind": "member",
    "description": "Extent along the local x axis.",
    "memberof": "<anonymous>~Box",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "0.5",
    "meta": {
      "lineno": 38,
      "filename": "Box.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2146
  },
  {
    "id": "<anonymous>~Box#yExtent",
    "longname": "<anonymous>~Box#yExtent",
    "name": "yExtent",
    "scope": "instance",
    "kind": "member",
    "description": "Extent along the local y axis.",
    "memberof": "<anonymous>~Box",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "0.5",
    "meta": {
      "lineno": 45,
      "filename": "Box.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2147
  },
  {
    "id": "<anonymous>~Box#zExtent",
    "longname": "<anonymous>~Box#zExtent",
    "name": "zExtent",
    "scope": "instance",
    "kind": "member",
    "description": "Extent along the local z axis.",
    "memberof": "<anonymous>~Box",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "0.5",
    "meta": {
      "lineno": 52,
      "filename": "Box.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2148
  },
  {
    "id": "<anonymous>~Box#tileX",
    "longname": "<anonymous>~Box#tileX",
    "name": "tileX",
    "scope": "instance",
    "kind": "member",
    "description": "Number of texture repetitions in the texture's x direction.",
    "memberof": "<anonymous>~Box",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "1",
    "meta": {
      "lineno": 59,
      "filename": "Box.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2149
  },
  {
    "id": "<anonymous>~Box#tileY",
    "longname": "<anonymous>~Box#tileY",
    "name": "tileY",
    "scope": "instance",
    "kind": "member",
    "description": "Number of texture repetitions in the texture's y direction.",
    "memberof": "<anonymous>~Box",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "1",
    "meta": {
      "lineno": 66,
      "filename": "Box.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2150
  },
  {
    "id": "<anonymous>~Box#textureMode",
    "longname": "<anonymous>~Box#textureMode",
    "name": "textureMode",
    "scope": "instance",
    "kind": "member",
    "description": "Texture wrapping mode.",
    "memberof": "<anonymous>~Box",
    "type": {
      "names": [
        "Enum"
      ]
    },
    "defaultvalue": "Box.TextureModes.Uniform",
    "meta": {
      "lineno": 73,
      "filename": "Box.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2151
  },
  {
    "id": "<anonymous>~Quad#xExtent",
    "longname": "<anonymous>~Quad#xExtent",
    "name": "xExtent",
    "scope": "instance",
    "kind": "member",
    "description": "Half-extent along the local x axis.",
    "memberof": "<anonymous>~Quad",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "0.5",
    "meta": {
      "lineno": 33,
      "filename": "Quad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2172
  },
  {
    "id": "<anonymous>~Quad#yExtent",
    "longname": "<anonymous>~Quad#yExtent",
    "name": "yExtent",
    "scope": "instance",
    "kind": "member",
    "description": "Half-extent along the local y axis.",
    "memberof": "<anonymous>~Quad",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "0.5",
    "meta": {
      "lineno": 39,
      "filename": "Quad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2173
  },
  {
    "id": "<anonymous>~Quad#tileX",
    "longname": "<anonymous>~Quad#tileX",
    "name": "tileX",
    "scope": "instance",
    "kind": "member",
    "description": "Number of texture repetitions in the texture's x direction.",
    "memberof": "<anonymous>~Quad",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "1",
    "meta": {
      "lineno": 45,
      "filename": "Quad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2174
  },
  {
    "id": "<anonymous>~Quad#tileY",
    "longname": "<anonymous>~Quad#tileY",
    "name": "tileY",
    "scope": "instance",
    "kind": "member",
    "description": "Number of texture repetitions in the texture's y direction.",
    "memberof": "<anonymous>~Quad",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "1",
    "meta": {
      "lineno": 51,
      "filename": "Quad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2175
  },
  {
    "id": "<anonymous>~Sphere#zSamples",
    "longname": "<anonymous>~Sphere#zSamples",
    "name": "zSamples",
    "scope": "instance",
    "kind": "member",
    "description": "Number of segments.",
    "memberof": "<anonymous>~Sphere",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "8",
    "meta": {
      "lineno": 35,
      "filename": "Sphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2184
  },
  {
    "id": "<anonymous>~Sphere#radialSamples",
    "longname": "<anonymous>~Sphere#radialSamples",
    "name": "radialSamples",
    "scope": "instance",
    "kind": "member",
    "description": "Number of slices.",
    "memberof": "<anonymous>~Sphere",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "8",
    "meta": {
      "lineno": 40,
      "filename": "Sphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2185
  },
  {
    "id": "<anonymous>~Sphere#radius",
    "longname": "<anonymous>~Sphere#radius",
    "name": "radius",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Sphere",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": "0.5",
    "meta": {
      "lineno": 44,
      "filename": "Sphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2186
  },
  {
    "id": "<anonymous>~Sphere#textureMode",
    "longname": "<anonymous>~Sphere#textureMode",
    "name": "textureMode",
    "scope": "instance",
    "kind": "member",
    "description": "Texture wrapping mode.",
    "memberof": "<anonymous>~Sphere",
    "type": {
      "names": [
        "Enum"
      ]
    },
    "defaultvalue": "Sphere.TextureModes.Polar",
    "meta": {
      "lineno": 53,
      "filename": "Sphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2187
  },
  {
    "id": "<anonymous>~Sphere#viewInside",
    "longname": "<anonymous>~Sphere#viewInside",
    "name": "viewInside",
    "scope": "instance",
    "kind": "member",
    "description": "Inward-facing normals, for skydomes.",
    "memberof": "<anonymous>~Sphere",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": "false",
    "meta": {
      "lineno": 59,
      "filename": "Sphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2188
  },
  {
    "id": "<anonymous>~Torus#viewInside",
    "longname": "<anonymous>~Torus#viewInside",
    "name": "viewInside",
    "scope": "instance",
    "kind": "member",
    "description": "Inward-facing normals.",
    "memberof": "<anonymous>~Torus",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": false,
    "meta": {
      "lineno": 40,
      "filename": "Torus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2198
  },
  {
    "id": "<anonymous>~Sound#id",
    "longname": "<anonymous>~Sound#id",
    "name": "id",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Sound",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 21,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2204
  },
  {
    "id": "<anonymous>~Sound#name",
    "longname": "<anonymous>~Sound#name",
    "name": "name",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Sound",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 24,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2205
  },
  {
    "id": "<anonymous>~Sound#spatialize",
    "longname": "<anonymous>~Sound#spatialize",
    "name": "spatialize",
    "scope": "instance",
    "kind": "member",
    "memberof": "<anonymous>~Sound",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 51,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2206
  },
  {
    "id": "<anonymous>~Sound#autoPlay",
    "longname": "<anonymous>~Sound#autoPlay",
    "name": "autoPlay",
    "scope": "instance",
    "kind": "member",
    "description": "If true, it will start playing when the SoundSystem runs play().",
    "memberof": "<anonymous>~Sound",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 58,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2207
  },
  {
    "id": "<anonymous>~TimelineComponent#resume",
    "longname": "<anonymous>~TimelineComponent#resume",
    "name": "resume",
    "scope": "instance",
    "kind": "member",
    "description": "Resumes updating the entities; an alias for `.play`",
    "memberof": "<anonymous>~TimelineComponent",
    "meta": {
      "lineno": 77,
      "filename": "TimelineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2227
  },
  {
    "id": "<anonymous>~TimelineSystem#resume",
    "longname": "<anonymous>~TimelineSystem#resume",
    "name": "resume",
    "scope": "instance",
    "kind": "member",
    "description": "Resumes updating the entities; an alias for `.play`",
    "memberof": "<anonymous>~TimelineSystem",
    "meta": {
      "lineno": 67,
      "filename": "TimelineSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2236
  },
  {
    "id": "<anonymous>~CannonRigidbodyComponent#setForce",
    "longname": "<anonymous>~CannonRigidbodyComponent#setForce",
    "name": "setForce",
    "scope": "instance",
    "kind": "function",
    "description": "Set the force on the body",
    "memberof": "<anonymous>~CannonRigidbodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "force"
      }
    ],
    "meta": {
      "lineno": 88,
      "filename": "CannonRigidbodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 18
  },
  {
    "id": "<anonymous>~CannonRigidbodyComponent#setVelocity",
    "longname": "<anonymous>~CannonRigidbodyComponent#setVelocity",
    "name": "setVelocity",
    "scope": "instance",
    "kind": "function",
    "description": "Set the velocity on the body",
    "memberof": "<anonymous>~CannonRigidbodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "velocity"
      }
    ],
    "meta": {
      "lineno": 96,
      "filename": "CannonRigidbodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 19
  },
  {
    "id": "<anonymous>~CannonRigidbodyComponent#setPosition",
    "longname": "<anonymous>~CannonRigidbodyComponent#setPosition",
    "name": "setPosition",
    "scope": "instance",
    "kind": "function",
    "description": "Set the body position.",
    "memberof": "<anonymous>~CannonRigidbodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "position"
      }
    ],
    "meta": {
      "lineno": 104,
      "filename": "CannonRigidbodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 20
  },
  {
    "id": "<anonymous>~CannonRigidbodyComponent#setAngularVelocity",
    "longname": "<anonymous>~CannonRigidbodyComponent#setAngularVelocity",
    "name": "setAngularVelocity",
    "scope": "instance",
    "kind": "function",
    "description": "Set the body angular velocity position.",
    "memberof": "<anonymous>~CannonRigidbodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "angularVelocity"
      }
    ],
    "meta": {
      "lineno": 116,
      "filename": "CannonRigidbodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 21
  },
  {
    "id": "<anonymous>~CannonSystem#setBroadphaseAlgorithm",
    "longname": "<anonymous>~CannonSystem#setBroadphaseAlgorithm",
    "name": "setBroadphaseAlgorithm",
    "scope": "instance",
    "kind": "function",
    "description": "Set the broadphase algorithm to use",
    "memberof": "<anonymous>~CannonSystem",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "One of: 'naive' (NaiveBroadphase), 'sap' (SAPBroadphase)",
        "name": "algorithm"
      }
    ],
    "meta": {
      "lineno": 186,
      "filename": "CannonSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 27
  },
  {
    "id": "<anonymous>~GamepadData#calculateStickDirection",
    "longname": "<anonymous>~GamepadData#calculateStickDirection",
    "name": "calculateStickDirection",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~GamepadData",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "name": "dirVector"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      }
    ],
    "meta": {
      "lineno": 84,
      "filename": "GamepadData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/gamepadpack"
    },
    "order": 34
  },
  {
    "id": "<anonymous>~LineRenderer#_updateVertexData",
    "longname": "<anonymous>~LineRenderer#_updateVertexData",
    "name": "_updateVertexData",
    "scope": "instance",
    "kind": "function",
    "description": "Used internally to update the vertexData in meshData.",
    "memberof": "<anonymous>~LineRenderer",
    "meta": {
      "lineno": 87,
      "filename": "LineRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 39
  },
  {
    "id": "<anonymous>~LineRenderer#_clear",
    "longname": "<anonymous>~LineRenderer#_clear",
    "name": "_clear",
    "scope": "instance",
    "kind": "function",
    "description": "Used internally to clear the rendering line counter.",
    "memberof": "<anonymous>~LineRenderer",
    "meta": {
      "lineno": 99,
      "filename": "LineRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 40
  },
  {
    "id": "<anonymous>~LineRenderer#_manageRenderList",
    "longname": "<anonymous>~LineRenderer#_manageRenderList",
    "name": "_manageRenderList",
    "scope": "instance",
    "kind": "function",
    "description": "Used internally to push or remove itself from the renderList.",
    "memberof": "<anonymous>~LineRenderer",
    "params": [
      {
        "type": {
          "names": [
            "Array.<Object>"
          ]
        },
        "description": "An array of all the renderObjects to send to the Renderer.",
        "name": "renderList"
      }
    ],
    "meta": {
      "lineno": 107,
      "filename": "LineRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 41
  },
  {
    "id": "<anonymous>~LineRenderer#_remove",
    "longname": "<anonymous>~LineRenderer#_remove",
    "name": "_remove",
    "scope": "instance",
    "kind": "function",
    "description": "Used internally to remove itself.",
    "memberof": "<anonymous>~LineRenderer",
    "meta": {
      "lineno": 121,
      "filename": "LineRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 42
  },
  {
    "id": "<anonymous>~LineRenderer#_addLine",
    "longname": "<anonymous>~LineRenderer#_addLine",
    "name": "_addLine",
    "scope": "instance",
    "kind": "function",
    "description": "Used internally to add a line to the LineRenderer to be rendered next frame.",
    "memberof": "<anonymous>~LineRenderer",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "start"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "end"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "color"
      }
    ],
    "meta": {
      "lineno": 131,
      "filename": "LineRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 43
  },
  {
    "id": "<anonymous>~LineRenderSystem#drawLine",
    "longname": "<anonymous>~LineRenderSystem#drawLine",
    "name": "drawLine",
    "scope": "instance",
    "kind": "function",
    "description": "Draws a line between two {@link Vector3}'s with the specified color.",
    "memberof": "<anonymous>~LineRenderSystem",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "start"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "end"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "A vector with its components between 0-1.",
        "name": "color"
      }
    ],
    "examples": [
      "var vector1 = new Vector3(0, 0, 0);\nvar vector2 = new Vector3(13, 3, 7);\nvar redColor = lineRenderSystem.RED;\nlineRenderSystem.drawLine(v1, v2, redColor);"
    ],
    "meta": {
      "lineno": 73,
      "filename": "LineRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 47
  },
  {
    "id": "<anonymous>~LineRenderSystem#_drawAxisLine",
    "longname": "<anonymous>~LineRenderSystem#_drawAxisLine",
    "name": "_drawAxisLine",
    "scope": "instance",
    "kind": "function",
    "description": "Used internally to calculate the line segments in an axis aligned box, and render them.",
    "memberof": "<anonymous>~LineRenderSystem",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "start"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "startEndDelta"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "startDataIndex"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "endDataIndex"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "startPolarity"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "endPolarity"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "A vector with its components between 0-1.",
        "name": "color"
      },
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "name": "transformMatrix"
      }
    ],
    "meta": {
      "lineno": 90,
      "filename": "LineRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 48
  },
  {
    "id": "<anonymous>~LineRenderSystem#drawAABox",
    "longname": "<anonymous>~LineRenderSystem#drawAABox",
    "name": "drawAABox",
    "scope": "instance",
    "kind": "function",
    "description": "Draws an axis aligned box between the min and max points, can be transformed to a specific space using the matrix.",
    "memberof": "<anonymous>~LineRenderSystem",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "min"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "max"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "A vector with its components between 0-1.",
        "name": "color"
      },
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "optional": true,
        "name": "transformMatrix"
      }
    ],
    "meta": {
      "lineno": 115,
      "filename": "LineRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 49
  },
  {
    "id": "<anonymous>~LineRenderSystem#drawCross",
    "longname": "<anonymous>~LineRenderSystem#drawCross",
    "name": "drawCross",
    "scope": "instance",
    "kind": "function",
    "description": "Draws a cross at a position with the given color and size.",
    "memberof": "<anonymous>~LineRenderSystem",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "position"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "A vector with its components between 0-1.",
        "name": "color"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0.05,
        "name": "size"
      }
    ],
    "meta": {
      "lineno": 136,
      "filename": "LineRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 50
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#setBoxExtents",
    "longname": "<anonymous>~ParticleSystemComponent#setBoxExtents",
    "name": "setBoxExtents",
    "scope": "instance",
    "kind": "function",
    "description": "Set the boxExtents.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "extents"
      }
    ],
    "meta": {
      "lineno": 1067,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 108
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#pause",
    "longname": "<anonymous>~ParticleSystemComponent#pause",
    "name": "pause",
    "scope": "instance",
    "kind": "function",
    "description": "Pause the animation.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "meta": {
      "lineno": 1146,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 112
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#resume",
    "longname": "<anonymous>~ParticleSystemComponent#resume",
    "name": "resume",
    "scope": "instance",
    "kind": "function",
    "description": "Resume the animation.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "meta": {
      "lineno": 1153,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 113
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#play",
    "longname": "<anonymous>~ParticleSystemComponent#play",
    "name": "play",
    "scope": "instance",
    "kind": "function",
    "description": "Play the animation.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "meta": {
      "lineno": 1160,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 114
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#stop",
    "longname": "<anonymous>~ParticleSystemComponent#stop",
    "name": "stop",
    "scope": "instance",
    "kind": "function",
    "description": "Stop the animation.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "meta": {
      "lineno": 1167,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 115
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#emitOne",
    "longname": "<anonymous>~ParticleSystemComponent#emitOne",
    "name": "emitOne",
    "scope": "instance",
    "kind": "function",
    "description": "Emit a particle.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "position"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "direction"
      }
    ],
    "meta": {
      "lineno": 1461,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 119
  },
  {
    "id": "<anonymous>~ParticleSystemComponent#clone",
    "longname": "<anonymous>~ParticleSystemComponent#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "returns": [
      {
        "type": {
          "names": [
            "ParticleSystemComponent"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 1707,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 126
  },
  {
    "id": "<anonymous>~Curve#toGLSL",
    "longname": "<anonymous>~Curve#toGLSL",
    "name": "toGLSL",
    "scope": "instance",
    "kind": "function",
    "description": "Convert the curve into GLSL code.",
    "memberof": "<anonymous>~Curve",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "timeVariableName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 43,
      "filename": "Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 135
  },
  {
    "id": "<anonymous>~Curve#getValueAt",
    "longname": "<anonymous>~Curve#getValueAt",
    "name": "getValueAt",
    "scope": "instance",
    "kind": "function",
    "description": "Get a value at a given point in time",
    "memberof": "<anonymous>~Curve",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "t"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "lerpValue"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 53,
      "filename": "Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 136
  },
  {
    "id": "<anonymous>~Curve#getVec4ValueAt",
    "longname": "<anonymous>~Curve#getVec4ValueAt",
    "name": "getVec4ValueAt",
    "scope": "instance",
    "kind": "function",
    "description": "Get a vec4 value at a given point in time",
    "memberof": "<anonymous>~Curve",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "t"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "lerpValue"
      },
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 63,
      "filename": "Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 137
  },
  {
    "id": "<anonymous>~Curve#getIntegralValueAt",
    "longname": "<anonymous>~Curve#getIntegralValueAt",
    "name": "getIntegralValueAt",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Curve",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "t"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "lerpValue"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 70,
      "filename": "Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 138
  },
  {
    "id": "<anonymous>~Curve#getVec4IntegralValueAt",
    "longname": "<anonymous>~Curve#getVec4IntegralValueAt",
    "name": "getVec4IntegralValueAt",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Curve",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "t"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "lerpValue"
      },
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 79,
      "filename": "Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 139
  },
  {
    "id": "<anonymous>~Curve#clone",
    "longname": "<anonymous>~Curve#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Curve",
    "returns": [
      {
        "type": {
          "names": [
            "Curve"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 84,
      "filename": "Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 140
  },
  {
    "id": "<anonymous>~LinearCurve#fromStartEnd",
    "longname": "<anonymous>~LinearCurve#fromStartEnd",
    "name": "fromStartEnd",
    "scope": "instance",
    "kind": "function",
    "description": "Create the linar curve from a start and end value.",
    "memberof": "<anonymous>~LinearCurve",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "startValue"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "endValue"
      }
    ],
    "meta": {
      "lineno": 42,
      "filename": "LinearCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 149
  },
  {
    "id": "<anonymous>~PolyCurve#addSegment",
    "longname": "<anonymous>~PolyCurve#addSegment",
    "name": "addSegment",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PolyCurve",
    "params": [
      {
        "type": {
          "names": [
            "Curve"
          ]
        },
        "name": "curve"
      }
    ],
    "meta": {
      "lineno": 38,
      "filename": "PolyCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 153
  },
  {
    "id": "<anonymous>~PolyCurve#removeSegment",
    "longname": "<anonymous>~PolyCurve#removeSegment",
    "name": "removeSegment",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PolyCurve",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "i"
      }
    ],
    "meta": {
      "lineno": 46,
      "filename": "PolyCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 154
  },
  {
    "id": "<anonymous>~PolyCurve#sort",
    "longname": "<anonymous>~PolyCurve#sort",
    "name": "sort",
    "scope": "instance",
    "kind": "function",
    "description": "Sorts the segments depending on their timeOffset.",
    "memberof": "<anonymous>~PolyCurve",
    "meta": {
      "lineno": 53,
      "filename": "PolyCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 155
  },
  {
    "id": "<anonymous>~PolyCurve#toGLSL",
    "longname": "<anonymous>~PolyCurve#toGLSL",
    "name": "toGLSL",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a GLSL expression that gives the value of the curve at a given time.",
    "memberof": "<anonymous>~PolyCurve",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "timeVariableName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "lerpVariableName"
      }
    ],
    "meta": {
      "lineno": 64,
      "filename": "PolyCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 156
  },
  {
    "id": "<anonymous>~PolyCurve#integralToGLSL",
    "longname": "<anonymous>~PolyCurve#integralToGLSL",
    "name": "integralToGLSL",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a GLSL expression that gives the integral value of the curve at a given time.",
    "memberof": "<anonymous>~PolyCurve",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "timeVariableName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "lerpVariableName"
      }
    ],
    "meta": {
      "lineno": 86,
      "filename": "PolyCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 157
  },
  {
    "id": "<anonymous>~PolyCurve#getValueAt",
    "longname": "<anonymous>~PolyCurve#getValueAt",
    "name": "getValueAt",
    "scope": "instance",
    "kind": "function",
    "description": "Get the value of the curve at a given time.",
    "memberof": "<anonymous>~PolyCurve",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "t"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "lerpValue"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 112,
      "filename": "PolyCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 158
  },
  {
    "id": "<anonymous>~PolyCurve#getIntegralValueAt",
    "longname": "<anonymous>~PolyCurve#getIntegralValueAt",
    "name": "getIntegralValueAt",
    "scope": "instance",
    "kind": "function",
    "description": "Get the integral value of the curve at a given time.",
    "memberof": "<anonymous>~PolyCurve",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "t"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "lerpValue"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 131,
      "filename": "PolyCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 159
  },
  {
    "id": "<anonymous>~ParticleSystemComponentHandler#update",
    "longname": "<anonymous>~ParticleSystemComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~ParticleSystemComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 195,
      "filename": "ParticleSystemComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/handlers"
    },
    "order": 169
  },
  {
    "id": "<anonymous>~ParticleData#getWorldPosition",
    "longname": "<anonymous>~ParticleData#getWorldPosition",
    "name": "getWorldPosition",
    "scope": "instance",
    "kind": "function",
    "description": "Get the world position of the particle",
    "memberof": "<anonymous>~ParticleData",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 88,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 184
  },
  {
    "id": "<anonymous>~ParticleSystemSystem#pause",
    "longname": "<anonymous>~ParticleSystemSystem#pause",
    "name": "pause",
    "scope": "instance",
    "kind": "function",
    "description": "Pause all ParticleSystemComponents.",
    "memberof": "<anonymous>~ParticleSystemSystem",
    "meta": {
      "lineno": 52,
      "filename": "ParticleSystemSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/systems"
    },
    "order": 199
  },
  {
    "id": "<anonymous>~ParticleSystemSystem#resume",
    "longname": "<anonymous>~ParticleSystemSystem#resume",
    "name": "resume",
    "scope": "instance",
    "kind": "function",
    "description": "Resume all ParticleSystemComponents.",
    "memberof": "<anonymous>~ParticleSystemSystem",
    "meta": {
      "lineno": 62,
      "filename": "ParticleSystemSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/systems"
    },
    "order": 200
  },
  {
    "id": "<anonymous>~ParticleSystemSystem#play",
    "longname": "<anonymous>~ParticleSystemSystem#play",
    "name": "play",
    "scope": "instance",
    "kind": "function",
    "description": "Play all ParticleSystemComponents.",
    "memberof": "<anonymous>~ParticleSystemSystem",
    "meta": {
      "lineno": 72,
      "filename": "ParticleSystemSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/systems"
    },
    "order": 201
  },
  {
    "id": "<anonymous>~BoxCollider#clone",
    "longname": "<anonymous>~BoxCollider#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Clone the collider",
    "memberof": "<anonymous>~BoxCollider",
    "returns": [
      {
        "type": {
          "names": [
            "BoxCollider"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 44,
      "filename": "BoxCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 206
  },
  {
    "id": "<anonymous>~Collider#clone",
    "longname": "<anonymous>~Collider#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Collider",
    "returns": [
      {
        "type": {
          "names": [
            "Collider"
          ]
        }
      }
    ],
    "virtual": true,
    "meta": {
      "lineno": 15,
      "filename": "Collider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 209
  },
  {
    "id": "<anonymous>~CylinderCollider#clone",
    "longname": "<anonymous>~CylinderCollider#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~CylinderCollider",
    "returns": [
      {
        "type": {
          "names": [
            "CylinderCollider"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 49,
      "filename": "CylinderCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 216
  },
  {
    "id": "<anonymous>~MeshCollider#clone",
    "longname": "<anonymous>~MeshCollider#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~MeshCollider",
    "returns": [
      {
        "type": {
          "names": [
            "MeshCollider"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 49,
      "filename": "MeshCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 222
  },
  {
    "id": "<anonymous>~PlaneCollider#clone",
    "longname": "<anonymous>~PlaneCollider#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PlaneCollider",
    "returns": [
      {
        "type": {
          "names": [
            "PlaneCollider"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 30,
      "filename": "PlaneCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 226
  },
  {
    "id": "<anonymous>~SphereCollider#clone",
    "longname": "<anonymous>~SphereCollider#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~SphereCollider",
    "returns": [
      {
        "type": {
          "names": [
            "SphereCollider"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 45,
      "filename": "SphereCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 231
  },
  {
    "id": "<anonymous>~AbstractColliderComponent#getBodyEntity",
    "longname": "<anonymous>~AbstractColliderComponent#getBodyEntity",
    "name": "getBodyEntity",
    "scope": "instance",
    "kind": "function",
    "description": "Get the closest parent (or self) entity that has a RigidBodyComponent. Returns undefined if none was found.",
    "memberof": "<anonymous>~AbstractColliderComponent",
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 66,
      "filename": "AbstractColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 240
  },
  {
    "id": "<anonymous>~AbstractColliderComponent#updateWorldCollider",
    "longname": "<anonymous>~AbstractColliderComponent#updateWorldCollider",
    "name": "updateWorldCollider",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the .worldCollider",
    "memberof": "<anonymous>~AbstractColliderComponent",
    "meta": {
      "lineno": 80,
      "filename": "AbstractColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 241
  },
  {
    "id": "<anonymous>~AbstractRigidBodyComponent#addJoint",
    "longname": "<anonymous>~AbstractRigidBodyComponent#addJoint",
    "name": "addJoint",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~AbstractRigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "PhysicsJoint"
          ]
        },
        "name": "joint"
      }
    ],
    "meta": {
      "lineno": 38,
      "filename": "AbstractRigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 248
  },
  {
    "id": "<anonymous>~AbstractRigidBodyComponent#removeJoint",
    "longname": "<anonymous>~AbstractRigidBodyComponent#removeJoint",
    "name": "removeJoint",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~AbstractRigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "PhysicsJoint"
          ]
        },
        "name": "joint"
      }
    ],
    "meta": {
      "lineno": 45,
      "filename": "AbstractRigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 249
  },
  {
    "id": "<anonymous>~AbstractRigidBodyComponent#emitInitialized",
    "longname": "<anonymous>~AbstractRigidBodyComponent#emitInitialized",
    "name": "emitInitialized",
    "scope": "instance",
    "kind": "function",
    "description": "Should be called by subclasses when initializing the physics engine body.",
    "memberof": "<anonymous>~AbstractRigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "name": "entity"
      }
    ],
    "meta": {
      "lineno": 61,
      "filename": "AbstractRigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 250
  },
  {
    "id": "<anonymous>~AbstractRigidBodyComponent#initialize",
    "longname": "<anonymous>~AbstractRigidBodyComponent#initialize",
    "name": "initialize",
    "scope": "instance",
    "kind": "function",
    "virtual": true,
    "description": "Creates the physics engine rigid body and adds it to the simulation",
    "memberof": "<anonymous>~AbstractRigidBodyComponent",
    "meta": {
      "lineno": 72,
      "filename": "AbstractRigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 251
  },
  {
    "id": "<anonymous>~AbstractRigidBodyComponent#destroy",
    "longname": "<anonymous>~AbstractRigidBodyComponent#destroy",
    "name": "destroy",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~AbstractRigidBodyComponent",
    "virtual": true,
    "meta": {
      "lineno": 77,
      "filename": "AbstractRigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 252
  },
  {
    "id": "<anonymous>~AbstractRigidBodyComponent#initializeJoint",
    "longname": "<anonymous>~AbstractRigidBodyComponent#initializeJoint",
    "name": "initializeJoint",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a joint in the physics engine.",
    "memberof": "<anonymous>~AbstractRigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "PhysicsJoint"
          ]
        },
        "name": "joint"
      },
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "System"
          ]
        },
        "name": "system"
      }
    ],
    "meta": {
      "lineno": 86,
      "filename": "AbstractRigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "virtual": true,
    "order": 253
  },
  {
    "id": "<anonymous>~AbstractRigidBodyComponent#destroyJoint",
    "longname": "<anonymous>~AbstractRigidBodyComponent#destroyJoint",
    "name": "destroyJoint",
    "scope": "instance",
    "kind": "function",
    "description": "Removes a joint from the physics engine.",
    "memberof": "<anonymous>~AbstractRigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "PhysicsJoint"
          ]
        },
        "name": "joint"
      }
    ],
    "meta": {
      "lineno": 93,
      "filename": "AbstractRigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "virtual": true,
    "order": 254
  },
  {
    "id": "<anonymous>~AbstractRigidBodyComponent#traverseColliders",
    "longname": "<anonymous>~AbstractRigidBodyComponent#traverseColliders",
    "name": "traverseColliders",
    "scope": "instance",
    "kind": "function",
    "description": "Traverse the tree of colliders from a root entity and down.",
    "memberof": "<anonymous>~AbstractRigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "A callback to be called for each collider below or on the same entity. The arguments to the callback are: colliderEntity, collider, localPosition and localQuaternion.",
        "name": "callback"
      }
    ],
    "meta": {
      "lineno": 104,
      "filename": "AbstractRigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 255
  },
  {
    "id": "<anonymous>~ColliderComponent#initialize",
    "longname": "<anonymous>~ColliderComponent#initialize",
    "name": "initialize",
    "scope": "instance",
    "kind": "function",
    "description": "Initialize the collider as a static rigid body in the physics world.",
    "memberof": "<anonymous>~ColliderComponent",
    "meta": {
      "lineno": 62,
      "filename": "ColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 262
  },
  {
    "id": "<anonymous>~ColliderComponent#destroy",
    "longname": "<anonymous>~ColliderComponent#destroy",
    "name": "destroy",
    "scope": "instance",
    "kind": "function",
    "description": "Remove the collider from the physics world. Does the opposite of .initialize()",
    "memberof": "<anonymous>~ColliderComponent",
    "meta": {
      "lineno": 115,
      "filename": "ColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 263
  },
  {
    "id": "<anonymous>~RigidBodyComponent#applyForce",
    "longname": "<anonymous>~RigidBodyComponent#applyForce",
    "name": "applyForce",
    "scope": "instance",
    "kind": "function",
    "description": "Apply a force to a point on the body in world space.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The force vector, oriented in world space.",
        "name": "force"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "Where to apply the force. Defaults to the zero vector (the center of mass).",
        "name": "relativePoint"
      }
    ],
    "meta": {
      "lineno": 253,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 296
  },
  {
    "id": "<anonymous>~RigidBodyComponent#applyForceLocal",
    "longname": "<anonymous>~RigidBodyComponent#applyForceLocal",
    "name": "applyForceLocal",
    "scope": "instance",
    "kind": "function",
    "description": "Apply a force to the body in local body space.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The force vector, oriented in local space.",
        "name": "force"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "Where to apply the force. Defaults to the zero vector (the center of mass).",
        "name": "relativePoint"
      }
    ],
    "meta": {
      "lineno": 271,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 297
  },
  {
    "id": "<anonymous>~RigidBodyComponent#applyTorque",
    "longname": "<anonymous>~RigidBodyComponent#applyTorque",
    "name": "applyTorque",
    "scope": "instance",
    "kind": "function",
    "description": "Apply a torque to a point on the body in world space.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The torque vector, oriented in world space.",
        "name": "torque"
      }
    ],
    "meta": {
      "lineno": 294,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 298
  },
  {
    "id": "<anonymous>~RigidBodyComponent#applyTorqueLocal",
    "longname": "<anonymous>~RigidBodyComponent#applyTorqueLocal",
    "name": "applyTorqueLocal",
    "scope": "instance",
    "kind": "function",
    "description": "Apply a torque to the body in local body space.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The torque vector, oriented in local body space.",
        "name": "torque"
      }
    ],
    "meta": {
      "lineno": 303,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 299
  },
  {
    "id": "<anonymous>~RigidBodyComponent#applyImpulse",
    "longname": "<anonymous>~RigidBodyComponent#applyImpulse",
    "name": "applyImpulse",
    "scope": "instance",
    "kind": "function",
    "description": "Apply an impulse to the body.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The impulse vector, oriented in world space.",
        "name": "impulse"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Where the impulse should be applied",
        "name": "relativePoint"
      }
    ],
    "meta": {
      "lineno": 317,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 300
  },
  {
    "id": "<anonymous>~RigidBodyComponent#applyImpulseLocal",
    "longname": "<anonymous>~RigidBodyComponent#applyImpulseLocal",
    "name": "applyImpulseLocal",
    "scope": "instance",
    "kind": "function",
    "description": "Apply an impulse to the center of mass of the body.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The force vector, oriented in local space.",
        "name": "impulse"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "relativePoint"
      }
    ],
    "meta": {
      "lineno": 328,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 301
  },
  {
    "id": "<anonymous>~RigidBodyComponent#setVelocity",
    "longname": "<anonymous>~RigidBodyComponent#setVelocity",
    "name": "setVelocity",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "velocity"
      }
    ],
    "meta": {
      "lineno": 337,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 302
  },
  {
    "id": "<anonymous>~RigidBodyComponent#getVelocity",
    "longname": "<anonymous>~RigidBodyComponent#getVelocity",
    "name": "getVelocity",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "targetVector"
      }
    ],
    "meta": {
      "lineno": 347,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 303
  },
  {
    "id": "<anonymous>~RigidBodyComponent#setAngularVelocity",
    "longname": "<anonymous>~RigidBodyComponent#setAngularVelocity",
    "name": "setAngularVelocity",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "angularVelocity"
      }
    ],
    "meta": {
      "lineno": 356,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 304
  },
  {
    "id": "<anonymous>~RigidBodyComponent#getAngularVelocity",
    "longname": "<anonymous>~RigidBodyComponent#getAngularVelocity",
    "name": "getAngularVelocity",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "targetVector"
      }
    ],
    "meta": {
      "lineno": 366,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 305
  },
  {
    "id": "<anonymous>~RigidBodyComponent#setPosition",
    "longname": "<anonymous>~RigidBodyComponent#setPosition",
    "name": "setPosition",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "position"
      }
    ],
    "meta": {
      "lineno": 375,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 306
  },
  {
    "id": "<anonymous>~RigidBodyComponent#getPosition",
    "longname": "<anonymous>~RigidBodyComponent#getPosition",
    "name": "getPosition",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "targetVector"
      }
    ],
    "meta": {
      "lineno": 384,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 307
  },
  {
    "id": "<anonymous>~RigidBodyComponent#getInterpolatedPosition",
    "longname": "<anonymous>~RigidBodyComponent#getInterpolatedPosition",
    "name": "getInterpolatedPosition",
    "scope": "instance",
    "kind": "function",
    "description": "Get the interpolated position from the rigid body. Use this for rendering. The resulting vector is a linear interpolation between the current and previous physics position, that matches the current rendering frame.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "targetVector"
      }
    ],
    "meta": {
      "lineno": 395,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 308
  },
  {
    "id": "<anonymous>~RigidBodyComponent#setQuaternion",
    "longname": "<anonymous>~RigidBodyComponent#setQuaternion",
    "name": "setQuaternion",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "name": "quaternion"
      }
    ],
    "meta": {
      "lineno": 405,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 309
  },
  {
    "id": "<anonymous>~RigidBodyComponent#getQuaternion",
    "longname": "<anonymous>~RigidBodyComponent#getQuaternion",
    "name": "getQuaternion",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "name": "targetQuat"
      }
    ],
    "meta": {
      "lineno": 414,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 310
  },
  {
    "id": "<anonymous>~RigidBodyComponent#getInterpolatedQuaternion",
    "longname": "<anonymous>~RigidBodyComponent#getInterpolatedQuaternion",
    "name": "getInterpolatedQuaternion",
    "scope": "instance",
    "kind": "function",
    "description": "Get the interpolated quaternion from the rigid body. Use this for rendering. The resulting quaternion is a spherical interpolation between the current and previous physics position, that matches the current rendering frame.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "params": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "name": "targetQuat"
      }
    ],
    "meta": {
      "lineno": 430,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 311
  },
  {
    "id": "<anonymous>~RigidBodyComponent#destroy",
    "longname": "<anonymous>~RigidBodyComponent#destroy",
    "name": "destroy",
    "scope": "instance",
    "kind": "function",
    "description": "Removes the body from the physics engine",
    "memberof": "<anonymous>~RigidBodyComponent",
    "meta": {
      "lineno": 564,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 319
  },
  {
    "id": "<anonymous>~RigidBodyComponent#initialize",
    "longname": "<anonymous>~RigidBodyComponent#initialize",
    "name": "initialize",
    "scope": "instance",
    "kind": "function",
    "description": "Initialize the Cannon.js body available in the .cannonBody property. This is useful if the intention is to work with the CANNON.Body instance directly after the component is created.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "meta": {
      "lineno": 598,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 320
  },
  {
    "id": "<anonymous>~RigidBodyComponent#initializeJoint",
    "longname": "<anonymous>~RigidBodyComponent#initializeJoint",
    "name": "initializeJoint",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~RigidBodyComponent",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 632,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 321
  },
  {
    "id": "<anonymous>~RigidBodyComponent#destroyJoint",
    "longname": "<anonymous>~RigidBodyComponent#destroyJoint",
    "name": "destroyJoint",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~RigidBodyComponent",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 726,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 322
  },
  {
    "id": "<anonymous>~RigidBodyComponent#clone",
    "longname": "<anonymous>~RigidBodyComponent#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a new instance indentical to this component.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "returns": [
      {
        "description": "RigidBodyComponent"
      }
    ],
    "meta": {
      "lineno": 773,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 324
  },
  {
    "id": "<anonymous>~ColliderComponentHandler#_remove",
    "longname": "<anonymous>~ColliderComponentHandler#_remove",
    "name": "_remove",
    "scope": "instance",
    "kind": "function",
    "description": "Removes the collider component",
    "memberof": "<anonymous>~ColliderComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      }
    ],
    "meta": {
      "lineno": 76,
      "filename": "ColliderComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/handlers"
    },
    "order": 330
  },
  {
    "id": "<anonymous>~ColliderComponentHandler#update",
    "longname": "<anonymous>~ColliderComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine collider component object based on the config.",
    "memberof": "<anonymous>~ColliderComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 87,
      "filename": "ColliderComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/handlers"
    },
    "order": 331
  },
  {
    "id": "<anonymous>~RigidBodyComponentHandler#_remove",
    "longname": "<anonymous>~RigidBodyComponentHandler#_remove",
    "name": "_remove",
    "scope": "instance",
    "kind": "function",
    "description": "Removes the rigid body component",
    "memberof": "<anonymous>~RigidBodyComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      }
    ],
    "meta": {
      "lineno": 65,
      "filename": "RigidBodyComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/handlers"
    },
    "order": 336
  },
  {
    "id": "<anonymous>~RigidBodyComponentHandler#update",
    "longname": "<anonymous>~RigidBodyComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine rigid body component object based on the config.",
    "memberof": "<anonymous>~RigidBodyComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 76,
      "filename": "RigidBodyComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/handlers"
    },
    "order": 337
  },
  {
    "id": "<anonymous>~PhysicsBoxDebugShape#buildWireframeData",
    "longname": "<anonymous>~PhysicsBoxDebugShape#buildWireframeData",
    "name": "buildWireframeData",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PhysicsBoxDebugShape",
    "returns": [
      {
        "type": {
          "names": [
            "PhysicsBoxDebugShape"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 26,
      "filename": "PhysicsBoxDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 365
  },
  {
    "id": "<anonymous>~PhysicsBoxDebugShape#rebuild",
    "longname": "<anonymous>~PhysicsBoxDebugShape#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PhysicsBoxDebugShape",
    "returns": [
      {
        "type": {
          "names": [
            "PhysicsBoxDebugShape"
          ]
        },
        "description": "self for chaining"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "PhysicsBoxDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 366
  },
  {
    "id": "<anonymous>~PhysicsCylinderDebugShape#buildWireframeData",
    "longname": "<anonymous>~PhysicsCylinderDebugShape#buildWireframeData",
    "name": "buildWireframeData",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PhysicsCylinderDebugShape",
    "returns": [
      {
        "type": {
          "names": [
            "PhysicsCylinderDebugShape"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 29,
      "filename": "PhysicsCylinderDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 369
  },
  {
    "id": "<anonymous>~PhysicsCylinderDebugShape#rebuild",
    "longname": "<anonymous>~PhysicsCylinderDebugShape#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PhysicsCylinderDebugShape",
    "returns": [
      {
        "type": {
          "names": [
            "PhysicsCylinderDebugShape"
          ]
        },
        "description": "self for chaining"
      }
    ],
    "meta": {
      "lineno": 36,
      "filename": "PhysicsCylinderDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 370
  },
  {
    "id": "<anonymous>~PhysicsPlaneDebugShape#buildWireframeData",
    "longname": "<anonymous>~PhysicsPlaneDebugShape#buildWireframeData",
    "name": "buildWireframeData",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PhysicsPlaneDebugShape",
    "returns": [
      {
        "type": {
          "names": [
            "PhysicsPlaneDebugShape"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 26,
      "filename": "PhysicsPlaneDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 373
  },
  {
    "id": "<anonymous>~PhysicsPlaneDebugShape#rebuild",
    "longname": "<anonymous>~PhysicsPlaneDebugShape#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PhysicsPlaneDebugShape",
    "returns": [
      {
        "type": {
          "names": [
            "PhysicsPlaneDebugShape"
          ]
        },
        "description": "self for chaining"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "PhysicsPlaneDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 374
  },
  {
    "id": "<anonymous>~PhysicsSphereDebugShape#buildWireframeData",
    "longname": "<anonymous>~PhysicsSphereDebugShape#buildWireframeData",
    "name": "buildWireframeData",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PhysicsSphereDebugShape",
    "returns": [
      {
        "type": {
          "names": [
            "PhysicsSphereDebugShape"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 29,
      "filename": "PhysicsSphereDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 377
  },
  {
    "id": "<anonymous>~PhysicsSphereDebugShape#rebuild",
    "longname": "<anonymous>~PhysicsSphereDebugShape#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PhysicsSphereDebugShape",
    "returns": [
      {
        "type": {
          "names": [
            "PhysicsSphereDebugShape"
          ]
        },
        "description": "self for chaining"
      }
    ],
    "meta": {
      "lineno": 36,
      "filename": "PhysicsSphereDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 378
  },
  {
    "id": "<anonymous>~AbstractPhysicsSystem#setGravity",
    "longname": "<anonymous>~AbstractPhysicsSystem#setGravity",
    "name": "setGravity",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~AbstractPhysicsSystem",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "gravityVector"
      }
    ],
    "virtual": true,
    "meta": {
      "lineno": 55,
      "filename": "AbstractPhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 382
  },
  {
    "id": "<anonymous>~PhysicsSystem#setGravity",
    "longname": "<anonymous>~PhysicsSystem#setGravity",
    "name": "setGravity",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PhysicsSystem",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "gravityVector"
      }
    ],
    "meta": {
      "lineno": 142,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 411
  },
  {
    "id": "<anonymous>~PhysicsSystem#getGravity",
    "longname": "<anonymous>~PhysicsSystem#getGravity",
    "name": "getGravity",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~PhysicsSystem",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 149,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 412
  },
  {
    "id": "<anonymous>~PhysicsSystem#raycastAny",
    "longname": "<anonymous>~PhysicsSystem#raycastAny",
    "name": "raycastAny",
    "scope": "instance",
    "kind": "function",
    "description": "Make a ray cast into the world of colliders, stopping at the first hit that the ray intersects. Note that there's no given order in the traversal, and there's no control over what will be returned.",
    "memberof": "<anonymous>~PhysicsSystem",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "start"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "direction"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "maxDistance"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": -1,
        "name": "options.collisionMask"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": -1,
        "name": "options.collisionGroup"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "options.skipBackFaces"
      },
      {
        "type": {
          "names": [
            "RaycastResult"
          ]
        },
        "optional": true,
        "name": "result"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if hit, else false"
      }
    ],
    "meta": {
      "lineno": 215,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 414
  },
  {
    "id": "<anonymous>~PhysicsSystem#raycastClosest",
    "longname": "<anonymous>~PhysicsSystem#raycastClosest",
    "name": "raycastClosest",
    "scope": "instance",
    "kind": "function",
    "description": "Make a ray cast into the world of colliders, and only return the closest hit.",
    "memberof": "<anonymous>~PhysicsSystem",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "start"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "direction"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "maxDistance"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": -1,
        "name": "options.collisionMask"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": -1,
        "name": "options.collisionGroup"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "options.skipBackFaces"
      },
      {
        "type": {
          "names": [
            "RaycastResult"
          ]
        },
        "optional": true,
        "name": "result"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if hit, else false"
      }
    ],
    "meta": {
      "lineno": 244,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 415
  },
  {
    "id": "<anonymous>~PhysicsSystem#raycastAll",
    "longname": "<anonymous>~PhysicsSystem#raycastAll",
    "name": "raycastAll",
    "scope": "instance",
    "kind": "function",
    "description": "Make a ray cast into the world of colliders, evaluating the given callback once at every hit.",
    "memberof": "<anonymous>~PhysicsSystem",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "start"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "direction"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "maxDistance"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": -1,
        "name": "options.collisionMask"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": -1,
        "name": "options.collisionGroup"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "options.skipBackFaces"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "A callback that gets a RaycastResult as single argument and should return a boolean.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if hit, else false"
      }
    ],
    "meta": {
      "lineno": 275,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 416
  },
  {
    "id": "<anonymous>~PhysicsSystem#play",
    "longname": "<anonymous>~PhysicsSystem#play",
    "name": "play",
    "scope": "instance",
    "kind": "function",
    "description": "Resumes simulation and starts updating the entities after stop() or pause().",
    "memberof": "<anonymous>~PhysicsSystem",
    "meta": {
      "lineno": 304,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 417
  },
  {
    "id": "<anonymous>~PhysicsSystem#pause",
    "longname": "<anonymous>~PhysicsSystem#pause",
    "name": "pause",
    "scope": "instance",
    "kind": "function",
    "description": "Stops simulation and updating of the entitiy transforms.",
    "memberof": "<anonymous>~PhysicsSystem",
    "meta": {
      "lineno": 314,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 418
  },
  {
    "id": "<anonymous>~PhysicsSystem#resume",
    "longname": "<anonymous>~PhysicsSystem#resume",
    "name": "resume",
    "scope": "instance",
    "kind": "function",
    "description": "Resumes simulation and starts updating the entities after stop() or pause(); an alias for `.play`",
    "memberof": "<anonymous>~PhysicsSystem",
    "meta": {
      "lineno": 321,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 419
  },
  {
    "id": "<anonymous>~PhysicsSystem#stop",
    "longname": "<anonymous>~PhysicsSystem#stop",
    "name": "stop",
    "scope": "instance",
    "kind": "function",
    "description": "Stops simulation.",
    "memberof": "<anonymous>~PhysicsSystem",
    "meta": {
      "lineno": 328,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 420
  },
  {
    "id": "<anonymous>~Pool#resize",
    "longname": "<anonymous>~Pool#resize",
    "name": "resize",
    "scope": "instance",
    "kind": "function",
    "description": "Fill the pool so it has exactly \"size\" objects. If the current number of objects is larger than the requested size, the excess objects are destroyed.",
    "memberof": "<anonymous>~Pool",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "size"
      }
    ],
    "meta": {
      "lineno": 61,
      "filename": "Pool.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/util"
    },
    "order": 431
  },
  {
    "id": "<anonymous>~Pool#get",
    "longname": "<anonymous>~Pool#get",
    "name": "get",
    "scope": "instance",
    "kind": "function",
    "description": "Get an object from the pool if there are free ones, or create a new object.",
    "memberof": "<anonymous>~Pool",
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 81,
      "filename": "Pool.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/util"
    },
    "order": 432
  },
  {
    "id": "<anonymous>~Pool#release",
    "longname": "<anonymous>~Pool#release",
    "name": "release",
    "scope": "instance",
    "kind": "function",
    "description": "Put an object back into the pool.",
    "memberof": "<anonymous>~Pool",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "object"
      }
    ],
    "meta": {
      "lineno": 92,
      "filename": "Pool.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/util"
    },
    "order": 433
  },
  {
    "id": "<anonymous>~TerrainSurface#rebuild",
    "longname": "<anonymous>~TerrainSurface#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data",
    "memberof": "<anonymous>~TerrainSurface",
    "returns": [
      {
        "type": {
          "names": [
            "Surface"
          ]
        },
        "description": "Self for chaining"
      }
    ],
    "meta": {
      "lineno": 43,
      "filename": "TerrainSurface.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/terrainpack"
    },
    "order": 442
  },
  {
    "id": "<anonymous>~ProjectedGrid#rebuild",
    "longname": "<anonymous>~ProjectedGrid#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~ProjectedGrid",
    "returns": [
      {
        "type": {
          "names": [
            "ProjectedGrid"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 300,
      "filename": "ProjectedGrid.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/waterpack"
    },
    "order": 447
  },
  {
    "id": "<anonymous>~BinaryLerpSource#setTime",
    "longname": "<anonymous>~BinaryLerpSource#setTime",
    "name": "setTime",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the current time and moves the {@link AnimationClipInstance} forward",
    "memberof": "<anonymous>~BinaryLerpSource",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "globalTime"
      }
    ],
    "meta": {
      "lineno": 41,
      "filename": "BinaryLerpSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 452
  },
  {
    "id": "<anonymous>~BinaryLerpSource#resetClips",
    "longname": "<anonymous>~BinaryLerpSource#resetClips",
    "name": "resetClips",
    "scope": "instance",
    "kind": "function",
    "description": "Sets start time of clipinstance. If set to current time, clip is reset",
    "memberof": "<anonymous>~BinaryLerpSource",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "globalStartTime"
      }
    ],
    "meta": {
      "lineno": 58,
      "filename": "BinaryLerpSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 453
  },
  {
    "id": "<anonymous>~BinaryLerpSource#setTimeScale",
    "longname": "<anonymous>~BinaryLerpSource#setTimeScale",
    "name": "setTimeScale",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the time scale for sources A and B",
    "memberof": "<anonymous>~BinaryLerpSource",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "timeScale"
      }
    ],
    "meta": {
      "lineno": 82,
      "filename": "BinaryLerpSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 454
  },
  {
    "id": "<anonymous>~BinaryLerpSource#isActive",
    "longname": "<anonymous>~BinaryLerpSource#isActive",
    "name": "isActive",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~BinaryLerpSource",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "from calling the isActive method on sources A or B"
      }
    ],
    "meta": {
      "lineno": 90,
      "filename": "BinaryLerpSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 455
  },
  {
    "id": "<anonymous>~ClipSource#setFilter",
    "longname": "<anonymous>~ClipSource#setFilter",
    "name": "setFilter",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the filter on the joints which the clipsource will affect",
    "memberof": "<anonymous>~ClipSource",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "'Exclude' or 'Include'",
        "name": "filter"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "optional": true,
        "name": "channelNames"
      }
    ],
    "meta": {
      "lineno": 34,
      "filename": "ClipSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 460
  },
  {
    "id": "<anonymous>~ClipSource#clone",
    "longname": "<anonymous>~ClipSource#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~ClipSource",
    "returns": [
      {
        "type": {
          "names": [
            "ClipSource"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 169,
      "filename": "ClipSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 467
  },
  {
    "id": "<anonymous>~FrozenClipSource#getSourceData",
    "longname": "<anonymous>~FrozenClipSource#getSourceData",
    "name": "getSourceData",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~FrozenClipSource",
    "returns": [
      {
        "description": "a source data mapping for the channels in this clip source"
      }
    ],
    "meta": {
      "lineno": 20,
      "filename": "FrozenClipSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 470
  },
  {
    "id": "<anonymous>~FrozenClipSource#resetClips",
    "longname": "<anonymous>~FrozenClipSource#resetClips",
    "name": "resetClips",
    "scope": "instance",
    "kind": "function",
    "description": "Sets start time of clipinstance to 0, so frozenTime will calculate correctly",
    "memberof": "<anonymous>~FrozenClipSource",
    "meta": {
      "lineno": 27,
      "filename": "FrozenClipSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 471
  },
  {
    "id": "<anonymous>~FrozenClipSource#setTime",
    "longname": "<anonymous>~FrozenClipSource#setTime",
    "name": "setTime",
    "scope": "instance",
    "kind": "function",
    "description": "This will be called by a {@link SteadyState}, but will not update the animation, and will return true, to indicate animation is still active",
    "memberof": "<anonymous>~FrozenClipSource",
    "meta": {
      "lineno": 34,
      "filename": "FrozenClipSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 472
  },
  {
    "id": "<anonymous>~FrozenClipSource#isActive",
    "longname": "<anonymous>~FrozenClipSource#isActive",
    "name": "isActive",
    "scope": "instance",
    "kind": "function",
    "description": "A FrozenTreeSource is always active",
    "memberof": "<anonymous>~FrozenClipSource",
    "meta": {
      "lineno": 42,
      "filename": "FrozenClipSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 473
  },
  {
    "id": "<anonymous>~FrozenClipSource#setTimeScale",
    "longname": "<anonymous>~FrozenClipSource#setTimeScale",
    "name": "setTimeScale",
    "scope": "instance",
    "kind": "function",
    "description": "Set time scale",
    "memberof": "<anonymous>~FrozenClipSource",
    "meta": {
      "lineno": 49,
      "filename": "FrozenClipSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 474
  },
  {
    "id": "<anonymous>~FrozenClipSource#clone",
    "longname": "<anonymous>~FrozenClipSource#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~FrozenClipSource",
    "returns": [
      {
        "type": {
          "names": [
            "FrozenClipSource"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 54,
      "filename": "FrozenClipSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 475
  },
  {
    "id": "<anonymous>~ManagedTransformSource#setTranslation",
    "longname": "<anonymous>~ManagedTransformSource#setTranslation",
    "name": "setTranslation",
    "scope": "instance",
    "kind": "function",
    "description": "Sets a translation to the local transformdata for a given channelName. The channel has to be an instance of {@link TransformChannel}",
    "memberof": "<anonymous>~ManagedTransformSource",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "channelName"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "the translation to set",
        "name": "translation"
      }
    ],
    "meta": {
      "lineno": 34,
      "filename": "ManagedTransformSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 478
  },
  {
    "id": "<anonymous>~ManagedTransformSource#getTranslation",
    "longname": "<anonymous>~ManagedTransformSource#getTranslation",
    "name": "getTranslation",
    "scope": "instance",
    "kind": "function",
    "description": "Gets the translation of the local transformdata for a given channelName. The channel has to be an instance of {@link TransformChannel}",
    "memberof": "<anonymous>~ManagedTransformSource",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "channelName"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "to store the result in",
        "name": "store"
      }
    ],
    "returns": [
      {
        "description": "new Vector3 with result or store"
      }
    ],
    "meta": {
      "lineno": 47,
      "filename": "ManagedTransformSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 479
  },
  {
    "id": "<anonymous>~ManagedTransformSource#setScale",
    "longname": "<anonymous>~ManagedTransformSource#setScale",
    "name": "setScale",
    "scope": "instance",
    "kind": "function",
    "description": "Sets a scale to the local transformdata for a given channelName. The channel has to be an instance of {@link TransformChannel}",
    "memberof": "<anonymous>~ManagedTransformSource",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "channelName"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "the scale to set",
        "name": "scale"
      }
    ],
    "meta": {
      "lineno": 61,
      "filename": "ManagedTransformSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 480
  },
  {
    "id": "<anonymous>~ManagedTransformSource#getScale",
    "longname": "<anonymous>~ManagedTransformSource#getScale",
    "name": "getScale",
    "scope": "instance",
    "kind": "function",
    "description": "Gets the scale from the local transformdata for a given channelName. The channel has to be an instance of {@link TransformChannel}",
    "memberof": "<anonymous>~ManagedTransformSource",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "channelName"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "to store the result in",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "new vector with result or store"
      }
    ],
    "meta": {
      "lineno": 74,
      "filename": "ManagedTransformSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 481
  },
  {
    "id": "<anonymous>~ManagedTransformSource#setRotation",
    "longname": "<anonymous>~ManagedTransformSource#setRotation",
    "name": "setRotation",
    "scope": "instance",
    "kind": "function",
    "description": "Sets a rotation to the local transformdata for a given channelName. The channel has to be an instance of {@link TransformChannel}",
    "memberof": "<anonymous>~ManagedTransformSource",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "channelName"
      },
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "the rotation to set",
        "name": "rotation"
      }
    ],
    "meta": {
      "lineno": 88,
      "filename": "ManagedTransformSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 482
  },
  {
    "id": "<anonymous>~ManagedTransformSource#getRotation",
    "longname": "<anonymous>~ManagedTransformSource#getRotation",
    "name": "getRotation",
    "scope": "instance",
    "kind": "function",
    "description": "Gets rotation from the local transformdata for a given channelName. The channel has to be an instance of {@link TransformChannel}",
    "memberof": "<anonymous>~ManagedTransformSource",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "channelName"
      },
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "optional": true,
        "description": "to store the result in",
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 100,
      "filename": "ManagedTransformSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 483
  },
  {
    "id": "<anonymous>~ManagedTransformSource#initFromClip",
    "longname": "<anonymous>~ManagedTransformSource#initFromClip",
    "name": "initFromClip",
    "scope": "instance",
    "kind": "function",
    "description": "Setup transform data for specific joints on this source, using the first frame from a given clip.",
    "memberof": "<anonymous>~ManagedTransformSource",
    "params": [
      {
        "type": {
          "names": [
            "AnimationClip"
          ]
        },
        "description": "the animation clip to pull data from",
        "name": "clip"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "the indices of the joints to initialize data for.",
        "name": "jointIndices"
      }
    ],
    "meta": {
      "lineno": 114,
      "filename": "ManagedTransformSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 484
  },
  {
    "id": "<anonymous>~ManagedTransformSource#clone",
    "longname": "<anonymous>~ManagedTransformSource#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~ManagedTransformSource",
    "returns": [
      {
        "type": {
          "names": [
            "ManagedTransformSource"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 181,
      "filename": "ManagedTransformSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 485
  },
  {
    "id": "<anonymous>~AnimationClip#addChannel",
    "longname": "<anonymous>~AnimationClip#addChannel",
    "name": "addChannel",
    "scope": "instance",
    "kind": "function",
    "description": "Add a channel to this clip.",
    "memberof": "<anonymous>~AnimationClip",
    "params": [
      {
        "type": {
          "names": [
            "AbstractAnimationChannel"
          ]
        },
        "description": "the channel to add.",
        "name": "channel"
      }
    ],
    "meta": {
      "lineno": 37,
      "filename": "AnimationClip.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 490
  },
  {
    "id": "<anonymous>~AnimationClip#removeChannel",
    "longname": "<anonymous>~AnimationClip#removeChannel",
    "name": "removeChannel",
    "scope": "instance",
    "kind": "function",
    "description": "Remove a given channel from this clip.",
    "memberof": "<anonymous>~AnimationClip",
    "params": [
      {
        "type": {
          "names": [
            "AbstractAnimationChannel"
          ]
        },
        "description": "the channel to remove.",
        "name": "channel"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "true if this clip had the given channel and it was removed."
      }
    ],
    "meta": {
      "lineno": 47,
      "filename": "AnimationClip.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 491
  },
  {
    "id": "<anonymous>~AnimationClip#findChannelByName",
    "longname": "<anonymous>~AnimationClip#findChannelByName",
    "name": "findChannelByName",
    "scope": "instance",
    "kind": "function",
    "description": "Locate a channel in this clip using its channel name.",
    "memberof": "<anonymous>~AnimationClip",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the name to match against.",
        "name": "channelName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "AbstractAnimationChannel"
          ]
        },
        "description": "the first channel with a name matching the given channelName, or null if no matches are found."
      }
    ],
    "meta": {
      "lineno": 62,
      "filename": "AnimationClip.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 492
  },
  {
    "id": "<anonymous>~AnimationClipInstance#setTimeScale",
    "longname": "<anonymous>~AnimationClipInstance#setTimeScale",
    "name": "setTimeScale",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the timescale of the animation, speeding it up or slowing it down",
    "memberof": "<anonymous>~AnimationClipInstance",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "scale"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": "World.time",
        "name": "globalTime"
      }
    ],
    "meta": {
      "lineno": 27,
      "filename": "AnimationClipInstance.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 495
  },
  {
    "id": "<anonymous>~AnimationClipInstance#getApplyTo",
    "longname": "<anonymous>~AnimationClipInstance#getApplyTo",
    "name": "getApplyTo",
    "scope": "instance",
    "kind": "function",
    "description": "Gives the corresponding data for a channel, to apply animations to",
    "memberof": "<anonymous>~AnimationClipInstance",
    "params": [
      {
        "type": {
          "names": [
            "AbstractAnimationChannel"
          ]
        },
        "name": "channel"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TransformData",
            "TriggerData",
            "Array.<number>"
          ]
        },
        "description": "the animation data item"
      }
    ],
    "meta": {
      "lineno": 50,
      "filename": "AnimationClipInstance.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 496
  },
  {
    "id": "<anonymous>~InterpolatedFloatChannel#getData",
    "longname": "<anonymous>~InterpolatedFloatChannel#getData",
    "name": "getData",
    "scope": "instance",
    "kind": "function",
    "description": "Apply a specific index of this channel to a {@link TransformData} object.",
    "memberof": "<anonymous>~InterpolatedFloatChannel",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the index to grab.",
        "name": "index"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "optional": true,
        "description": "the TransformData to store in. If null, a new one is created.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "our resulting TransformData."
      }
    ],
    "meta": {
      "lineno": 50,
      "filename": "InterpolatedFloatChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 499
  },
  {
    "id": "<anonymous>~JointChannel#getData",
    "longname": "<anonymous>~JointChannel#getData",
    "name": "getData",
    "scope": "instance",
    "kind": "function",
    "description": "Apply a specific index of this channel to a {@link TransformData} object.",
    "memberof": "<anonymous>~JointChannel",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the index to grab.",
        "name": "index"
      },
      {
        "type": {
          "names": [
            "JointData"
          ]
        },
        "optional": true,
        "description": "the TransformData to store in. If null, a new one is created.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "JointData"
          ]
        },
        "description": "our resulting TransformData."
      }
    ],
    "meta": {
      "lineno": 61,
      "filename": "JointChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 503
  },
  {
    "id": "<anonymous>~JointData#set",
    "longname": "<anonymous>~JointData#set",
    "name": "set",
    "scope": "instance",
    "kind": "function",
    "description": "Copy the jointData's values into this transform data object.",
    "memberof": "<anonymous>~JointData",
    "params": [
      {
        "type": {
          "names": [
            "JointData"
          ]
        },
        "description": "our source to copy. Must not be null.",
        "name": "jointData"
      }
    ],
    "meta": {
      "lineno": 25,
      "filename": "JointData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 506
  },
  {
    "id": "<anonymous>~JointData#blend",
    "longname": "<anonymous>~JointData#blend",
    "name": "blend",
    "scope": "instance",
    "kind": "function",
    "description": "Blend this transform with the given transform.",
    "memberof": "<anonymous>~JointData",
    "params": [
      {
        "type": {
          "names": [
            "TransformData"
          ]
        },
        "description": "The transform to blend to",
        "name": "blendTo"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The blend weight",
        "name": "blendWeight"
      },
      {
        "type": {
          "names": [
            "TransformData"
          ]
        },
        "description": "The transform store.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TransformData"
          ]
        },
        "description": "The blended transform."
      }
    ],
    "meta": {
      "lineno": 37,
      "filename": "JointData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 507
  },
  {
    "id": "<anonymous>~TransformChannel#getData",
    "longname": "<anonymous>~TransformChannel#getData",
    "name": "getData",
    "scope": "instance",
    "kind": "function",
    "description": "Apply a specific index of this channel to a {@link TransformData} object.",
    "memberof": "<anonymous>~TransformChannel",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the index to grab.",
        "name": "index"
      },
      {
        "type": {
          "names": [
            "TransformData"
          ]
        },
        "optional": true,
        "description": "the TransformData to store in. If null, a new one is created.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TransformData"
          ]
        },
        "description": "our resulting TransformData."
      }
    ],
    "meta": {
      "lineno": 124,
      "filename": "TransformChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 510
  },
  {
    "id": "<anonymous>~TransformData#set",
    "longname": "<anonymous>~TransformData#set",
    "name": "set",
    "scope": "instance",
    "kind": "function",
    "description": "Copy the source's values into this transform data object.",
    "memberof": "<anonymous>~TransformData",
    "params": [
      {
        "type": {
          "names": [
            "TransformData"
          ]
        },
        "description": "our source to copy.",
        "name": "source"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "TransformData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 513
  },
  {
    "id": "<anonymous>~TransformData#blend",
    "longname": "<anonymous>~TransformData#blend",
    "name": "blend",
    "scope": "instance",
    "kind": "function",
    "description": "Blend this TransformData with the given TransformData.",
    "memberof": "<anonymous>~TransformData",
    "params": [
      {
        "type": {
          "names": [
            "TransformData"
          ]
        },
        "description": "The TransformData to blend to",
        "name": "blendTo"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The blend weight",
        "name": "blendWeight"
      },
      {
        "type": {
          "names": [
            "TransformData"
          ]
        },
        "description": "The TransformData store.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TransformData"
          ]
        },
        "description": "The blended transform."
      }
    ],
    "meta": {
      "lineno": 46,
      "filename": "TransformData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 514
  },
  {
    "id": "<anonymous>~TriggerChannel#createStateDataObject",
    "longname": "<anonymous>~TriggerChannel#createStateDataObject",
    "name": "createStateDataObject",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a data item for this type of channel",
    "memberof": "<anonymous>~TriggerChannel",
    "returns": [
      {
        "type": {
          "names": [
            "TriggerData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 30,
      "filename": "TriggerChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 517
  },
  {
    "id": "<anonymous>~TriggerChannel#setCurrentSample",
    "longname": "<anonymous>~TriggerChannel#setCurrentSample",
    "name": "setCurrentSample",
    "scope": "instance",
    "kind": "function",
    "description": "Applies the channels animation state to supplied data item",
    "memberof": "<anonymous>~TriggerChannel",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "sampleIndex"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "progressPercent"
      },
      {
        "type": {
          "names": [
            "TriggerData"
          ]
        },
        "description": "The data item to apply animation to",
        "name": "value"
      }
    ],
    "meta": {
      "lineno": 40,
      "filename": "TriggerChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 518
  },
  {
    "id": "<anonymous>~AnimationComponent#transitionTo",
    "longname": "<anonymous>~AnimationComponent#transitionTo",
    "name": "transitionTo",
    "scope": "instance",
    "kind": "function",
    "description": "Transition to another state. This is shorthand for applying transitions on the base layer, see {@link AnimationLayer.transitionTo} for more info",
    "memberof": "<anonymous>~AnimationComponent",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "stateKey"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Allow the function to directly switch state if transitioning fails (missing or transition already in progress)",
        "name": "allowDirectSwitch"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "If the target state has a limited number of repeats, this callback is called when the animation finishes.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "true if a transition was found and started"
      }
    ],
    "meta": {
      "lineno": 60,
      "filename": "AnimationComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/components"
    },
    "order": 523
  },
  {
    "id": "<anonymous>~AnimationComponent#getStates",
    "longname": "<anonymous>~AnimationComponent#getStates",
    "name": "getStates",
    "scope": "instance",
    "kind": "function",
    "description": "Get available states\nreturns {Array<string>} available state keys",
    "memberof": "<anonymous>~AnimationComponent",
    "meta": {
      "lineno": 73,
      "filename": "AnimationComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/components"
    },
    "order": 524
  },
  {
    "id": "<anonymous>~AnimationComponent#getTransitions",
    "longname": "<anonymous>~AnimationComponent#getTransitions",
    "name": "getTransitions",
    "scope": "instance",
    "kind": "function",
    "description": "Get available transitions\nreturns {Array<string>} available state keys",
    "memberof": "<anonymous>~AnimationComponent",
    "meta": {
      "lineno": 83,
      "filename": "AnimationComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/components"
    },
    "order": 525
  },
  {
    "id": "<anonymous>~AnimationComponent#addLayer",
    "longname": "<anonymous>~AnimationComponent#addLayer",
    "name": "addLayer",
    "scope": "instance",
    "kind": "function",
    "description": "Add a new {@link AnimationLayer} to the stack",
    "memberof": "<anonymous>~AnimationComponent",
    "params": [
      {
        "type": {
          "names": [
            "AnimationLayer"
          ]
        },
        "name": "layer"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "if no index is supplied, it's put on top of the stack",
        "name": "index"
      }
    ],
    "meta": {
      "lineno": 200,
      "filename": "AnimationComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/components"
    },
    "order": 526
  },
  {
    "id": "<anonymous>~AnimationClipHandler#_update",
    "longname": "<anonymous>~AnimationClipHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Adds/updates/removes an animation clip",
    "memberof": "<anonymous>~AnimationClipHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated animation clip or null if removed"
      }
    ],
    "meta": {
      "lineno": 54,
      "filename": "AnimationClipHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/handlers"
    },
    "order": 530
  },
  {
    "id": "<anonymous>~AnimationComponentHandler#update",
    "longname": "<anonymous>~AnimationComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine animation component object based on the config.",
    "memberof": "<anonymous>~AnimationComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 46,
      "filename": "AnimationComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/handlers"
    },
    "order": 535
  },
  {
    "id": "<anonymous>~AnimationLayersHandler#_setInitialState",
    "longname": "<anonymous>~AnimationLayersHandler#_setInitialState",
    "name": "_setInitialState",
    "scope": "instance",
    "kind": "function",
    "description": "Sets current state on a layer if possible, otherwise clears  current state",
    "memberof": "<anonymous>~AnimationLayersHandler",
    "params": [
      {
        "type": {
          "names": [
            "AnimationLayer"
          ]
        },
        "name": "layer"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "name"
      }
    ],
    "meta": {
      "lineno": 54,
      "filename": "AnimationLayersHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/handlers"
    },
    "order": 539
  },
  {
    "id": "<anonymous>~AnimationLayersHandler#_update",
    "longname": "<anonymous>~AnimationLayersHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Adds/updates/removes the animation layers",
    "memberof": "<anonymous>~AnimationLayersHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated animation state or null if removed"
      }
    ],
    "meta": {
      "lineno": 72,
      "filename": "AnimationLayersHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/handlers"
    },
    "order": 540
  },
  {
    "id": "<anonymous>~AnimationStateHandler#_update",
    "longname": "<anonymous>~AnimationStateHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Adds/updates/removes an animation state",
    "memberof": "<anonymous>~AnimationStateHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated animation state or null if removed"
      }
    ],
    "meta": {
      "lineno": 59,
      "filename": "AnimationStateHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/handlers"
    },
    "order": 545
  },
  {
    "id": "<anonymous>~AnimationStateHandler#_parseClipSource",
    "longname": "<anonymous>~AnimationStateHandler#_parseClipSource",
    "name": "_parseClipSource",
    "scope": "instance",
    "kind": "function",
    "description": "Updates or creates clipSource to put on animation state",
    "memberof": "<anonymous>~AnimationStateHandler",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "ClipSource"
          ]
        },
        "optional": true,
        "name": "clipSource"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "resolved with updated clip source"
      }
    ],
    "meta": {
      "lineno": 80,
      "filename": "AnimationStateHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/handlers"
    },
    "order": 546
  },
  {
    "id": "<anonymous>~SkeletonHandler#_update",
    "longname": "<anonymous>~SkeletonHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Adds/updates/removes a skeleton. A Skeleton is created once and then reused, but skeletons\nare rarely updated.",
    "memberof": "<anonymous>~SkeletonHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated entity or null if removed"
      }
    ],
    "meta": {
      "lineno": 43,
      "filename": "SkeletonHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/handlers"
    },
    "order": 549
  },
  {
    "id": "<anonymous>~AnimationLayer#getStates",
    "longname": "<anonymous>~AnimationLayer#getStates",
    "name": "getStates",
    "scope": "instance",
    "kind": "function",
    "description": "Get available states for layer",
    "memberof": "<anonymous>~AnimationLayer",
    "returns": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 45,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 554
  },
  {
    "id": "<anonymous>~AnimationLayer#setState",
    "longname": "<anonymous>~AnimationLayer#setState",
    "name": "setState",
    "scope": "instance",
    "kind": "function",
    "description": "Add a state to the layer with the associated stateKey",
    "memberof": "<anonymous>~AnimationLayer",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "stateKey"
      },
      {
        "type": {
          "names": [
            "SteadyState"
          ]
        },
        "name": "state"
      }
    ],
    "meta": {
      "lineno": 54,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 555
  },
  {
    "id": "<anonymous>~AnimationLayer#setBlendWeight",
    "longname": "<anonymous>~AnimationLayer#setBlendWeight",
    "name": "setBlendWeight",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the blend weight of a layer. This will not affect the base\nlayer in the animation component.",
    "memberof": "<anonymous>~AnimationLayer",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Should be between 0 and 1 and will be clamped",
        "name": "weight"
      }
    ],
    "meta": {
      "lineno": 63,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 556
  },
  {
    "id": "<anonymous>~AnimationLayer#getTransitions",
    "longname": "<anonymous>~AnimationLayer#getTransitions",
    "name": "getTransitions",
    "scope": "instance",
    "kind": "function",
    "description": "Get available transitions for current State",
    "memberof": "<anonymous>~AnimationLayer",
    "returns": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 73,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 557
  },
  {
    "id": "<anonymous>~AnimationLayer#transitionTo",
    "longname": "<anonymous>~AnimationLayer#transitionTo",
    "name": "transitionTo",
    "scope": "instance",
    "kind": "function",
    "description": "Transition the layer to another state. The transition must be specified either on the state or on the layer (as a general transition), see FileFormat spec for more info",
    "memberof": "<anonymous>~AnimationLayer",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "state"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": "World.time",
        "description": "start time for the transition, defaults to current time",
        "name": "globalTime"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "If the target state has a limited number of repeats, this callback is called when the animation finishes.",
        "name": "finishCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "true if a transition was found and started"
      }
    ],
    "meta": {
      "lineno": 118,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 560
  },
  {
    "id": "<anonymous>~AnimationLayer#setCurrentState",
    "longname": "<anonymous>~AnimationLayer#setCurrentState",
    "name": "setCurrentState",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the current state to the given state. Generally for transitional state use.",
    "memberof": "<anonymous>~AnimationLayer",
    "params": [
      {
        "type": {
          "names": [
            "AbstractState"
          ]
        },
        "description": "our new state. If null, then no state is currently set on this layer.",
        "name": "state"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "if true, the clip(s) in the given state will be rewound by setting its start time to the current time and setting it active.",
        "name": "rewind"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": "World.time",
        "description": "start time for the transition, defaults to current time",
        "name": "globalTime"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "If the target state has a limited number of repeats, this callback is called when the animation finishes.",
        "name": "finishCallback"
      }
    ],
    "meta": {
      "lineno": 175,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 561
  },
  {
    "id": "<anonymous>~AnimationLayer#getCurrentState",
    "longname": "<anonymous>~AnimationLayer#getCurrentState",
    "name": "getCurrentState",
    "scope": "instance",
    "kind": "function",
    "description": "Get the current state",
    "memberof": "<anonymous>~AnimationLayer",
    "returns": [
      {
        "type": {
          "names": [
            "AbstractState"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 196,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 562
  },
  {
    "id": "<anonymous>~AnimationLayer#setCurrentStateById",
    "longname": "<anonymous>~AnimationLayer#setCurrentStateById",
    "name": "setCurrentStateById",
    "scope": "instance",
    "kind": "function",
    "description": "Set the current state by state id.",
    "memberof": "<anonymous>~AnimationLayer",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "id"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "if true, the clip(s) in the given state will be rewound by setting its start time to the current time and setting it active.",
        "name": "rewind"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": "World.time",
        "description": "start time for the transition, defaults to current time",
        "name": "globalTime"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "If the target state has a limited number of repeats, this callback is called when the animation finishes.",
        "name": "callback"
      }
    ],
    "meta": {
      "lineno": 207,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 563
  },
  {
    "id": "<anonymous>~AnimationLayer#getStateById",
    "longname": "<anonymous>~AnimationLayer#getStateById",
    "name": "getStateById",
    "scope": "instance",
    "kind": "function",
    "description": "Get the current state by id.",
    "memberof": "<anonymous>~AnimationLayer",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "id"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "AbstractState"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 217,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 564
  },
  {
    "id": "<anonymous>~AnimationLayer#getStateByName",
    "longname": "<anonymous>~AnimationLayer#getStateByName",
    "name": "getStateByName",
    "scope": "instance",
    "kind": "function",
    "description": "Get the current state by name.",
    "memberof": "<anonymous>~AnimationLayer",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "name"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "AbstractState"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 226,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 565
  },
  {
    "id": "<anonymous>~AnimationLayer#setCurrentStateByName",
    "longname": "<anonymous>~AnimationLayer#setCurrentStateByName",
    "name": "setCurrentStateByName",
    "scope": "instance",
    "kind": "function",
    "description": "Force the current state of the machine to the state with the given name.",
    "memberof": "<anonymous>~AnimationLayer",
    "params": [
      {
        "type": {
          "names": [
            "AbstractState"
          ]
        },
        "description": "the name of our state. If null, or is not present in this state machine, the current state is not changed.",
        "name": "stateName"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "if true, the clip(s) in the given state will be rewound by setting its start time to the current time and setting it active.",
        "name": "rewind"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": "World.time",
        "description": "start time for the transition, defaults to current time",
        "name": "globalTime"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "true if succeeds"
      }
    ],
    "meta": {
      "lineno": 242,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 566
  },
  {
    "id": "<anonymous>~AnimationLayer#getCurrentSourceData",
    "longname": "<anonymous>~AnimationLayer#getCurrentSourceData",
    "name": "getCurrentSourceData",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~AnimationLayer",
    "returns": [
      {
        "description": "a source data mapping for the channels involved in the current state/transition of this layer."
      }
    ],
    "meta": {
      "lineno": 258,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 567
  },
  {
    "id": "<anonymous>~AnimationLayer#clearCurrentState",
    "longname": "<anonymous>~AnimationLayer#clearCurrentState",
    "name": "clearCurrentState",
    "scope": "instance",
    "kind": "function",
    "description": "Set the currently playing state on this layer to null.",
    "memberof": "<anonymous>~AnimationLayer",
    "meta": {
      "lineno": 284,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 569
  },
  {
    "id": "<anonymous>~AnimationLayer#clone",
    "longname": "<anonymous>~AnimationLayer#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~AnimationLayer",
    "returns": [
      {
        "type": {
          "names": [
            "AnimationLayer"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 329,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 570
  },
  {
    "id": "<anonymous>~LayerLerpBlender#getBlendedSourceData",
    "longname": "<anonymous>~LayerLerpBlender#getBlendedSourceData",
    "name": "getBlendedSourceData",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~LayerLerpBlender",
    "returns": [
      {
        "description": "a key-value map representing the blended data from both animation layers."
      }
    ],
    "meta": {
      "lineno": 21,
      "filename": "LayerLerpBlender.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 573
  },
  {
    "id": "<anonymous>~SkeletonPose#setToBindPose",
    "longname": "<anonymous>~SkeletonPose#setToBindPose",
    "name": "setToBindPose",
    "scope": "instance",
    "kind": "function",
    "description": "Update our local joint transforms so that they reflect the skeleton in bind pose.",
    "memberof": "<anonymous>~SkeletonPose",
    "meta": {
      "lineno": 49,
      "filename": "SkeletonPose.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack"
    },
    "order": 578
  },
  {
    "id": "<anonymous>~SkeletonPose#updateTransforms",
    "longname": "<anonymous>~SkeletonPose#updateTransforms",
    "name": "updateTransforms",
    "scope": "instance",
    "kind": "function",
    "description": "Update the global and palette transforms of our posed joints based on the current local joint transforms.",
    "memberof": "<anonymous>~SkeletonPose",
    "meta": {
      "lineno": 70,
      "filename": "SkeletonPose.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack"
    },
    "order": 579
  },
  {
    "id": "<anonymous>~AbstractTransitionState#update",
    "longname": "<anonymous>~AbstractTransitionState#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update this state using the current global time.",
    "memberof": "<anonymous>~AbstractTransitionState",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the current global time.",
        "name": "globalTime"
      }
    ],
    "meta": {
      "lineno": 43,
      "filename": "AbstractTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 582
  },
  {
    "id": "<anonymous>~AbstractTransitionState#readFromConfig",
    "longname": "<anonymous>~AbstractTransitionState#readFromConfig",
    "name": "readFromConfig",
    "scope": "instance",
    "kind": "function",
    "description": "Method for setting fade time and blend type from config data.",
    "memberof": "<anonymous>~AbstractTransitionState",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "data",
        "name": "configuration"
      }
    ],
    "meta": {
      "lineno": 67,
      "filename": "AbstractTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 583
  },
  {
    "id": "<anonymous>~AbstractTransitionState#getCurrentSourceData",
    "longname": "<anonymous>~AbstractTransitionState#getCurrentSourceData",
    "name": "getCurrentSourceData",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~AbstractTransitionState",
    "returns": [
      {
        "description": "the current map of source channel data for this layer."
      }
    ],
    "meta": {
      "lineno": 77,
      "filename": "AbstractTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 584
  },
  {
    "id": "<anonymous>~AbstractTransitionState#isValid",
    "longname": "<anonymous>~AbstractTransitionState#isValid",
    "name": "isValid",
    "scope": "instance",
    "kind": "function",
    "description": "Check if a transition is valid within a given time window.",
    "memberof": "<anonymous>~AbstractTransitionState",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "start and end time",
        "name": "timeWindow"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "world time",
        "name": "current"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "true if transition is valid"
      }
    ],
    "meta": {
      "lineno": 99,
      "filename": "AbstractTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 585
  },
  {
    "id": "<anonymous>~FadeTransitionState#update",
    "longname": "<anonymous>~FadeTransitionState#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update this state using the current global time.",
    "memberof": "<anonymous>~FadeTransitionState",
    "params": [
      {
        "description": "the current global time.",
        "name": "globalTime"
      },
      {
        "description": "the layer this state belongs to.",
        "name": "layer"
      }
    ],
    "meta": {
      "lineno": 25,
      "filename": "FadeTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 588
  },
  {
    "id": "<anonymous>~FadeTransitionState#postUpdate",
    "longname": "<anonymous>~FadeTransitionState#postUpdate",
    "name": "postUpdate",
    "scope": "instance",
    "kind": "function",
    "description": "Post update. If the state has no more clips and no end transition, this will clear this state from the layer.",
    "memberof": "<anonymous>~FadeTransitionState",
    "params": [
      {
        "description": "the layer this state belongs to.",
        "name": "layer"
      }
    ],
    "meta": {
      "lineno": 41,
      "filename": "FadeTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 589
  },
  {
    "id": "<anonymous>~FrozenTransitionState#update",
    "longname": "<anonymous>~FrozenTransitionState#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update this state using the current global time.",
    "memberof": "<anonymous>~FrozenTransitionState",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the current global time.",
        "name": "globalTime"
      }
    ],
    "meta": {
      "lineno": 23,
      "filename": "FrozenTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 592
  },
  {
    "id": "<anonymous>~FrozenTransitionState#postUpdate",
    "longname": "<anonymous>~FrozenTransitionState#postUpdate",
    "name": "postUpdate",
    "scope": "instance",
    "kind": "function",
    "description": "Post update. If the state has no more clips and no end transition, this will clear this state from the layer.",
    "memberof": "<anonymous>~FrozenTransitionState",
    "params": [
      {
        "description": "the layer this state belongs to.",
        "name": "layer"
      }
    ],
    "meta": {
      "lineno": 36,
      "filename": "FrozenTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 593
  },
  {
    "id": "<anonymous>~FrozenTransitionState#resetClips",
    "longname": "<anonymous>~FrozenTransitionState#resetClips",
    "name": "resetClips",
    "scope": "instance",
    "kind": "function",
    "description": "Resets the clips to start at given time",
    "memberof": "<anonymous>~FrozenTransitionState",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "globalTime"
      }
    ],
    "meta": {
      "lineno": 47,
      "filename": "FrozenTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 594
  },
  {
    "id": "<anonymous>~SteadyState#setClipSource",
    "longname": "<anonymous>~SteadyState#setClipSource",
    "name": "setClipSource",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the clipsource of the steadystate",
    "memberof": "<anonymous>~SteadyState",
    "params": [
      {
        "type": {
          "names": [
            "ClipSource",
            "BinaryLerpSource",
            "FrozenClipSource",
            "ManagedTransformSource"
          ]
        },
        "name": "clipSource"
      }
    ],
    "meta": {
      "lineno": 30,
      "filename": "SteadyState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 597
  },
  {
    "id": "<anonymous>~Debugger#inject",
    "longname": "<anonymous>~Debugger#inject",
    "name": "inject",
    "scope": "instance",
    "kind": "function",
    "description": "Inject the debugger into the engine and create the debug panel",
    "memberof": "<anonymous>~Debugger",
    "params": [
      {
        "type": {
          "names": [
            "GooRunner"
          ]
        },
        "description": "A GooRunner reference",
        "name": "goo"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Debugger"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 96,
      "filename": "Debugger.js",
      "path": "/Users/schteppe/git/goojs/src/goo/debugpack"
    },
    "order": 609
  },
  {
    "id": "<anonymous>~EntityCounter#inject",
    "longname": "<anonymous>~EntityCounter#inject",
    "name": "inject",
    "scope": "instance",
    "kind": "function",
    "description": "Inject the entity counter into the GooRunner instance and create the entity counter panel",
    "memberof": "<anonymous>~EntityCounter",
    "params": [
      {
        "type": {
          "names": [
            "GooRunner"
          ]
        },
        "description": "A GooRunner reference",
        "name": "goo"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "EntityCounter"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 23,
      "filename": "EntityCounter.js",
      "path": "/Users/schteppe/git/goojs/src/goo/debugpack"
    },
    "order": 617
  },
  {
    "id": "<anonymous>~Bus#emit",
    "longname": "<anonymous>~Bus#emit",
    "name": "emit",
    "scope": "instance",
    "kind": "function",
    "description": "Sends messages to all listeners with provided callback function.",
    "memberof": "<anonymous>~Bus",
    "params": [
      {
        "type": {
          "names": [
            "string",
            "Array.<string>"
          ]
        },
        "description": "channel(s) addressed",
        "name": "channels"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "data"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Store the emit data for transmitting to future listeners",
        "name": "storeEmit"
      }
    ],
    "meta": {
      "lineno": 19,
      "filename": "Bus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 623
  },
  {
    "id": "<anonymous>~Bus#getLastMessageOn",
    "longname": "<anonymous>~Bus#getLastMessageOn",
    "name": "getLastMessageOn",
    "scope": "instance",
    "kind": "function",
    "description": "Retrieves the last message sent on a channel. This will only work if message preservation is enabled when emitting.",
    "memberof": "<anonymous>~Bus",
    "params": [
      {
        "name": "channelName"
      }
    ],
    "meta": {
      "lineno": 37,
      "filename": "Bus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 624
  },
  {
    "id": "<anonymous>~Bus#addListener",
    "longname": "<anonymous>~Bus#addListener",
    "name": "addListener",
    "scope": "instance",
    "kind": "function",
    "description": "Register callback for a channel",
    "memberof": "<anonymous>~Bus",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "channelName"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "function (data)",
        "name": "callback"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Retrieve the last emit done before this listener was added (if emitted with storeEmit)",
        "name": "retrieveLatestEmit"
      }
    ],
    "meta": {
      "lineno": 108,
      "filename": "Bus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 625
  },
  {
    "id": "<anonymous>~Bus#removeListener",
    "longname": "<anonymous>~Bus#removeListener",
    "name": "removeListener",
    "scope": "instance",
    "kind": "function",
    "description": "Remove a listener from a channel but not from its children",
    "memberof": "<anonymous>~Bus",
    "params": [
      {
        "name": "channelName"
      },
      {
        "name": "callbackToRemove"
      }
    ],
    "meta": {
      "lineno": 154,
      "filename": "Bus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 627
  },
  {
    "id": "<anonymous>~Bus#removeAllOnChannel",
    "longname": "<anonymous>~Bus#removeAllOnChannel",
    "name": "removeAllOnChannel",
    "scope": "instance",
    "kind": "function",
    "description": "Removes all listeners on a specific channel",
    "memberof": "<anonymous>~Bus",
    "params": [
      {
        "name": "channelName"
      }
    ],
    "meta": {
      "lineno": 164,
      "filename": "Bus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 628
  },
  {
    "id": "<anonymous>~Bus#removeChannelAndChildren",
    "longname": "<anonymous>~Bus#removeChannelAndChildren",
    "name": "removeChannelAndChildren",
    "scope": "instance",
    "kind": "function",
    "description": "Removes a channel and its children",
    "memberof": "<anonymous>~Bus",
    "params": [
      {
        "name": "channelName"
      }
    ],
    "meta": {
      "lineno": 174,
      "filename": "Bus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 629
  },
  {
    "id": "<anonymous>~Bus#removeListenerFromAllChannels",
    "longname": "<anonymous>~Bus#removeListenerFromAllChannels",
    "name": "removeListenerFromAllChannels",
    "scope": "instance",
    "kind": "function",
    "description": "Removes a listener from all channels",
    "memberof": "<anonymous>~Bus",
    "params": [
      {
        "name": "callbackToRemove"
      }
    ],
    "meta": {
      "lineno": 202,
      "filename": "Bus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 630
  },
  {
    "id": "<anonymous>~CameraComponent#setUpVector",
    "longname": "<anonymous>~CameraComponent#setUpVector",
    "name": "setUpVector",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~CameraComponent",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Axis to use as up-vector (0=X, 1=Y, 2=Z).",
        "name": "axisId"
      }
    ],
    "meta": {
      "lineno": 77,
      "filename": "CameraComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 637
  },
  {
    "id": "<anonymous>~CameraComponent#updateCamera",
    "longname": "<anonymous>~CameraComponent#updateCamera",
    "name": "updateCamera",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the contained camera according to a transform (coming from the TransformComponent).",
    "memberof": "<anonymous>~CameraComponent",
    "params": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "name": "transform"
      }
    ],
    "meta": {
      "lineno": 97,
      "filename": "CameraComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 638
  },
  {
    "id": "<anonymous>~MeshDataComponent#setModelBound",
    "longname": "<anonymous>~MeshDataComponent#setModelBound",
    "name": "setModelBound",
    "scope": "instance",
    "kind": "function",
    "description": "Set the bounding volume type (sphere, box etc).",
    "memberof": "<anonymous>~MeshDataComponent",
    "params": [
      {
        "type": {
          "names": [
            "BoundingVolume"
          ]
        },
        "description": "Bounding to apply to this meshdata component.",
        "name": "modelBound"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "If true, automatically compute bounding fit.",
        "name": "autoCompute"
      }
    ],
    "meta": {
      "lineno": 63,
      "filename": "MeshDataComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 667
  },
  {
    "id": "<anonymous>~MeshDataComponent#computeBoundFromPoints",
    "longname": "<anonymous>~MeshDataComponent#computeBoundFromPoints",
    "name": "computeBoundFromPoints",
    "scope": "instance",
    "kind": "function",
    "description": "Compute bounding center and bounds for this mesh.",
    "memberof": "<anonymous>~MeshDataComponent",
    "meta": {
      "lineno": 71,
      "filename": "MeshDataComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 668
  },
  {
    "id": "<anonymous>~MeshDataComponent#clone",
    "longname": "<anonymous>~MeshDataComponent#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this mesh data component",
    "memberof": "<anonymous>~MeshDataComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Cloning this component clones the mesh data by default",
        "name": "options.shareMeshData"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "MeshDataComponent"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 87,
      "filename": "MeshDataComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 669
  },
  {
    "id": "<anonymous>~MeshRendererComponent#updateBounds",
    "longname": "<anonymous>~MeshRendererComponent#updateBounds",
    "name": "updateBounds",
    "scope": "instance",
    "kind": "function",
    "description": "Update world bounding",
    "memberof": "<anonymous>~MeshRendererComponent",
    "params": [
      {
        "type": {
          "names": [
            "BoundingVolume"
          ]
        },
        "description": "Bounding volume in local space",
        "name": "bounding"
      },
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "Transform to apply to local bounding -> world bounding",
        "name": "transform"
      }
    ],
    "meta": {
      "lineno": 122,
      "filename": "MeshRendererComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 679
  },
  {
    "id": "<anonymous>~MeshRendererComponent#clone",
    "longname": "<anonymous>~MeshRendererComponent#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this mesh renderer component",
    "memberof": "<anonymous>~MeshRendererComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Cloning this component clones the materials by default",
        "name": "options.shareMaterials"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "MeshRendererComponent"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 132,
      "filename": "MeshRendererComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 680
  },
  {
    "id": "<anonymous>~MovementComponent#addVelocity",
    "longname": "<anonymous>~MovementComponent#addVelocity",
    "name": "addVelocity",
    "scope": "instance",
    "kind": "function",
    "description": "Adds velocity to movement. Typically useful for things such as gravity and slingshots.",
    "memberof": "<anonymous>~MovementComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "velocity impulse vector.",
        "name": "vec3"
      }
    ],
    "meta": {
      "lineno": 40,
      "filename": "MovementComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 682
  },
  {
    "id": "<anonymous>~MovementComponent#setVelocity",
    "longname": "<anonymous>~MovementComponent#setVelocity",
    "name": "setVelocity",
    "scope": "instance",
    "kind": "function",
    "description": "Adds velocity to movement. Typically useful for things such as gravity and slingshots.",
    "memberof": "<anonymous>~MovementComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "velocity impulse vector.",
        "name": "vec3"
      }
    ],
    "meta": {
      "lineno": 49,
      "filename": "MovementComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 683
  },
  {
    "id": "<anonymous>~MovementComponent#getVelocity",
    "longname": "<anonymous>~MovementComponent#getVelocity",
    "name": "getVelocity",
    "scope": "instance",
    "kind": "function",
    "description": "Reads the movement velocity vector",
    "memberof": "<anonymous>~MovementComponent",
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "velocity vector"
      }
    ],
    "meta": {
      "lineno": 58,
      "filename": "MovementComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 684
  },
  {
    "id": "<anonymous>~MovementComponent#addRotationVelocity",
    "longname": "<anonymous>~MovementComponent#addRotationVelocity",
    "name": "addRotationVelocity",
    "scope": "instance",
    "kind": "function",
    "description": "Adds rotational velocity to movement. Typically useful for spinning or turning things.",
    "memberof": "<anonymous>~MovementComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "rotational velocity impulse vector.",
        "name": "vec3"
      }
    ],
    "meta": {
      "lineno": 67,
      "filename": "MovementComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 685
  },
  {
    "id": "<anonymous>~MovementComponent#setRotationVelocity",
    "longname": "<anonymous>~MovementComponent#setRotationVelocity",
    "name": "setRotationVelocity",
    "scope": "instance",
    "kind": "function",
    "description": "Sets rotational velocity of the movement.",
    "memberof": "<anonymous>~MovementComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "rotational velocity vector.",
        "name": "vec3"
      }
    ],
    "meta": {
      "lineno": 75,
      "filename": "MovementComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 686
  },
  {
    "id": "<anonymous>~MovementComponent#getRotationVelocity",
    "longname": "<anonymous>~MovementComponent#getRotationVelocity",
    "name": "getRotationVelocity",
    "scope": "instance",
    "kind": "function",
    "description": "Read the rotational velocity of movement",
    "memberof": "<anonymous>~MovementComponent",
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "the rotational velocity"
      }
    ],
    "meta": {
      "lineno": 84,
      "filename": "MovementComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 687
  },
  {
    "id": "<anonymous>~PortalComponent#requestUpdate",
    "longname": "<anonymous>~PortalComponent#requestUpdate",
    "name": "requestUpdate",
    "scope": "instance",
    "kind": "function",
    "description": "Requests a rendering to be done to the material of the host object",
    "memberof": "<anonymous>~PortalComponent",
    "meta": {
      "lineno": 69,
      "filename": "PortalComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 694
  },
  {
    "id": "<anonymous>~ScriptComponent#startScripts",
    "longname": "<anonymous>~ScriptComponent#startScripts",
    "name": "startScripts",
    "scope": "instance",
    "kind": "function",
    "description": "Enables all the scripts that are in the component.",
    "memberof": "<anonymous>~ScriptComponent",
    "meta": {
      "lineno": 157,
      "filename": "ScriptComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 701
  },
  {
    "id": "<anonymous>~ScriptComponent#stopScripts",
    "longname": "<anonymous>~ScriptComponent#stopScripts",
    "name": "stopScripts",
    "scope": "instance",
    "kind": "function",
    "description": "Disables all the scripts that are in the component.",
    "memberof": "<anonymous>~ScriptComponent",
    "meta": {
      "lineno": 170,
      "filename": "ScriptComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 702
  },
  {
    "id": "<anonymous>~SoundComponent#addSound",
    "longname": "<anonymous>~SoundComponent#addSound",
    "name": "addSound",
    "scope": "instance",
    "kind": "function",
    "description": "Add a sound to the component",
    "memberof": "<anonymous>~SoundComponent",
    "params": [
      {
        "type": {
          "names": [
            "Sound"
          ]
        },
        "name": "sound"
      }
    ],
    "meta": {
      "lineno": 72,
      "filename": "SoundComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 707
  },
  {
    "id": "<anonymous>~SoundComponent#removeSound",
    "longname": "<anonymous>~SoundComponent#removeSound",
    "name": "removeSound",
    "scope": "instance",
    "kind": "function",
    "description": "Remove sound from component",
    "memberof": "<anonymous>~SoundComponent",
    "params": [
      {
        "type": {
          "names": [
            "Sound"
          ]
        },
        "name": "sound"
      }
    ],
    "meta": {
      "lineno": 88,
      "filename": "SoundComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 708
  },
  {
    "id": "<anonymous>~SoundComponent#getSoundById",
    "longname": "<anonymous>~SoundComponent#getSoundById",
    "name": "getSoundById",
    "scope": "instance",
    "kind": "function",
    "description": "Get a component's sound by id",
    "memberof": "<anonymous>~SoundComponent",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "id"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Sound"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 107,
      "filename": "SoundComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 709
  },
  {
    "id": "<anonymous>~SoundComponent#connectTo",
    "longname": "<anonymous>~SoundComponent#connectTo",
    "name": "connectTo",
    "scope": "instance",
    "kind": "function",
    "description": "Connect output of component to audionodes",
    "memberof": "<anonymous>~SoundComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "nodes"
      },
      {
        "type": {
          "names": [
            "AudioNode"
          ]
        },
        "optional": true,
        "name": "nodes.dry"
      },
      {
        "type": {
          "names": [
            "AudioNode"
          ]
        },
        "optional": true,
        "name": "nodes.wet"
      }
    ],
    "meta": {
      "lineno": 121,
      "filename": "SoundComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 710
  },
  {
    "id": "<anonymous>~SoundComponent#updateConfig",
    "longname": "<anonymous>~SoundComponent#updateConfig",
    "name": "updateConfig",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the component valueas according to config",
    "memberof": "<anonymous>~SoundComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "config"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "A number between 0 and 1.",
        "name": "config.volume"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "A number between 0 and 1.",
        "name": "config.reverb"
      }
    ],
    "meta": {
      "lineno": 138,
      "filename": "SoundComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 711
  },
  {
    "id": "<anonymous>~SoundComponent#process",
    "longname": "<anonymous>~SoundComponent#process",
    "name": "process",
    "scope": "instance",
    "kind": "function",
    "description": "Updates position, velocity and orientation of component and thereby all connected sounds.\nSince all sounds in the engine are relative to the current camera, the model view matrix needs to be passed to this method.",
    "memberof": "<anonymous>~SoundComponent",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "See {@link SoundSystem}",
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "The model view matrix from the current camera, or falsy if the component is attached to the camera.",
        "name": "mvMat"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "tpf"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 165,
      "filename": "SoundComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 712
  },
  {
    "id": "<anonymous>~TextComponent#setText",
    "longname": "<anonymous>~TextComponent#setText",
    "name": "setText",
    "scope": "instance",
    "kind": "function",
    "description": "Text to update to",
    "memberof": "<anonymous>~TextComponent",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "text"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TextComponent"
          ]
        },
        "description": "Self for chaining"
      }
    ],
    "meta": {
      "lineno": 40,
      "filename": "TextComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 714
  },
  {
    "id": "<anonymous>~TransformComponent#getTranslation",
    "longname": "<anonymous>~TransformComponent#getTranslation",
    "name": "getTranslation",
    "scope": "instance",
    "kind": "function",
    "description": "Gets the value of transformComponent.transform.translation.\nTo change the translation, the returned object can be modified\nafter which transformComponent.setUpdated() must be called.\nAlternatively, use setTranslation or addTranslation which call\nsetUpdated() automatically.\n<br /><i>Injected into entity when adding component.</i>",
    "memberof": "<anonymous>~TransformComponent",
    "examples": [
      "var boxTranslation1 = boxEntity.transformComponent.getTranslation();\nvar boxTranslation2 = boxEntity.getTranslation();\nconsole.log(boxTranslation1 === boxTranslation2); // true"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "translation"
      }
    ],
    "meta": {
      "lineno": 377,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 740
  },
  {
    "id": "<anonymous>~TransformComponent#setTranslation",
    "longname": "<anonymous>~TransformComponent#setTranslation",
    "name": "setTranslation",
    "scope": "instance",
    "kind": "function",
    "description": "Sets this transform's translation.\n<br /><i>Injected into entity when adding component.</i>",
    "memberof": "<anonymous>~TransformComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector",
            "Array.<number>"
          ]
        },
        "description": "Component values.",
        "name": "translation"
      }
    ],
    "examples": [
      "// The lines below are equivalent.\nsphereEntity.transformComponent.setTranslation(1, 1, 0);\nsphereEntity.setTranslation(1, 1, 0);\nsphereEntity.setTranslation(new Vector3(1, 1, 0));"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TransformComponent"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 393,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 741
  },
  {
    "id": "<anonymous>~TransformComponent#getScale",
    "longname": "<anonymous>~TransformComponent#getScale",
    "name": "getScale",
    "scope": "instance",
    "kind": "function",
    "description": "Gets the value of transformComponent.transform.scale.\nTo change the scale, the returned object can be modified\nafter which transformComponent.setUpdated() must be called.\nAlternatively, use setScale which calls setUpdated() automatically.\n<br /><i>Injected into entity when adding component.</i>",
    "memberof": "<anonymous>~TransformComponent",
    "examples": [
      "var scale1 = entity.transformComponent.getScale();\nvar scale2 = entity.getScale();\nconsole.log(scale1 === scale2); // true"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "scale"
      }
    ],
    "meta": {
      "lineno": 412,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 742
  },
  {
    "id": "<anonymous>~TransformComponent#setScale",
    "longname": "<anonymous>~TransformComponent#setScale",
    "name": "setScale",
    "scope": "instance",
    "kind": "function",
    "description": "Sets this transform's scale.\n<br /><i>Injected into entity when adding component.</i>",
    "memberof": "<anonymous>~TransformComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector",
            "Array.<number>"
          ]
        },
        "description": "values.",
        "name": "Component"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TransformComponent"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 423,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 743
  },
  {
    "id": "<anonymous>~TransformComponent#addTranslation",
    "longname": "<anonymous>~TransformComponent#addTranslation",
    "name": "addTranslation",
    "scope": "instance",
    "kind": "function",
    "description": "Adds to this transform's translation.\n<br /><i>Injected into entity when adding component.</i>",
    "memberof": "<anonymous>~TransformComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector",
            "Array.<number>"
          ]
        },
        "description": "values.",
        "name": "Component"
      }
    ],
    "examples": [
      "// Lines below are equivalent\nboxEntity.addTranslation(new Vector(1, 2, 1));\nboxEntity.transformComponent.addTranslation(1, 2, 1);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TransformComponent"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 440,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 744
  },
  {
    "id": "<anonymous>~TransformComponent#getRotation",
    "longname": "<anonymous>~TransformComponent#getRotation",
    "name": "getRotation",
    "scope": "instance",
    "kind": "function",
    "description": "Gets the value of transformComponent.transform.rotation in Euler angles (in radians, Euler order YZX).\nReturns a new Vector3 that cannot be used for modifying the rotation.\n<br /><i>Injected into entity when adding component.</i>.",
    "memberof": "<anonymous>~TransformComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "Target vector for storage.",
        "name": "target"
      }
    ],
    "examples": [
      "var rot1 = sphereEntity.getRotation();\nvar rot2 = sphereEntity.transformComponent.getRotation();\nconsole.log(rot1 === rot2); // true"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "rotation"
      }
    ],
    "meta": {
      "lineno": 458,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 745
  },
  {
    "id": "<anonymous>~TransformComponent#addRotation",
    "longname": "<anonymous>~TransformComponent#addRotation",
    "name": "addRotation",
    "scope": "instance",
    "kind": "function",
    "description": "Adds to this transform's rotation using Euler angles (in radians, Euler order YZX).\n<br /><i>Injected into entity when adding component.</i>",
    "memberof": "<anonymous>~TransformComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector",
            "Array.<number>"
          ]
        },
        "description": "values.",
        "name": "Component"
      }
    ],
    "examples": [
      "boxEntity.setRotation(Math.PI/4.0, 0, 0);\nconsole.log(boxEntity.getRotation().toString()); // [0.79, 0, 0]\nboxEntity.addRotation(new Vector3(MathUtils.DEG_TO_RAD * 45.0, 0, 0));\nconsole.log(boxEntity.getRotation().toString()); // [1.57, 0, 0]"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TransformComponent"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 475,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 746
  },
  {
    "id": "<anonymous>~TransformComponent#setRotation",
    "longname": "<anonymous>~TransformComponent#setRotation",
    "name": "setRotation",
    "scope": "instance",
    "kind": "function",
    "description": "Sets this transform's rotation around X, Y and Z axis (in radians, Euler order YZX).\nThe rotation is applied in X, Y, Z order.\n<br /><i>Injected into entity when adding component.</i>",
    "memberof": "<anonymous>~TransformComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector",
            "Array.<number>"
          ]
        },
        "description": "values.",
        "name": "Component"
      }
    ],
    "examples": [
      "boxEntity.setRotation(Math.PI, 0, 0);\nconsole.log(boxEntity.getRotation().toString()); // [3.14, 0, 0]"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TransformComponent"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 503,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 747
  },
  {
    "id": "<anonymous>~TransformComponent#lookAt",
    "longname": "<anonymous>~TransformComponent#lookAt",
    "name": "lookAt",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the transform to look in a specific direction.\n<br /><i>Injected into entity when adding component.</i>",
    "memberof": "<anonymous>~TransformComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector3",
            "Entity"
          ]
        },
        "description": "Target position.",
        "name": "position"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "defaultvalue": "(0, 1, 0)",
        "description": "Up vector.",
        "name": "up"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TransformComponent"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 527,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 748
  },
  {
    "id": "<anonymous>~TransformComponent#move",
    "longname": "<anonymous>~TransformComponent#move",
    "name": "move",
    "scope": "instance",
    "kind": "function",
    "description": "Adds to the translation in a local direction.<br/>\nThis is similar to addTranslation but this function takes the argument in local coordinate space and converts it for you.<br/>\nSo for example move(0, 0, -1) moves forward (because of the right handed coordinate system).<br/>\n<i>Injected into entity when adding component.</i>",
    "memberof": "<anonymous>~TransformComponent",
    "params": [
      {
        "type": {
          "names": [
            "Vector",
            "Array.<number>"
          ]
        },
        "description": "values.",
        "name": "component"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TransformComponent"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 559,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 749
  },
  {
    "id": "<anonymous>~TransformComponent#setUpdated",
    "longname": "<anonymous>~TransformComponent#setUpdated",
    "name": "setUpdated",
    "scope": "instance",
    "kind": "function",
    "description": "Mark the component for updates of world transform. Needs to be called after manually changing the transform without using helper functions.",
    "memberof": "<anonymous>~TransformComponent",
    "meta": {
      "lineno": 572,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 750
  },
  {
    "id": "<anonymous>~TransformComponent#attachChild",
    "longname": "<anonymous>~TransformComponent#attachChild",
    "name": "attachChild",
    "scope": "instance",
    "kind": "function",
    "description": "Attach a child transform to this component tree\n<br /><i>Injected into entity when adding component.</i>",
    "memberof": "<anonymous>~TransformComponent",
    "params": [
      {
        "type": {
          "names": [
            "TransformComponent"
          ]
        },
        "description": "Child transform component to attach",
        "name": "childComponent"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If enabled, the child's position, rotation and scale will appear unaffected",
        "name": "keepTransform"
      }
    ],
    "meta": {
      "lineno": 601,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 753
  },
  {
    "id": "<anonymous>~TransformComponent#detachChild",
    "longname": "<anonymous>~TransformComponent#detachChild",
    "name": "detachChild",
    "scope": "instance",
    "kind": "function",
    "description": "Detach a child transform from this component tree.\n<br /><i>Injected into entity when adding component.</i>",
    "memberof": "<anonymous>~TransformComponent",
    "params": [
      {
        "type": {
          "names": [
            "TransformComponent"
          ]
        },
        "description": "child transform component to detach",
        "name": "childComponent"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If enabled, the child's position, rotation and scale will appear unaffected",
        "name": "keepTransform"
      }
    ],
    "meta": {
      "lineno": 634,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 754
  },
  {
    "id": "<anonymous>~TransformComponent#updateTransform",
    "longname": "<anonymous>~TransformComponent#updateTransform",
    "name": "updateTransform",
    "scope": "instance",
    "kind": "function",
    "description": "Update component's transform.",
    "memberof": "<anonymous>~TransformComponent",
    "meta": {
      "lineno": 656,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 755
  },
  {
    "id": "<anonymous>~TransformComponent#updateWorldTransform",
    "longname": "<anonymous>~TransformComponent#updateWorldTransform",
    "name": "updateWorldTransform",
    "scope": "instance",
    "kind": "function",
    "description": "Update component's world transform (resulting transform considering parent transformations).",
    "memberof": "<anonymous>~TransformComponent",
    "meta": {
      "lineno": 663,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 756
  },
  {
    "id": "<anonymous>~Entity#set",
    "longname": "<anonymous>~Entity#set",
    "name": "set",
    "scope": "instance",
    "kind": "function",
    "description": "Sets components on the entity or tries to create and set components out of the supplied parameters.",
    "memberof": "<anonymous>~Entity",
    "examples": [
      "// Create three entities with different components, add them to world\nvar sphereEntity = new Entity(world).set(sphere, material, [2, 0, 0]).addToWorld();\nvar lightEntity = new Entity(world).set(light, [0, 1, 0]).addToWorld();\nvar spinningEntity = new Entity(world).set(box, material, [-2, 0, 0], script).addToWorld();"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/Entity/Entity-set-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 87,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 764
  },
  {
    "id": "<anonymous>~Entity#addToWorld",
    "longname": "<anonymous>~Entity#addToWorld",
    "name": "addToWorld",
    "scope": "instance",
    "kind": "function",
    "description": "Add the entity to the world, making it active and processed by systems and managers.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Add children of the transform hierarchy recursively.",
        "name": "recursive"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 115,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 765
  },
  {
    "id": "<anonymous>~Entity#removeFromWorld",
    "longname": "<anonymous>~Entity#removeFromWorld",
    "name": "removeFromWorld",
    "scope": "instance",
    "kind": "function",
    "description": "Remove entity from the world.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Remove children of the transform hierarchy recursively.",
        "name": "recursive"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 125,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 766
  },
  {
    "id": "<anonymous>~Entity#setComponent",
    "longname": "<anonymous>~Entity#setComponent",
    "name": "setComponent",
    "scope": "instance",
    "kind": "function",
    "description": "Set component of a certain type on entity. The operation has no effect if the entity already contains a component of the same type.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "Component"
          ]
        },
        "description": "Component to set on the entity.",
        "name": "component"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 146,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 768
  },
  {
    "id": "<anonymous>~Entity#hasComponent",
    "longname": "<anonymous>~Entity#hasComponent",
    "name": "hasComponent",
    "scope": "instance",
    "kind": "function",
    "description": "Checks if a component of a specific type is present or not.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of component to check for (eg. 'meshDataComponent').",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 174,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 769
  },
  {
    "id": "<anonymous>~Entity#getComponent",
    "longname": "<anonymous>~Entity#getComponent",
    "name": "getComponent",
    "scope": "instance",
    "kind": "function",
    "description": "Retrieve a component of a specific type.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of component to retrieve (eg. 'transformComponent').",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Component"
          ]
        },
        "description": "Component with requested type or undefined if not present."
      }
    ],
    "meta": {
      "lineno": 185,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 770
  },
  {
    "id": "<anonymous>~Entity#clearComponent",
    "longname": "<anonymous>~Entity#clearComponent",
    "name": "clearComponent",
    "scope": "instance",
    "kind": "function",
    "description": "Remove a component of a specific type from entity.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of component to remove (eg. 'meshDataComponent').",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 196,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 771
  },
  {
    "id": "<anonymous>~Entity#setTag",
    "longname": "<anonymous>~Entity#setTag",
    "name": "setTag",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a tag to the entity.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "tag"
      }
    ],
    "examples": [
      "var banana = world.createEntity().setTag('fruit').setTag('green');"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/Entity/Entity-tags-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 233,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 772
  },
  {
    "id": "<anonymous>~Entity#hasTag",
    "longname": "<anonymous>~Entity#hasTag",
    "name": "hasTag",
    "scope": "instance",
    "kind": "function",
    "description": "Checks whether an entity has a tag or not.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "tag"
      }
    ],
    "examples": [
      "if (banana.hasTag('yellow')) {\n    console.log('The banana is yellow');\n}"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "."
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/Entity/Entity-tags-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 248,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 773
  },
  {
    "id": "<anonymous>~Entity#clearTag",
    "longname": "<anonymous>~Entity#clearTag",
    "name": "clearTag",
    "scope": "instance",
    "kind": "function",
    "description": "Clears a tag on an entity.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "tag"
      }
    ],
    "examples": [
      "// Remove 'alive' tag if hit points drops to zero\nif (hero.getAttribute('hit-points') <= 0) {\n    hero.clearTag('alive');\n}"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/Entity/Entity-tags-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 263,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 774
  },
  {
    "id": "<anonymous>~Entity#setAttribute",
    "longname": "<anonymous>~Entity#setAttribute",
    "name": "setAttribute",
    "scope": "instance",
    "kind": "function",
    "description": "Sets an attribute and its value on the entity.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attribute"
      },
      {
        "name": "value"
      }
    ],
    "examples": [
      "// Create an entity with tags and attributes, and add it to world\nvar hero = world.createEntity()\n                .setTag('hero')\n                .setAttribute('hit-points', 30)\n                .setAttribute('attack-power', 3)\n                .setTag('alive')\n                .addToWorld();"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/Entity/Entity-attributes-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 285,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 775
  },
  {
    "id": "<anonymous>~Entity#hasAttribute",
    "longname": "<anonymous>~Entity#hasAttribute",
    "name": "hasAttribute",
    "scope": "instance",
    "kind": "function",
    "description": "Checks whether an entity has an attribute or not.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attribute"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 295,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 776
  },
  {
    "id": "<anonymous>~Entity#getAttribute",
    "longname": "<anonymous>~Entity#getAttribute",
    "name": "getAttribute",
    "scope": "instance",
    "kind": "function",
    "description": "Gets the value of the specified attribute.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attribute"
      }
    ],
    "examples": [
      "// Check hit points on monster entity\nif (monster.getAttribute('hit-points') <= 0) {\n    console.log('The hero triumphs!');\n}"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 310,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 777
  },
  {
    "id": "<anonymous>~Entity#clearAttribute",
    "longname": "<anonymous>~Entity#clearAttribute",
    "name": "clearAttribute",
    "scope": "instance",
    "kind": "function",
    "description": "Clears an attribute of the entity.",
    "memberof": "<anonymous>~Entity",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attribute"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 319,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 778
  },
  {
    "id": "<anonymous>~Entity#toString",
    "longname": "<anonymous>~Entity#toString",
    "name": "toString",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Entity",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of entity."
      }
    ],
    "meta": {
      "lineno": 327,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 779
  },
  {
    "id": "<anonymous>~EntitySelection#and",
    "longname": "<anonymous>~EntitySelection#and",
    "name": "and",
    "scope": "instance",
    "kind": "function",
    "description": "Adds entities to this selection. Any resulting duplicates are removed.",
    "memberof": "<anonymous>~EntitySelection",
    "params": [
      {
        "type": {
          "names": [
            "Entity",
            "Array.<Entity>",
            "EntitySelection"
          ]
        },
        "description": "The entities to add",
        "name": "entities"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "EntitySelection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/EntitySelection/EntitySelection-setOps-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 27,
      "filename": "EntitySelection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 781
  },
  {
    "id": "<anonymous>~EntitySelection#intersects",
    "longname": "<anonymous>~EntitySelection#intersects",
    "name": "intersects",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the common entities between this selection and the given parameter(s)",
    "memberof": "<anonymous>~EntitySelection",
    "params": [
      {
        "type": {
          "names": [
            "Entity",
            "Array.<Entity>",
            "EntitySelection"
          ]
        },
        "name": "entities"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "EntitySelection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/EntitySelection/EntitySelection-setOps-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 72,
      "filename": "EntitySelection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 782
  },
  {
    "id": "<anonymous>~EntitySelection#without",
    "longname": "<anonymous>~EntitySelection#without",
    "name": "without",
    "scope": "instance",
    "kind": "function",
    "description": "Removes entities from the current selection",
    "memberof": "<anonymous>~EntitySelection",
    "params": [
      {
        "type": {
          "names": [
            "Entity",
            "Array.<Entity>",
            "EntitySelection"
          ]
        },
        "description": "Entities to remove from the selection",
        "name": "entities"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "EntitySelection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/EntitySelection/EntitySelection-setOps-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 116,
      "filename": "EntitySelection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 783
  },
  {
    "id": "<anonymous>~EntitySelection#andSelf",
    "longname": "<anonymous>~EntitySelection#andSelf",
    "name": "andSelf",
    "scope": "instance",
    "kind": "function",
    "description": "Adds the previous selection to the current selection. Resulting duplicates are removed.",
    "memberof": "<anonymous>~EntitySelection",
    "returns": [
      {
        "type": {
          "names": [
            "EntitySelection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 146,
      "filename": "EntitySelection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 784
  },
  {
    "id": "<anonymous>~EntitySelection#parent",
    "longname": "<anonymous>~EntitySelection#parent",
    "name": "parent",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the parents of all entities in this selection",
    "memberof": "<anonymous>~EntitySelection",
    "returns": [
      {
        "type": {
          "names": [
            "EntitySelection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/EntitySelection/EntitySelection-parent-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 162,
      "filename": "EntitySelection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 785
  },
  {
    "id": "<anonymous>~EntitySelection#children",
    "longname": "<anonymous>~EntitySelection#children",
    "name": "children",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the children of all entities in this selection",
    "memberof": "<anonymous>~EntitySelection",
    "returns": [
      {
        "type": {
          "names": [
            "EntitySelection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/EntitySelection/EntitySelection-children-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 190,
      "filename": "EntitySelection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 786
  },
  {
    "id": "<anonymous>~GooRunner#addEventListener",
    "longname": "<anonymous>~GooRunner#addEventListener",
    "name": "addEventListener",
    "scope": "instance",
    "kind": "function",
    "description": "Adds an event listener to the GooRunner.",
    "memberof": "<anonymous>~GooRunner",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Can currently be 'click', 'mousedown', 'mousemove', 'mouseup',\n'touchstart', 'touchend' or 'touchmove'.",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Callback function.",
        "name": "callback"
      },
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Picked entity, undefined if no entity is picked.",
        "name": "callback.event.entity"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Point of pick ray intersection with scene.",
        "name": "callback.event.intersection"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Depth of pick ray intersection.",
        "name": "callback.event.depth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Canvas x coordinate.",
        "name": "callback.event.x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Canvas y coordinate.",
        "name": "callback.event.y"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of triggered event ('mousedown', 'touchstart', etc).",
        "name": "callback.event.type"
      },
      {
        "type": {
          "names": [
            "Event"
          ]
        },
        "description": "Original DOM event.",
        "name": "callback.event.domEvent"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Entity pick ID. -1 if no entity was picked.",
        "name": "callback.event.id"
      }
    ],
    "examples": [
      "gooRunner.addEventListener('mousedown', function (event) {\n  if (event.entity) {\n    console.log('clicked entity', event.entity.name);\n    console.log('clicked point', event.intersection);\n  }\n});"
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/misc/PickingEvents/PickingEvents-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 622,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 809
  },
  {
    "id": "<anonymous>~GooRunner#removeEventListener",
    "longname": "<anonymous>~GooRunner#removeEventListener",
    "name": "removeEventListener",
    "scope": "instance",
    "kind": "function",
    "description": "Removes an event listener from the GooRunner.",
    "memberof": "<anonymous>~GooRunner",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Can currently be 'click', 'mousedown', 'mousemove', 'mouseup',\n'touchstart', 'touchend' or 'touchmove'.",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Callback to remove from event listener.",
        "name": "callback"
      }
    ],
    "meta": {
      "lineno": 641,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 810
  },
  {
    "id": "<anonymous>~GooRunner#triggerEvent",
    "longname": "<anonymous>~GooRunner#triggerEvent",
    "name": "triggerEvent",
    "scope": "instance",
    "kind": "function",
    "description": "Triggers an event on the GooRunner (force).",
    "memberof": "<anonymous>~GooRunner",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Can currently be 'click', 'mousedown', 'mousemove', 'mouseup',\n'touchstart', 'touchend' or 'touchmove'.",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "The GooRunner-style event",
        "name": "evt"
      },
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Event entity.",
        "name": "evt.entity"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Event canvas X coordinate.",
        "name": "evt.x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Event canvas Y coordinate.",
        "name": "evt.y"
      },
      {
        "type": {
          "names": [
            "Event"
          ]
        },
        "description": "The original DOM event.",
        "name": "evt.domEvent"
      }
    ],
    "meta": {
      "lineno": 664,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 811
  },
  {
    "id": "<anonymous>~GooRunner#startGameLoop",
    "longname": "<anonymous>~GooRunner#startGameLoop",
    "name": "startGameLoop",
    "scope": "instance",
    "kind": "function",
    "description": "Starts the game loop (done through requestAnimationFrame).",
    "memberof": "<anonymous>~GooRunner",
    "meta": {
      "lineno": 767,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 815
  },
  {
    "id": "<anonymous>~GooRunner#stopGameLoop",
    "longname": "<anonymous>~GooRunner#stopGameLoop",
    "name": "stopGameLoop",
    "scope": "instance",
    "kind": "function",
    "description": "Stops the game loop.",
    "memberof": "<anonymous>~GooRunner",
    "meta": {
      "lineno": 784,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 817
  },
  {
    "id": "<anonymous>~GooRunner#takeSnapshot",
    "longname": "<anonymous>~GooRunner#takeSnapshot",
    "name": "takeSnapshot",
    "scope": "instance",
    "kind": "function",
    "description": "Takes an image snapshot from the 3d scene at next render call.",
    "memberof": "<anonymous>~GooRunner",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "meta": {
      "lineno": 793,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 818
  },
  {
    "id": "<anonymous>~GooRunner#pick",
    "longname": "<anonymous>~GooRunner#pick",
    "name": "pick",
    "scope": "instance",
    "kind": "function",
    "description": "Requests a pick from screen space coordinates. A successful pick returns id and depth of the pick target.",
    "memberof": "<anonymous>~GooRunner",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "screen coordinate",
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "screen coordinate",
        "name": "y"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "to handle the pick result",
        "name": "callback"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "when true picking will be attempted against existing buffer",
        "name": "skipUpdateBuffer"
      }
    ],
    "meta": {
      "lineno": 805,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 819
  },
  {
    "id": "<anonymous>~GooRunner#pickSync",
    "longname": "<anonymous>~GooRunner#pickSync",
    "name": "pickSync",
    "scope": "instance",
    "kind": "function",
    "description": "Pick, the synchronous method. Uses the same pickbuffer so it will affect asynch picking. Also goes only through the normal render system.",
    "memberof": "<anonymous>~GooRunner",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "screen coordinate",
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "screen coordinate",
        "name": "y"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "when true picking will be attempted against existing buffer",
        "name": "skipUpdateBuffer"
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/misc/PickSync/PickSync-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 822,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 820
  },
  {
    "id": "<anonymous>~GooRunner#clear",
    "longname": "<anonymous>~GooRunner#clear",
    "name": "clear",
    "scope": "instance",
    "kind": "function",
    "description": "Clears the GooRunner and anything associated with it. Once this method is called this instanceof of GooRunner is unusable.",
    "memberof": "<anonymous>~GooRunner",
    "meta": {
      "lineno": 848,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 821
  },
  {
    "id": "<anonymous>~EntityManager#containsEntity",
    "longname": "<anonymous>~EntityManager#containsEntity",
    "name": "containsEntity",
    "scope": "instance",
    "kind": "function",
    "description": "Checks if an entity exists",
    "memberof": "<anonymous>~EntityManager",
    "params": [
      {
        "description": "Entity to check for",
        "name": "entity"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "true if the entity exists"
      }
    ],
    "meta": {
      "lineno": 72,
      "filename": "EntityManager.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/managers"
    },
    "order": 825
  },
  {
    "id": "<anonymous>~EntityManager#getEntityById",
    "longname": "<anonymous>~EntityManager#getEntityById",
    "name": "getEntityById",
    "scope": "instance",
    "kind": "function",
    "description": "Retrieve an entity based on an id",
    "memberof": "<anonymous>~EntityManager",
    "params": [
      {
        "description": "Id to retrieve entity for",
        "name": "id"
      }
    ],
    "returns": [
      {
        "description": "Entity or undefined if not existing"
      }
    ],
    "meta": {
      "lineno": 82,
      "filename": "EntityManager.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/managers"
    },
    "order": 826
  },
  {
    "id": "<anonymous>~EntityManager#getEntityByIndex",
    "longname": "<anonymous>~EntityManager#getEntityByIndex",
    "name": "getEntityByIndex",
    "scope": "instance",
    "kind": "function",
    "description": "Retrieve an entity based on an index",
    "memberof": "<anonymous>~EntityManager",
    "params": [
      {
        "description": "Index to retrieve entity for",
        "name": "index"
      }
    ],
    "returns": [
      {
        "description": "Entity or undefined if not existing"
      }
    ],
    "meta": {
      "lineno": 93,
      "filename": "EntityManager.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/managers"
    },
    "order": 827
  },
  {
    "id": "<anonymous>~EntityManager#getEntityByName",
    "longname": "<anonymous>~EntityManager#getEntityByName",
    "name": "getEntityByName",
    "scope": "instance",
    "kind": "function",
    "description": "Retrieve an entity based on its name",
    "memberof": "<anonymous>~EntityManager",
    "params": [
      {
        "description": "Name to retrieve entity for",
        "name": "name"
      }
    ],
    "returns": [
      {
        "description": "Entity or undefined if not existing"
      }
    ],
    "meta": {
      "lineno": 103,
      "filename": "EntityManager.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/managers"
    },
    "order": 828
  },
  {
    "id": "<anonymous>~EntityManager#size",
    "longname": "<anonymous>~EntityManager#size",
    "name": "size",
    "scope": "instance",
    "kind": "function",
    "description": "Get the number of entities currently indexed by the Entity Manager",
    "memberof": "<anonymous>~EntityManager",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 121,
      "filename": "EntityManager.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/managers"
    },
    "order": 829
  },
  {
    "id": "<anonymous>~EntityManager#getEntities",
    "longname": "<anonymous>~EntityManager#getEntities",
    "name": "getEntities",
    "scope": "instance",
    "kind": "function",
    "description": "Get all entities in the world",
    "memberof": "<anonymous>~EntityManager",
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "Array containing all entities in the world"
      }
    ],
    "meta": {
      "lineno": 131,
      "filename": "EntityManager.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/managers"
    },
    "order": 830
  },
  {
    "id": "<anonymous>~EntityManager#getTopEntities",
    "longname": "<anonymous>~EntityManager#getTopEntities",
    "name": "getTopEntities",
    "scope": "instance",
    "kind": "function",
    "description": "Get all entities on top level based on the transform scenegraph",
    "memberof": "<anonymous>~EntityManager",
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "Array containing all top entities"
      }
    ],
    "meta": {
      "lineno": 146,
      "filename": "EntityManager.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/managers"
    },
    "order": 831
  },
  {
    "id": "<anonymous>~EntityManager#clear",
    "longname": "<anonymous>~EntityManager#clear",
    "name": "clear",
    "scope": "instance",
    "kind": "function",
    "description": "Removes all entities",
    "memberof": "<anonymous>~EntityManager",
    "meta": {
      "lineno": 161,
      "filename": "EntityManager.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/managers"
    },
    "order": 832
  },
  {
    "id": "<anonymous>~Selection#contains",
    "longname": "<anonymous>~Selection#contains",
    "name": "contains",
    "scope": "instance",
    "kind": "function",
    "description": "Returns true if the selection contains a specific element",
    "memberof": "<anonymous>~Selection",
    "params": [
      {
        "name": "element"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 46,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 836
  },
  {
    "id": "<anonymous>~Selection#size",
    "longname": "<anonymous>~Selection#size",
    "name": "size",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the size of this selection",
    "memberof": "<anonymous>~Selection",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 56,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 837
  },
  {
    "id": "<anonymous>~Selection#each",
    "longname": "<anonymous>~Selection#each",
    "name": "each",
    "scope": "instance",
    "kind": "function",
    "description": "Applies a function on each element until `false` is returned",
    "memberof": "<anonymous>~Selection",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The function to apply",
        "name": "fun"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Selection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 67,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 838
  },
  {
    "id": "<anonymous>~Selection#filter",
    "longname": "<anonymous>~Selection#filter",
    "name": "filter",
    "scope": "instance",
    "kind": "function",
    "description": "Applies a filter on the elements of this selection",
    "memberof": "<anonymous>~Selection",
    "params": [
      {
        "description": "The filter used for filtering",
        "name": "predicate"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Selection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 91,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 840
  },
  {
    "id": "<anonymous>~Selection#map",
    "longname": "<anonymous>~Selection#map",
    "name": "map",
    "scope": "instance",
    "kind": "function",
    "description": "Applies a function on the elements of this selection producing a new collection",
    "memberof": "<anonymous>~Selection",
    "params": [
      {
        "description": "The function to apply to each element",
        "name": "fun"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Selection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 107,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 841
  },
  {
    "id": "<anonymous>~Selection#reduce",
    "longname": "<anonymous>~Selection#reduce",
    "name": "reduce",
    "scope": "instance",
    "kind": "function",
    "description": "Reduces the entire selection to a single element by applying a function on every element and an accumulated value",
    "memberof": "<anonymous>~Selection",
    "params": [
      {
        "description": "The function used to reduce the selection",
        "name": "fun"
      },
      {
        "description": "The value used for the first call of `fun`",
        "name": "initialValue"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Selection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 141,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 843
  },
  {
    "id": "<anonymous>~Selection#and",
    "longname": "<anonymous>~Selection#and",
    "name": "and",
    "scope": "instance",
    "kind": "function",
    "description": "Adds elements to this selection. Any resulting duplicates are removed.",
    "memberof": "<anonymous>~Selection",
    "params": [
      {
        "type": {
          "names": [
            "Element",
            "Array.<Element>",
            "Selection"
          ]
        },
        "description": "The element(s) to add",
        "name": "elements"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Selection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 157,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 844
  },
  {
    "id": "<anonymous>~Selection#intersects",
    "longname": "<anonymous>~Selection#intersects",
    "name": "intersects",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the common elements between this selection and the given parameter(s)",
    "memberof": "<anonymous>~Selection",
    "params": [
      {
        "type": {
          "names": [
            "Element",
            "Array.<Element>",
            "Selection"
          ]
        },
        "name": "elements"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Selection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 175,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 845
  },
  {
    "id": "<anonymous>~Selection#without",
    "longname": "<anonymous>~Selection#without",
    "name": "without",
    "scope": "instance",
    "kind": "function",
    "description": "Removes elements from the current selection",
    "memberof": "<anonymous>~Selection",
    "params": [
      {
        "type": {
          "names": [
            "Element",
            "Array.<Element>",
            "Selection"
          ]
        },
        "description": "Elements to remove from the selection",
        "name": "elements"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Selection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 215,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 846
  },
  {
    "id": "<anonymous>~Selection#andSelf",
    "longname": "<anonymous>~Selection#andSelf",
    "name": "andSelf",
    "scope": "instance",
    "kind": "function",
    "description": "Adds the previous selection to the current selection. Resulting duplicates are removed.",
    "memberof": "<anonymous>~Selection",
    "returns": [
      {
        "type": {
          "names": [
            "Selection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 239,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 847
  },
  {
    "id": "<anonymous>~Selection#end",
    "longname": "<anonymous>~Selection#end",
    "name": "end",
    "scope": "instance",
    "kind": "function",
    "description": "Discards the last operation done on the selection",
    "memberof": "<anonymous>~Selection",
    "returns": [
      {
        "type": {
          "names": [
            "Selection"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 258,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 848
  },
  {
    "id": "<anonymous>~Selection#first",
    "longname": "<anonymous>~Selection#first",
    "name": "first",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the first object of the selection",
    "memberof": "<anonymous>~Selection",
    "returns": [
      {
        "type": {
          "names": [
            "Element"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 277,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 849
  },
  {
    "id": "<anonymous>~Selection#clone",
    "longname": "<anonymous>~Selection#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Clones the selection and its history",
    "memberof": "<anonymous>~Selection",
    "returns": [
      {
        "type": {
          "names": [
            "Selection"
          ]
        },
        "description": "Returns a copy of this selection object"
      }
    ],
    "meta": {
      "lineno": 285,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 850
  },
  {
    "id": "<anonymous>~Selection#get",
    "longname": "<anonymous>~Selection#get",
    "name": "get",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the element on the specified position or the whole selection as an array if position is not given",
    "memberof": "<anonymous>~Selection",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Index of the desired element; can handle negative indices (Ex: -1 is the last element)",
        "name": "index"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 302,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 851
  },
  {
    "id": "<anonymous>~Selection#toArray",
    "longname": "<anonymous>~Selection#toArray",
    "name": "toArray",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the selection as an array",
    "memberof": "<anonymous>~Selection",
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 317,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 852
  },
  {
    "id": "<anonymous>~CameraSystem#findMainCamera",
    "longname": "<anonymous>~CameraSystem#findMainCamera",
    "name": "findMainCamera",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the Renderer's main camera to be the first camera of the CameraComponents\nin the currently active entities of this system.",
    "memberof": "<anonymous>~CameraSystem",
    "meta": {
      "lineno": 29,
      "filename": "CameraSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 858
  },
  {
    "id": "<anonymous>~LightingSystem#setOverrideLights",
    "longname": "<anonymous>~LightingSystem#setOverrideLights",
    "name": "setOverrideLights",
    "scope": "instance",
    "kind": "function",
    "description": "Replaces the lights tracked by the system with custom ones.",
    "memberof": "<anonymous>~LightingSystem",
    "params": [
      {
        "name": "overrideLights"
      }
    ],
    "meta": {
      "lineno": 35,
      "filename": "LightingSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 865
  },
  {
    "id": "<anonymous>~LightingSystem#clearOverrideLights",
    "longname": "<anonymous>~LightingSystem#clearOverrideLights",
    "name": "clearOverrideLights",
    "scope": "instance",
    "kind": "function",
    "description": "Disables overriding of lights tracked by the system",
    "memberof": "<anonymous>~LightingSystem",
    "meta": {
      "lineno": 44,
      "filename": "LightingSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 866
  },
  {
    "id": "<anonymous>~SoundSystem#updateConfig",
    "longname": "<anonymous>~SoundSystem#updateConfig",
    "name": "updateConfig",
    "scope": "instance",
    "kind": "function",
    "description": "Update the environmental sound system properties. The settings are applied on the next process().",
    "memberof": "<anonymous>~SoundSystem",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "config"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "How much doppler effect the sound will get.",
        "name": "config.dopplerFactor"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "How fast the sound fades with distance.",
        "name": "config.rolloffFactor"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "After this distance, sound will keep its volume.",
        "name": "config.maxDistance"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Will be clamped between 0 and 1.",
        "name": "config.volume"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Will be clamped between 0 and 1.",
        "name": "config.reverb"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "name": "config.muted"
      }
    ],
    "meta": {
      "lineno": 160,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 884
  },
  {
    "id": "<anonymous>~SoundSystem#setReverb",
    "longname": "<anonymous>~SoundSystem#setReverb",
    "name": "setReverb",
    "scope": "instance",
    "kind": "function",
    "description": "Set the reverb impulse response. The settings are not applied immediately.",
    "memberof": "<anonymous>~SoundSystem",
    "params": [
      {
        "type": {
          "names": [
            "AudioBuffer",
            "null"
          ]
        },
        "optional": true,
        "description": "if empty will also empty existing reverb",
        "name": "audioBuffer"
      }
    ],
    "meta": {
      "lineno": 189,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 885
  },
  {
    "id": "<anonymous>~SoundSystem#pause",
    "longname": "<anonymous>~SoundSystem#pause",
    "name": "pause",
    "scope": "instance",
    "kind": "function",
    "description": "Pause the sound system and thereby all sounds in the scene",
    "memberof": "<anonymous>~SoundSystem",
    "meta": {
      "lineno": 197,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 886
  },
  {
    "id": "<anonymous>~SoundSystem#mute",
    "longname": "<anonymous>~SoundSystem#mute",
    "name": "mute",
    "scope": "instance",
    "kind": "function",
    "description": "Mute all sounds.",
    "memberof": "<anonymous>~SoundSystem",
    "meta": {
      "lineno": 215,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 887
  },
  {
    "id": "<anonymous>~SoundSystem#unmute",
    "longname": "<anonymous>~SoundSystem#unmute",
    "name": "unmute",
    "scope": "instance",
    "kind": "function",
    "description": "Unmute all sounds.",
    "memberof": "<anonymous>~SoundSystem",
    "meta": {
      "lineno": 223,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 888
  },
  {
    "id": "<anonymous>~SoundSystem#resume",
    "longname": "<anonymous>~SoundSystem#resume",
    "name": "resume",
    "scope": "instance",
    "kind": "function",
    "description": "Resumes playing of all sounds that were paused",
    "memberof": "<anonymous>~SoundSystem",
    "meta": {
      "lineno": 231,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 889
  },
  {
    "id": "<anonymous>~SoundSystem#play",
    "longname": "<anonymous>~SoundSystem#play",
    "name": "play",
    "scope": "instance",
    "kind": "function",
    "description": "Resumes playing of all sounds that were paused.",
    "memberof": "<anonymous>~SoundSystem",
    "meta": {
      "lineno": 249,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 890
  },
  {
    "id": "<anonymous>~SoundSystem#stop",
    "longname": "<anonymous>~SoundSystem#stop",
    "name": "stop",
    "scope": "instance",
    "kind": "function",
    "description": "Stopping the sound system and all sounds in scene",
    "memberof": "<anonymous>~SoundSystem",
    "meta": {
      "lineno": 257,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 891
  },
  {
    "id": "<anonymous>~System#added",
    "longname": "<anonymous>~System#added",
    "name": "added",
    "scope": "instance",
    "kind": "function",
    "description": "Called when an entity is added to the world and systems need to be informed",
    "memberof": "<anonymous>~System",
    "params": [
      {
        "name": "entity"
      }
    ],
    "meta": {
      "lineno": 41,
      "filename": "System.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 895
  },
  {
    "id": "<anonymous>~System#changed",
    "longname": "<anonymous>~System#changed",
    "name": "changed",
    "scope": "instance",
    "kind": "function",
    "description": "Called when an entity gets/loses components",
    "memberof": "<anonymous>~System",
    "params": [
      {
        "name": "entity"
      }
    ],
    "meta": {
      "lineno": 50,
      "filename": "System.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 896
  },
  {
    "id": "<anonymous>~System#removed",
    "longname": "<anonymous>~System#removed",
    "name": "removed",
    "scope": "instance",
    "kind": "function",
    "description": "Called when an entity is removed from the world",
    "memberof": "<anonymous>~System",
    "params": [
      {
        "name": "entity"
      }
    ],
    "meta": {
      "lineno": 59,
      "filename": "System.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 897
  },
  {
    "id": "<anonymous>~System#setup",
    "longname": "<anonymous>~System#setup",
    "name": "setup",
    "scope": "instance",
    "kind": "function",
    "description": "Called when the system is added to the world.\nThis method is called automatically when the system is added to a world.\nBy default it will go through all entities\naccounted by the entity manager and try to add them to this system.",
    "memberof": "<anonymous>~System",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      }
    ],
    "meta": {
      "lineno": 76,
      "filename": "System.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 898
  },
  {
    "id": "<anonymous>~System#cleanup",
    "longname": "<anonymous>~System#cleanup",
    "name": "cleanup",
    "scope": "instance",
    "kind": "function",
    "description": "Called when the system is removed from the world.\nBy default it will call the deleted method on all entities it is keeping track of.",
    "memberof": "<anonymous>~System",
    "meta": {
      "lineno": 84,
      "filename": "System.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 899
  },
  {
    "id": "<anonymous>~World#add",
    "longname": "<anonymous>~World#add",
    "name": "add",
    "scope": "instance",
    "kind": "function",
    "description": "Universal shorthand for adding managers, systems, entities and registering components.\nArguments can be of types Entity, Manager, System or Component and added in any order or combination.",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "optional": true,
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Manager"
          ]
        },
        "optional": true,
        "name": "manager"
      },
      {
        "type": {
          "names": [
            "System"
          ]
        },
        "optional": true,
        "name": "system"
      },
      {
        "type": {
          "names": [
            "Component"
          ]
        },
        "optional": true,
        "name": "component"
      }
    ],
    "examples": [
      "// Add two entities and register a component, all in one swoop\nvar entity1 = new Entity(gooRunner.world, 'Entity 1');\nvar entity2 = new Entity(gooRunner.world, 'Entity 2');\nvar animationComponent = new AnimationComponent();\ngooRunner.world.add(entity1, animationComponent, entity2);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 89,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 910
  },
  {
    "id": "<anonymous>~World#registerComponent",
    "longname": "<anonymous>~World#registerComponent",
    "name": "registerComponent",
    "scope": "instance",
    "kind": "function",
    "description": "Registers a component type. This is necessary to allow automatic creation of components\nfrom 'basic' data types (CameraComponents from Cameras, MeshRendererComponents from materials and so on).\nWhen a {@link GooRunner} is created, it registers {@link TransformComponent}, {@link MeshDataComponent},\n{@link MeshRendererComponent}, {@link CameraComponent}, {@link LightComponent} and {@link ScriptComponent} automatically.",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "type": {
          "names": [
            "Component"
          ]
        },
        "name": "componentConstructor"
      }
    ],
    "examples": [
      "// Register the animation component type so that animations\n// can be automatically created.\ngooRunner.world.registerComponent(AnimationComponent);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 121,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 911
  },
  {
    "id": "<anonymous>~World#setManager",
    "longname": "<anonymous>~World#setManager",
    "name": "setManager",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a {@link Manager} to the world.",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "type": {
          "names": [
            "Manager"
          ]
        },
        "name": "manager"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 135,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 912
  },
  {
    "id": "<anonymous>~World#getManager",
    "longname": "<anonymous>~World#getManager",
    "name": "getManager",
    "scope": "instance",
    "kind": "function",
    "description": "Retrieves a {@link Manager} of a certain type.",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of manager to retrieve eg. 'EntityManager'.",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Manager"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 147,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 913
  },
  {
    "id": "<anonymous>~World#setSystem",
    "longname": "<anonymous>~World#setSystem",
    "name": "setSystem",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a {@link System} to the world.",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "type": {
          "names": [
            "System"
          ]
        },
        "name": "system"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 162,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 914
  },
  {
    "id": "<anonymous>~World#getSystem",
    "longname": "<anonymous>~World#getSystem",
    "name": "getSystem",
    "scope": "instance",
    "kind": "function",
    "description": "Retrieve a {@link System} of type 'type'.",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of system to retrieve.",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "System"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 187,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 915
  },
  {
    "id": "<anonymous>~World#clearSystem",
    "longname": "<anonymous>~World#clearSystem",
    "name": "clearSystem",
    "scope": "instance",
    "kind": "function",
    "description": "Removes the {@link System} of type 'type'.\nEntities tracked by the removed system will not get handled properly when they are removed from the world\nor when their components (that are tracked by this system) change.",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of system to remove.",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 204,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 916
  },
  {
    "id": "<anonymous>~World#createEntity",
    "longname": "<anonymous>~World#createEntity",
    "name": "createEntity",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a new {@link Entity} with an optional MeshData, MeshRenderer, Camera, Script and Light component, placed optionally at a location. Parameters can be given in any order.",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "optional": true,
        "name": "meshData"
      },
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "optional": true,
        "name": "material"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "name"
      },
      {
        "type": {
          "names": [
            "Camera"
          ]
        },
        "optional": true,
        "name": "camera"
      },
      {
        "type": {
          "names": [
            "Light"
          ]
        },
        "optional": true,
        "name": "light"
      }
    ],
    "examples": [
      "// Create a sphere entity and add it to the world\nvar sphereEntity = world.createEntity(new Sphere(32, 32), material, [0, 0, 5]).addToWorld();\n// Create a camera entity and add it to the world\nvar cameraEntity = world.createEntity(new Camera(), [0, 0, 3]).lookAt(new Vector3(0, 0, 0)).addToWorld();"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 232,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 917
  },
  {
    "id": "<anonymous>~World#getEntities",
    "longname": "<anonymous>~World#getEntities",
    "name": "getEntities",
    "scope": "instance",
    "kind": "function",
    "description": "Get an array of all entities in world.",
    "memberof": "<anonymous>~World",
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Entity>"
          ]
        },
        "description": "All entities existing in world."
      }
    ],
    "meta": {
      "lineno": 255,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 918
  },
  {
    "id": "<anonymous>~World#addEntity",
    "longname": "<anonymous>~World#addEntity",
    "name": "addEntity",
    "scope": "instance",
    "kind": "function",
    "description": "Add an {@link Entity} to the world.",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Entity to add.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "If entity hierarchy should be added recursively.",
        "name": "recursive"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 266,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 919
  },
  {
    "id": "<anonymous>~World#removeEntity",
    "longname": "<anonymous>~World#removeEntity",
    "name": "removeEntity",
    "scope": "instance",
    "kind": "function",
    "description": "Remove an {@link Entity} from the world.",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Entity to remove.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "If entity hierarchy should be removed recursively.",
        "name": "recursive"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "description": "Returns self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 294,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 920
  },
  {
    "id": "<anonymous>~World#changedEntity",
    "longname": "<anonymous>~World#changedEntity",
    "name": "changedEntity",
    "scope": "instance",
    "kind": "function",
    "description": "Let the world and its systems know that an entity has been changed/updated.",
    "memberof": "<anonymous>~World",
    "params": [
      {
        "name": "entity"
      },
      {
        "name": "component"
      },
      {
        "name": "eventType"
      }
    ],
    "meta": {
      "lineno": 354,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 921
  },
  {
    "id": "<anonymous>~World#processEntityChanges",
    "longname": "<anonymous>~World#processEntityChanges",
    "name": "processEntityChanges",
    "scope": "instance",
    "kind": "function",
    "description": "Processes newly added entities, changed entities and removed entities",
    "memberof": "<anonymous>~World",
    "meta": {
      "lineno": 370,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 922
  },
  {
    "id": "<anonymous>~World#process",
    "longname": "<anonymous>~World#process",
    "name": "process",
    "scope": "instance",
    "kind": "function",
    "description": "Process all added/changed/removed entities and callback to active systems and managers. Usually called automatically each frame.\nHas to be called between adding an entity to the world and getting it back.",
    "memberof": "<anonymous>~World",
    "meta": {
      "lineno": 411,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 923
  },
  {
    "id": "<anonymous>~World#clear",
    "longname": "<anonymous>~World#clear",
    "name": "clear",
    "scope": "instance",
    "kind": "function",
    "description": "Calls .clear on all systems that support this method",
    "memberof": "<anonymous>~World",
    "meta": {
      "lineno": 438,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 924
  },
  {
    "id": "<anonymous>~StateMachineComponent#init",
    "longname": "<anonymous>~StateMachineComponent#init",
    "name": "init",
    "scope": "instance",
    "kind": "function",
    "description": "Resets all state machines to their initial state",
    "memberof": "<anonymous>~StateMachineComponent",
    "meta": {
      "lineno": 90,
      "filename": "StateMachineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine"
    },
    "order": 945
  },
  {
    "id": "<anonymous>~StateMachineComponent#kill",
    "longname": "<anonymous>~StateMachineComponent#kill",
    "name": "kill",
    "scope": "instance",
    "kind": "function",
    "description": "Kills the state machines triggering exit functions in all current states",
    "memberof": "<anonymous>~StateMachineComponent",
    "meta": {
      "lineno": 109,
      "filename": "StateMachineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine"
    },
    "order": 946
  },
  {
    "id": "<anonymous>~StateMachineComponent#cleanup",
    "longname": "<anonymous>~StateMachineComponent#cleanup",
    "name": "cleanup",
    "scope": "instance",
    "kind": "function",
    "description": "Performs a cleanup; undoes any changes not undone by exit methods",
    "memberof": "<anonymous>~StateMachineComponent",
    "meta": {
      "lineno": 119,
      "filename": "StateMachineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine"
    },
    "order": 947
  },
  {
    "id": "<anonymous>~StateMachineComponent#update",
    "longname": "<anonymous>~StateMachineComponent#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the state machines",
    "memberof": "<anonymous>~StateMachineComponent",
    "meta": {
      "lineno": 129,
      "filename": "StateMachineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine"
    },
    "order": 948
  },
  {
    "id": "<anonymous>~StateMachineComponent#pause",
    "longname": "<anonymous>~StateMachineComponent#pause",
    "name": "pause",
    "scope": "instance",
    "kind": "function",
    "description": "Stops updating the state machines",
    "memberof": "<anonymous>~StateMachineComponent",
    "meta": {
      "lineno": 141,
      "filename": "StateMachineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine"
    },
    "order": 949
  },
  {
    "id": "<anonymous>~StateMachineComponent#play",
    "longname": "<anonymous>~StateMachineComponent#play",
    "name": "play",
    "scope": "instance",
    "kind": "function",
    "description": "Resumes updating the state machines",
    "memberof": "<anonymous>~StateMachineComponent",
    "meta": {
      "lineno": 149,
      "filename": "StateMachineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine"
    },
    "order": 950
  },
  {
    "id": "<anonymous>~StateMachineSystem#play",
    "longname": "<anonymous>~StateMachineSystem#play",
    "name": "play",
    "scope": "instance",
    "kind": "function",
    "description": "Resumes updating the entities",
    "memberof": "<anonymous>~StateMachineSystem",
    "meta": {
      "lineno": 91,
      "filename": "StateMachineSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine"
    },
    "order": 954
  },
  {
    "id": "<anonymous>~StateMachineSystem#pause",
    "longname": "<anonymous>~StateMachineSystem#pause",
    "name": "pause",
    "scope": "instance",
    "kind": "function",
    "description": "Stops updating the entities",
    "memberof": "<anonymous>~StateMachineSystem",
    "meta": {
      "lineno": 107,
      "filename": "StateMachineSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine"
    },
    "order": 955
  },
  {
    "id": "<anonymous>~StateMachineSystem#stop",
    "longname": "<anonymous>~StateMachineSystem#stop",
    "name": "stop",
    "scope": "instance",
    "kind": "function",
    "description": "Stop updating entities and resets the state machines to their initial state",
    "memberof": "<anonymous>~StateMachineSystem",
    "meta": {
      "lineno": 120,
      "filename": "StateMachineSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine"
    },
    "order": 957
  },
  {
    "id": "<anonymous>~StateMachineComponentHandler#_create",
    "longname": "<anonymous>~StateMachineComponentHandler#_create",
    "name": "_create",
    "scope": "instance",
    "kind": "function",
    "description": "Create statemachine component",
    "memberof": "<anonymous>~StateMachineComponentHandler",
    "returns": [
      {
        "type": {
          "names": [
            "StateMachineComponent"
          ]
        },
        "description": "the created component object"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 37,
      "filename": "StateMachineComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack"
    },
    "order": 960
  },
  {
    "id": "<anonymous>~StateMachineComponentHandler#update",
    "longname": "<anonymous>~StateMachineComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine statemachine component object based on the config.",
    "memberof": "<anonymous>~StateMachineComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 63,
      "filename": "StateMachineComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack"
    },
    "order": 961
  },
  {
    "id": "<anonymous>~FilledPolygon#rebuild",
    "longname": "<anonymous>~FilledPolygon#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~FilledPolygon",
    "returns": [
      {
        "type": {
          "names": [
            "FilledPolygon"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 99,
      "filename": "FilledPolygon.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 964
  },
  {
    "id": "<anonymous>~PolyLine#rebuild",
    "longname": "<anonymous>~PolyLine#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data",
    "memberof": "<anonymous>~PolyLine",
    "returns": [
      {
        "type": {
          "names": [
            "PolyLine"
          ]
        },
        "description": "Self for chaining"
      }
    ],
    "meta": {
      "lineno": 43,
      "filename": "PolyLine.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 967
  },
  {
    "id": "<anonymous>~PolyLine#mul",
    "longname": "<anonymous>~PolyLine#mul",
    "name": "mul",
    "scope": "instance",
    "kind": "function",
    "description": "Builds a surface as a result of multiplying 2 polyLines",
    "memberof": "<anonymous>~PolyLine",
    "params": [
      {
        "type": {
          "names": [
            "PolyLine"
          ]
        },
        "description": "The second operand",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Surface"
          ]
        },
        "description": "The resulting surface"
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/geometrypack/Surface/PolyLine-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 63,
      "filename": "PolyLine.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 968
  },
  {
    "id": "<anonymous>~PolyLine#pipe",
    "longname": "<anonymous>~PolyLine#pipe",
    "name": "pipe",
    "scope": "instance",
    "kind": "function",
    "description": "Extrudes and rotates a PolyLine along another PolyLine.",
    "memberof": "<anonymous>~PolyLine",
    "params": [
      {
        "type": {
          "names": [
            "PolyLine"
          ]
        },
        "description": "The PolyLine to extrude; should be bidimensional and defined on the XY plane.",
        "name": "that"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "Takes values between 0 and 1; the returned value is a number used to scale the extruded PolyLine",
        "name": "options.scale"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "Takes values between 0 and 1; the returned value is a number used to twist the extruded PolyLine along the tangent of the extruding PolyLine. The twist value is expressed in radians.",
        "name": "options.twist"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Surface"
          ]
        },
        "description": "The resulting surface"
      }
    ],
    "meta": {
      "lineno": 116,
      "filename": "PolyLine.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 969
  },
  {
    "id": "<anonymous>~PolyLine#lathe",
    "longname": "<anonymous>~PolyLine#lathe",
    "name": "lathe",
    "scope": "instance",
    "kind": "function",
    "description": "Builds a surface as a result of rotating this polyLine around the Y axis",
    "memberof": "<anonymous>~PolyLine",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 8,
        "description": "The number of segments for the resulting surface",
        "name": "nSegments"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Surface"
          ]
        },
        "description": "The resulting surface"
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/geometrypack/Surface/Lathe-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 166,
      "filename": "PolyLine.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 970
  },
  {
    "id": "<anonymous>~PolyLine#concat",
    "longname": "<anonymous>~PolyLine#concat",
    "name": "concat",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a new polyLine as a result of concatenating the 2 polyLines",
    "memberof": "<anonymous>~PolyLine",
    "params": [
      {
        "type": {
          "names": [
            "PolyLine"
          ]
        },
        "description": "The other operand",
        "name": "that"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "True if the resulting polyLine should be closed",
        "name": "closed"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "PolyLine"
          ]
        },
        "description": "The new polyLine"
      }
    ],
    "meta": {
      "lineno": 190,
      "filename": "PolyLine.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 971
  },
  {
    "id": "<anonymous>~Surface#rebuild",
    "longname": "<anonymous>~Surface#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data",
    "memberof": "<anonymous>~Surface",
    "returns": [
      {
        "type": {
          "names": [
            "Surface"
          ]
        },
        "description": "Self for chaining"
      }
    ],
    "meta": {
      "lineno": 37,
      "filename": "Surface.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 977
  },
  {
    "id": "<anonymous>~TextComponent#setFont",
    "longname": "<anonymous>~TextComponent#setFont",
    "name": "setFont",
    "scope": "instance",
    "kind": "function",
    "description": "Set the font of this component",
    "memberof": "<anonymous>~TextComponent",
    "params": [
      {
        "description": "The font loaded through opentype.js",
        "name": "font"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TextComponent"
          ]
        },
        "description": "Returns self"
      }
    ],
    "meta": {
      "lineno": 46,
      "filename": "TextComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 981
  },
  {
    "id": "<anonymous>~TextComponent#setText",
    "longname": "<anonymous>~TextComponent#setText",
    "name": "setText",
    "scope": "instance",
    "kind": "function",
    "description": "Set the text to generate the mesh for; recomputes the mesh",
    "memberof": "<anonymous>~TextComponent",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 4,
        "description": "Extrusion amount",
        "name": "options.extrusion"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 48,
        "name": "options.fontSize"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Lower values result in a more detailed mesh",
        "name": "options.stepLength"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TextComponent"
          ]
        },
        "description": "Returns self"
      }
    ],
    "meta": {
      "lineno": 60,
      "filename": "TextComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 982
  },
  {
    "id": "<anonymous>~TextComponentHandler#update",
    "longname": "<anonymous>~TextComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine textComponent object based on the config.",
    "memberof": "<anonymous>~TextComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 59,
      "filename": "TextComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 987
  },
  {
    "id": "<anonymous>~Triangle#rebuild",
    "longname": "<anonymous>~Triangle#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~Triangle",
    "returns": [
      {
        "type": {
          "names": [
            "Triangle"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 31,
      "filename": "Triangle.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 1004
  },
  {
    "id": "<anonymous>~CrunchLoader#dxtToRgb565",
    "longname": "<anonymous>~CrunchLoader#dxtToRgb565",
    "name": "dxtToRgb565",
    "scope": "instance",
    "kind": "function",
    "description": "Transcodes DXT into RGB565.\nOptimizations:\n1. Use integer math to compute c2 and c3 instead of floating point\n   math.  Specifically:\n     c2 = 5/8 * c0 + 3/8 * c1\n     c3 = 3/8 * c0 + 5/8 * c1\n   This is about a 40% performance improvement.  It also appears to\n   match what hardware DXT decoders do, as the colors produced\n   by this integer math match what hardware produces, while the\n   floating point in dxtToRgb565Unoptimized() produce slightly\n   different colors (for one GPU this was tested on).\n2. Unroll the inner loop.  Another ~10% improvement.\n3. Compute r0, g0, b0, r1, g1, b1 only once instead of twice.\n   Another 10% improvement.\n4. Use a Uint16Array instead of a Uint8Array.  Another 10% improvement.",
    "memberof": "<anonymous>~CrunchLoader",
    "params": [
      {
        "type": {
          "names": [
            "Uint16Array"
          ]
        },
        "description": "The src DXT bits as a Uint16Array.",
        "name": "src"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "srcByteOffset"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "height"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Uint16Array"
          ]
        },
        "description": "dst"
      }
    ],
    "author": [
      "Evan Parker"
    ],
    "meta": {
      "lineno": 175,
      "filename": "CrunchLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/crunch"
    },
    "order": 1006
  },
  {
    "id": "<anonymous>~DynamicLoader#preload",
    "longname": "<anonymous>~DynamicLoader#preload",
    "name": "preload",
    "scope": "instance",
    "kind": "function",
    "description": "Load configs into the loader cache without loading anything into the engine.\nSubsequent calls to load and update will draw configs from the prefilled cache.",
    "memberof": "<anonymous>~DynamicLoader",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Configs object. Keys should be refs, and values are the config objects. If a config is null,\nthe loader will search for the appropriate config in the loader's internal cache.",
        "name": "configs"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If true, possible previous cache will be cleared. Otherwise the existing cache is extended.",
        "name": "clear"
      }
    ],
    "meta": {
      "lineno": 80,
      "filename": "DynamicLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders"
    },
    "order": 1015
  },
  {
    "id": "<anonymous>~DynamicLoader#clear",
    "longname": "<anonymous>~DynamicLoader#clear",
    "name": "clear",
    "scope": "instance",
    "kind": "function",
    "description": "Clears the cache of all the handlers. Also clears the engine.",
    "memberof": "<anonymous>~DynamicLoader",
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Promise resolves when handlers are cleared."
      }
    ],
    "meta": {
      "lineno": 88,
      "filename": "DynamicLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders"
    },
    "order": 1016
  },
  {
    "id": "<anonymous>~DynamicLoader#load",
    "longname": "<anonymous>~DynamicLoader#load",
    "name": "load",
    "scope": "instance",
    "kind": "function",
    "description": "Load an object with the specified path into the engine. The object can be of any\ntype, what loading does is determined by the ref type and the\nregistered {@link ConfigHandler}.",
    "memberof": "<anonymous>~DynamicLoader",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Ref of object to load.",
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "Function called while loading the world. Provides the arguments \"handled\" and \"total\"\nArguments handled and total are both integer numbers and represent the loaded elements so far as well as the total elements.",
        "name": "options.progressCallback"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Load the binary data as soon as the reference is loaded.",
        "name": "options.preloadBinaries"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Ignore cache, i.e. always load files fresh from the server.",
        "name": "options.noCache"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "The promise is resolved when the object is loaded into the world. The parameter is an object\nmapping all loaded refs to their configuration, like so: <code>{sceneRef: sceneConfig, entity1Ref: entityConfig...}</code>."
      }
    ],
    "meta": {
      "lineno": 126,
      "filename": "DynamicLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders"
    },
    "order": 1017
  },
  {
    "id": "<anonymous>~DynamicLoader#update",
    "longname": "<anonymous>~DynamicLoader#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update an object in the world with an updated config. The object can be of any\ntype, updating behavior is determined by the registered {ConfigHandler}.",
    "memberof": "<anonymous>~DynamicLoader",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Ref of object to update.",
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "New configuration (formatted according to data model).\nIf omitted, works the same as {DynamicLoader.load}.",
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Ignore cache, i.e. always load files fresh from the server.",
        "name": "options.noCache"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "The promise is resolved when the object is updated, with the config data as argument."
      }
    ],
    "meta": {
      "lineno": 147,
      "filename": "DynamicLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders"
    },
    "order": 1018
  },
  {
    "id": "<anonymous>~CameraComponentHandler#update",
    "longname": "<anonymous>~CameraComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine cameracomponent object based on the config.",
    "memberof": "<anonymous>~CameraComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 82,
      "filename": "CameraComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1032
  },
  {
    "id": "<anonymous>~ComponentHandler#update",
    "longname": "<anonymous>~ComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine component object based on the config. Should be overridden in subclasses.\nThis method is called by #{EntityHandler} to load new component configs into the engine.",
    "memberof": "<anonymous>~ComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the created component when loading is done."
      }
    ],
    "meta": {
      "lineno": 75,
      "filename": "ComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1039
  },
  {
    "id": "<anonymous>~ConfigHandler#update",
    "longname": "<anonymous>~ConfigHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine object based on the config. Should be overridden in subclasses.\nThis method is called by #{DynamicLoader} to load new resources into the engine.",
    "memberof": "<anonymous>~ConfigHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The ref of this config",
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the created object when loading is done."
      }
    ],
    "meta": {
      "lineno": 121,
      "filename": "ConfigHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1048
  },
  {
    "id": "<anonymous>~Dom3dComponentHandler#update",
    "longname": "<anonymous>~Dom3dComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine cameracomponent object based on the config.",
    "memberof": "<anonymous>~Dom3dComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 63,
      "filename": "Dom3dComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1055
  },
  {
    "id": "<anonymous>~EntityHandler#_update",
    "longname": "<anonymous>~EntityHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Adds/updates/removes an entity",
    "memberof": "<anonymous>~EntityHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated entity or null if removed"
      }
    ],
    "meta": {
      "lineno": 96,
      "filename": "EntityHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1060
  },
  {
    "id": "<anonymous>~EntityHandler#_getHandler",
    "longname": "<anonymous>~EntityHandler#_getHandler",
    "name": "_getHandler",
    "scope": "instance",
    "kind": "function",
    "description": "Gets the handler for a component type or creates a new one if necessary",
    "memberof": "<anonymous>~EntityHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ComponentHandler"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 179,
      "filename": "EntityHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1063
  },
  {
    "id": "<anonymous>~EnvironmentHandler#_update",
    "longname": "<anonymous>~EnvironmentHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Adds/updates/removes an environment",
    "memberof": "<anonymous>~EnvironmentHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated environment or null if removed"
      }
    ],
    "meta": {
      "lineno": 96,
      "filename": "EnvironmentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1065
  },
  {
    "id": "<anonymous>~HtmlComponentHandler#update",
    "longname": "<anonymous>~HtmlComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine cameracomponent object based on the config.",
    "memberof": "<anonymous>~HtmlComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 63,
      "filename": "HtmlComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1070
  },
  {
    "id": "<anonymous>~LightComponentHandler#update",
    "longname": "<anonymous>~LightComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine cameracomponent object based on the config.",
    "memberof": "<anonymous>~LightComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 103,
      "filename": "LightComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1075
  },
  {
    "id": "<anonymous>~MaterialHandler#_update",
    "longname": "<anonymous>~MaterialHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Adds/updates/removes a a material",
    "memberof": "<anonymous>~MaterialHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated material or null if removed"
      }
    ],
    "meta": {
      "lineno": 98,
      "filename": "MaterialHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1080
  },
  {
    "id": "<anonymous>~MeshDataComponentHandler#_remove",
    "longname": "<anonymous>~MeshDataComponentHandler#_remove",
    "name": "_remove",
    "scope": "instance",
    "kind": "function",
    "description": "Removes the meshdata component",
    "memberof": "<anonymous>~MeshDataComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      }
    ],
    "meta": {
      "lineno": 62,
      "filename": "MeshDataComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1085
  },
  {
    "id": "<anonymous>~MeshDataComponentHandler#update",
    "longname": "<anonymous>~MeshDataComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine meshdatacomponent object based on the config.",
    "memberof": "<anonymous>~MeshDataComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 77,
      "filename": "MeshDataComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1086
  },
  {
    "id": "<anonymous>~MeshDataHandler#_remove",
    "longname": "<anonymous>~MeshDataHandler#_remove",
    "name": "_remove",
    "scope": "instance",
    "kind": "function",
    "description": "Removes the meshdata from the objects config",
    "memberof": "<anonymous>~MeshDataHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      }
    ],
    "meta": {
      "lineno": 40,
      "filename": "MeshDataHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1088
  },
  {
    "id": "<anonymous>~MeshDataHandler#_update",
    "longname": "<anonymous>~MeshDataHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a MeshData once, then reuses that one without updating",
    "memberof": "<anonymous>~MeshDataHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the Meshdata or null if removed"
      }
    ],
    "meta": {
      "lineno": 55,
      "filename": "MeshDataHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1089
  },
  {
    "id": "<anonymous>~MeshRendererComponentHandler#update",
    "longname": "<anonymous>~MeshRendererComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine meshrenderercomponent object based on the config.",
    "memberof": "<anonymous>~MeshRendererComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 71,
      "filename": "MeshRendererComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1096
  },
  {
    "id": "<anonymous>~ProjectHandler#_remove",
    "longname": "<anonymous>~ProjectHandler#_remove",
    "name": "_remove",
    "scope": "instance",
    "kind": "function",
    "description": "Removes project from engine, i e removes mainScene, i e removes scene entities from world",
    "memberof": "<anonymous>~ProjectHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref}"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "meta": {
      "lineno": 39,
      "filename": "ProjectHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1098
  },
  {
    "id": "<anonymous>~ProjectHandler#_update",
    "longname": "<anonymous>~ProjectHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Creates/updates/removes a project",
    "memberof": "<anonymous>~ProjectHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated scene or null if removed"
      }
    ],
    "meta": {
      "lineno": 64,
      "filename": "ProjectHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1100
  },
  {
    "id": "<anonymous>~SceneHandler#_remove",
    "longname": "<anonymous>~SceneHandler#_remove",
    "name": "_remove",
    "scope": "instance",
    "kind": "function",
    "description": "Removes the scene, i e removes all entities in scene from engine world",
    "memberof": "<anonymous>~SceneHandler",
    "params": [
      {
        "type": {
          "names": [
            "ref"
          ]
        },
        "name": "ref"
      }
    ],
    "meta": {
      "lineno": 37,
      "filename": "SceneHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1103
  },
  {
    "id": "<anonymous>~SceneHandler#_update",
    "longname": "<anonymous>~SceneHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Creates/updates/removes a scene",
    "memberof": "<anonymous>~SceneHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated scene or null if removed"
      }
    ],
    "meta": {
      "lineno": 73,
      "filename": "SceneHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1105
  },
  {
    "id": "<anonymous>~SceneHandler#_handleEntities",
    "longname": "<anonymous>~SceneHandler#_handleEntities",
    "name": "_handleEntities",
    "scope": "instance",
    "kind": "function",
    "description": "Adding and removing entities to the engine and thereby the scene",
    "memberof": "<anonymous>~SceneHandler",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "scene"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "meta": {
      "lineno": 111,
      "filename": "SceneHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1106
  },
  {
    "id": "<anonymous>~SceneHandler#_handlePosteffects",
    "longname": "<anonymous>~SceneHandler#_handlePosteffects",
    "name": "_handlePosteffects",
    "scope": "instance",
    "kind": "function",
    "description": "Handling posteffects",
    "memberof": "<anonymous>~SceneHandler",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "scene"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "meta": {
      "lineno": 164,
      "filename": "SceneHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1107
  },
  {
    "id": "<anonymous>~SceneHandler#_handleEnvironment",
    "longname": "<anonymous>~SceneHandler#_handleEnvironment",
    "name": "_handleEnvironment",
    "scope": "instance",
    "kind": "function",
    "description": "Handling environment, to be implemented",
    "memberof": "<anonymous>~SceneHandler",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "scene"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "meta": {
      "lineno": 174,
      "filename": "SceneHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1108
  },
  {
    "id": "<anonymous>~ShaderHandler#_update",
    "longname": "<anonymous>~ShaderHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Adds/updates/removes a shader\nCurrently it is not possible to update a shader, so we create a new one every time",
    "memberof": "<anonymous>~ShaderHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated shader or null if removed"
      }
    ],
    "meta": {
      "lineno": 58,
      "filename": "ShaderHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1112
  },
  {
    "id": "<anonymous>~SoundComponentHandler#_prepare",
    "longname": "<anonymous>~SoundComponentHandler#_prepare",
    "name": "_prepare",
    "scope": "instance",
    "kind": "function",
    "description": "Prepares the config",
    "memberof": "<anonymous>~SoundComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      }
    ],
    "meta": {
      "lineno": 55,
      "filename": "SoundComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1116
  },
  {
    "id": "<anonymous>~SoundComponentHandler#update",
    "longname": "<anonymous>~SoundComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine sound component object based on the config.",
    "memberof": "<anonymous>~SoundComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 78,
      "filename": "SoundComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1118
  },
  {
    "id": "<anonymous>~SoundHandler#_update",
    "longname": "<anonymous>~SoundHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Adds/updates/removes a sound",
    "memberof": "<anonymous>~SoundHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated sound or null if removed"
      }
    ],
    "meta": {
      "lineno": 98,
      "filename": "SoundHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1123
  },
  {
    "id": "<anonymous>~TextureHandler#_update",
    "longname": "<anonymous>~TextureHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Adds/updates/removes a texture",
    "memberof": "<anonymous>~TextureHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated texture or null if removed"
      }
    ],
    "meta": {
      "lineno": 217,
      "filename": "TextureHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1128
  },
  {
    "id": "<anonymous>~TransformComponentHandler#update",
    "longname": "<anonymous>~TransformComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine transform component object based on the config.",
    "memberof": "<anonymous>~TransformComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 84,
      "filename": "TransformComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1134
  },
  {
    "id": "<anonymous>~TgaLoader#load",
    "longname": "<anonymous>~TgaLoader#load",
    "name": "load",
    "scope": "instance",
    "kind": "function",
    "description": "Load and parse a TGA file",
    "memberof": "<anonymous>~TgaLoader",
    "meta": {
      "lineno": 40,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1136
  },
  {
    "id": "<anonymous>~TgaLoader#loadData",
    "longname": "<anonymous>~TgaLoader#loadData",
    "name": "loadData",
    "scope": "instance",
    "kind": "function",
    "description": "Parse TGA data",
    "memberof": "<anonymous>~TgaLoader",
    "params": [
      {
        "type": {
          "names": [
            "Uint8Array"
          ]
        },
        "description": "Binary data of the TGA file",
        "name": "data"
      }
    ],
    "meta": {
      "lineno": 54,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1137
  },
  {
    "id": "<anonymous>~TgaLoader#checkHeader",
    "longname": "<anonymous>~TgaLoader#checkHeader",
    "name": "checkHeader",
    "scope": "instance",
    "kind": "function",
    "description": "Check the header of TGA file to detect errors",
    "memberof": "<anonymous>~TgaLoader",
    "exceptions": [
      {
        "description": "Error"
      }
    ],
    "meta": {
      "lineno": 120,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1138
  },
  {
    "id": "<anonymous>~TgaLoader#parse",
    "longname": "<anonymous>~TgaLoader#parse",
    "name": "parse",
    "scope": "instance",
    "kind": "function",
    "description": "Parse data from TGA file",
    "memberof": "<anonymous>~TgaLoader",
    "params": [
      {
        "type": {
          "names": [
            "Uint8Array"
          ]
        },
        "description": "Binary data of the TGA file",
        "name": "data"
      }
    ],
    "meta": {
      "lineno": 165,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1139
  },
  {
    "id": "<anonymous>~TgaLoader#getImageData",
    "longname": "<anonymous>~TgaLoader#getImageData",
    "name": "getImageData",
    "scope": "instance",
    "kind": "function",
    "description": "Return a ImageData object from a TGA file",
    "memberof": "<anonymous>~TgaLoader",
    "params": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        },
        "description": "Optional ImageData to work with",
        "name": "imageData"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 239,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1140
  },
  {
    "id": "<anonymous>~TgaLoader#getCanvas",
    "longname": "<anonymous>~TgaLoader#getCanvas",
    "name": "getCanvas",
    "scope": "instance",
    "kind": "function",
    "description": "Return a canvas with the TGA render on it",
    "memberof": "<anonymous>~TgaLoader",
    "returns": [
      {
        "type": {
          "names": [
            "canvas"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 316,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1141
  },
  {
    "id": "<anonymous>~TgaLoader#getDataURL",
    "longname": "<anonymous>~TgaLoader#getDataURL",
    "name": "getDataURL",
    "scope": "instance",
    "kind": "function",
    "description": "Return a dataURI of the TGA file",
    "memberof": "<anonymous>~TgaLoader",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Optional image content-type to output (default: image/png)",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "canvas"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 332,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1142
  },
  {
    "id": "<anonymous>~TgaLoader#getImageData8bits",
    "longname": "<anonymous>~TgaLoader#getImageData8bits",
    "name": "getImageData8bits",
    "scope": "instance",
    "kind": "function",
    "description": "Return a ImageData object from a TGA file (8bits)",
    "memberof": "<anonymous>~TgaLoader",
    "params": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        },
        "description": "ImageData to bind",
        "name": "imageData"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at y pixel.",
        "name": "y_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at x pixel.",
        "name": "x_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment y pixel each time.",
        "name": "y_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel y.",
        "name": "y_end"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment x pixel each time.",
        "name": "x_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel x.",
        "name": "x_end"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 348,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1143
  },
  {
    "id": "<anonymous>~TgaLoader#getImageData16bits",
    "longname": "<anonymous>~TgaLoader#getImageData16bits",
    "name": "getImageData16bits",
    "scope": "instance",
    "kind": "function",
    "description": "Return a ImageData object from a TGA file (16bits)",
    "memberof": "<anonymous>~TgaLoader",
    "params": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        },
        "description": "ImageData to bind",
        "name": "imageData"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at y pixel.",
        "name": "y_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at x pixel.",
        "name": "x_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment y pixel each time.",
        "name": "y_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel y.",
        "name": "y_end"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment x pixel each time.",
        "name": "x_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel x.",
        "name": "x_end"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 380,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1144
  },
  {
    "id": "<anonymous>~TgaLoader#getImageData24bits",
    "longname": "<anonymous>~TgaLoader#getImageData24bits",
    "name": "getImageData24bits",
    "scope": "instance",
    "kind": "function",
    "description": "Return a ImageData object from a TGA file (24bits)",
    "memberof": "<anonymous>~TgaLoader",
    "params": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        },
        "description": "ImageData to bind",
        "name": "imageData"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at y pixel.",
        "name": "y_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at x pixel.",
        "name": "x_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment y pixel each time.",
        "name": "y_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel y.",
        "name": "y_end"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment x pixel each time.",
        "name": "x_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel x.",
        "name": "x_end"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 411,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1145
  },
  {
    "id": "<anonymous>~TgaLoader#getImageData32bits",
    "longname": "<anonymous>~TgaLoader#getImageData32bits",
    "name": "getImageData32bits",
    "scope": "instance",
    "kind": "function",
    "description": "Return a ImageData object from a TGA file (32bits)",
    "memberof": "<anonymous>~TgaLoader",
    "params": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        },
        "description": "ImageData to bind",
        "name": "imageData"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at y pixel.",
        "name": "y_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at x pixel.",
        "name": "x_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment y pixel each time.",
        "name": "y_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel y.",
        "name": "y_end"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment x pixel each time.",
        "name": "x_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel x.",
        "name": "x_end"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 441,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1146
  },
  {
    "id": "<anonymous>~TgaLoader#getImageDataGrey8bits",
    "longname": "<anonymous>~TgaLoader#getImageDataGrey8bits",
    "name": "getImageDataGrey8bits",
    "scope": "instance",
    "kind": "function",
    "description": "Return a ImageData object from a TGA file (8bits grey)",
    "memberof": "<anonymous>~TgaLoader",
    "params": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        },
        "description": "ImageData to bind",
        "name": "imageData"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at y pixel.",
        "name": "y_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at x pixel.",
        "name": "x_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment y pixel each time.",
        "name": "y_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel y.",
        "name": "y_end"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment x pixel each time.",
        "name": "x_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel x.",
        "name": "x_end"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 471,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1147
  },
  {
    "id": "<anonymous>~TgaLoader#getImageDataGrey16bits",
    "longname": "<anonymous>~TgaLoader#getImageDataGrey16bits",
    "name": "getImageDataGrey16bits",
    "scope": "instance",
    "kind": "function",
    "description": "Return a ImageData object from a TGA file (16bits grey)",
    "memberof": "<anonymous>~TgaLoader",
    "params": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        },
        "description": "ImageData to bind",
        "name": "imageData"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at y pixel.",
        "name": "y_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "start at x pixel.",
        "name": "x_start"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment y pixel each time.",
        "name": "y_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel y.",
        "name": "y_end"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "increment x pixel each time.",
        "name": "x_step"
      },
      {
        "type": {
          "names": [
            "int"
          ]
        },
        "description": "stop at pixel x.",
        "name": "x_end"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "imageData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 502,
      "filename": "TgaLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/tga"
    },
    "order": 1148
  },
  {
    "id": "<anonymous>~LogicLayer#addInterfaceInstance",
    "longname": "<anonymous>~LogicLayer#addInterfaceInstance",
    "name": "addInterfaceInstance",
    "scope": "instance",
    "kind": "function",
    "description": "Creates an active instance (node) of logic described by iface parameter, tied to an instance of some other object.\nThe instance is expected to implement onPropertyWrite and onEvent but can be of any class. The instance descriptor\nreturned can then be used to make connections through connectEndPoints",
    "memberof": "<anonymous>~LogicLayer",
    "params": [
      {
        "description": "The interface descriptor (LogicInterface) for the object 'instance'",
        "name": "iface"
      },
      {
        "description": "The object that exposes the logic interface defined by iface.",
        "name": "instance"
      },
      {
        "description": "The name (ref) for adding connections by name. Supply null for automatically generated name.",
        "name": "name"
      },
      {
        "description": "If the instance passed wants processLogic per-frame calls",
        "name": "wantsProcessCall"
      }
    ],
    "returns": [
      {
        "description": "An instance descriptor"
      }
    ],
    "meta": {
      "lineno": 44,
      "filename": "LogicLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1153
  },
  {
    "id": "<anonymous>~LogicLayer#forEachLogicObject",
    "longname": "<anonymous>~LogicLayer#forEachLogicObject",
    "name": "forEachLogicObject",
    "scope": "instance",
    "kind": "function",
    "description": "For all logic objects (i.e. those who added logicInstances and passed themselves along)",
    "memberof": "<anonymous>~LogicLayer",
    "params": [
      {
        "description": "Function to call for every object.",
        "name": "f"
      }
    ],
    "meta": {
      "lineno": 351,
      "filename": "LogicLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1159
  },
  {
    "id": "<anonymous>~LogicLayer#connectObjectsWithLogic",
    "longname": "<anonymous>~LogicLayer#connectObjectsWithLogic",
    "name": "connectObjectsWithLogic",
    "scope": "instance",
    "kind": "function",
    "description": "For all objects that follow the convention of having an logicInstance property for their connections\n(components, logic nodes), this is useful for less verbose connection code. It looks up the logicInstance\nin the objects passed in and connects their endpoints.",
    "memberof": "<anonymous>~LogicLayer",
    "meta": {
      "lineno": 365,
      "filename": "LogicLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1160
  },
  {
    "id": "<anonymous>~LogicLayer#connectEndpoints",
    "longname": "<anonymous>~LogicLayer#connectEndpoints",
    "name": "connectEndpoints",
    "scope": "instance",
    "kind": "function",
    "description": "Connects two objects through their instance descriptors and port names.",
    "memberof": "<anonymous>~LogicLayer",
    "meta": {
      "lineno": 372,
      "filename": "LogicLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1161
  },
  {
    "id": "<anonymous>~LogicNode#addToLogicLayer",
    "longname": "<anonymous>~LogicNode#addToLogicLayer",
    "name": "addToLogicLayer",
    "scope": "instance",
    "kind": "function",
    "description": "Add the logic node to the world's logic layer. This is a necessary step for allowing\nconnections. This should be called by logic node implementations.",
    "memberof": "<anonymous>~LogicNode",
    "params": [
      {
        "type": {
          "names": [
            "world"
          ]
        },
        "description": "to add it to",
        "name": "World"
      }
    ],
    "meta": {
      "lineno": 38,
      "filename": "LogicNode.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1163
  },
  {
    "id": "<anonymous>~LogicNode#onConfigure",
    "longname": "<anonymous>~LogicNode#onConfigure",
    "name": "onConfigure",
    "scope": "instance",
    "kind": "function",
    "description": "Called after getting new configuration data; before getting added to world. Override\nthis function and not configure.",
    "memberof": "<anonymous>~LogicNode",
    "params": [
      {
        "description": "The new configuration data.",
        "name": "newConfig"
      }
    ],
    "meta": {
      "lineno": 70,
      "filename": "LogicNode.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1164
  },
  {
    "id": "<anonymous>~LogicNode#onSystemStarted",
    "longname": "<anonymous>~LogicNode#onSystemStarted",
    "name": "onSystemStarted",
    "scope": "instance",
    "kind": "function",
    "description": "When logic system is started.",
    "memberof": "<anonymous>~LogicNode",
    "meta": {
      "lineno": 75,
      "filename": "LogicNode.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1165
  },
  {
    "id": "<anonymous>~LogicNode#onSystemStopped",
    "longname": "<anonymous>~LogicNode#onSystemStopped",
    "name": "onSystemStopped",
    "scope": "instance",
    "kind": "function",
    "description": "Called when system is stopped.",
    "memberof": "<anonymous>~LogicNode",
    "params": [
      {
        "description": "If true, world has been paused. Otherwise stopped & reset.",
        "name": "stopForPause"
      }
    ],
    "meta": {
      "lineno": 81,
      "filename": "LogicNode.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1166
  },
  {
    "id": "<anonymous>~LogicNode#onInputChanged",
    "longname": "<anonymous>~LogicNode#onInputChanged",
    "name": "onInputChanged",
    "scope": "instance",
    "kind": "function",
    "description": "Called when node receives an input value.",
    "memberof": "<anonymous>~LogicNode",
    "params": [
      {
        "description": "Instance description",
        "name": "instDesc"
      },
      {
        "description": "Port ID",
        "name": "port"
      },
      {
        "description": "New value on that particular port.",
        "name": "nv"
      }
    ],
    "meta": {
      "lineno": 89,
      "filename": "LogicNode.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1167
  },
  {
    "id": "<anonymous>~LogicSystem#resolveEntityRef",
    "longname": "<anonymous>~LogicSystem#resolveEntityRef",
    "name": "resolveEntityRef",
    "scope": "instance",
    "kind": "function",
    "description": "Called when proxy entities want to resolve their entities. Called from LogicLayer.",
    "memberof": "<anonymous>~LogicSystem",
    "meta": {
      "lineno": 55,
      "filename": "LogicSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack"
    },
    "order": 1199
  },
  {
    "id": "<anonymous>~Matrix#checkIntegrity",
    "longname": "<anonymous>~Matrix#checkIntegrity",
    "name": "checkIntegrity",
    "scope": "instance",
    "kind": "function",
    "description": "Throws an error if any of the matrix's components are NaN",
    "memberof": "<anonymous>~Matrix",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 70,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1233
  },
  {
    "id": "<anonymous>~Matrix2#add",
    "longname": "<anonymous>~Matrix2#add",
    "name": "add",
    "scope": "instance",
    "kind": "function",
    "description": "Performs a component-wise addition.",
    "memberof": "<anonymous>~Matrix2",
    "params": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 53,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1260
  },
  {
    "id": "<anonymous>~Matrix2#sub",
    "longname": "<anonymous>~Matrix2#sub",
    "name": "sub",
    "scope": "instance",
    "kind": "function",
    "description": "Performs a component-wise subtraction.",
    "memberof": "<anonymous>~Matrix2",
    "params": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 70,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1261
  },
  {
    "id": "<anonymous>~Matrix2#scale",
    "longname": "<anonymous>~Matrix2#scale",
    "name": "scale",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies this matrix with a scalar",
    "memberof": "<anonymous>~Matrix2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "scalar"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 87,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1262
  },
  {
    "id": "<anonymous>~Matrix2#mul",
    "longname": "<anonymous>~Matrix2#mul",
    "name": "mul",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies this matrix with another matrix",
    "memberof": "<anonymous>~Matrix2",
    "params": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Matrix on the left-hand side",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 103,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1263
  },
  {
    "id": "<anonymous>~Matrix2#mul2",
    "longname": "<anonymous>~Matrix2#mul2",
    "name": "mul2",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies two matrices and stores the result in this matrix",
    "memberof": "<anonymous>~Matrix2",
    "params": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Matrix on the left-hand side",
        "name": "lhs"
      },
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Matrix on the right-hand side",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 129,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1264
  },
  {
    "id": "<anonymous>~Matrix2#transpose",
    "longname": "<anonymous>~Matrix2#transpose",
    "name": "transpose",
    "scope": "instance",
    "kind": "function",
    "description": "Transposes a matrix (exchanges rows and columns).",
    "memberof": "<anonymous>~Matrix2",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 153,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1265
  },
  {
    "id": "<anonymous>~Matrix2#invert",
    "longname": "<anonymous>~Matrix2#invert",
    "name": "invert",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the analytical inverse and stores the result locally.",
    "memberof": "<anonymous>~Matrix2",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 198,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1267
  },
  {
    "id": "<anonymous>~Matrix2#isOrthogonal",
    "longname": "<anonymous>~Matrix2#isOrthogonal",
    "name": "isOrthogonal",
    "scope": "instance",
    "kind": "function",
    "description": "Tests if the matrix is orthogonal.",
    "memberof": "<anonymous>~Matrix2",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if orthogonal."
      }
    ],
    "meta": {
      "lineno": 206,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1268
  },
  {
    "id": "<anonymous>~Matrix2#isNormal",
    "longname": "<anonymous>~Matrix2#isNormal",
    "name": "isNormal",
    "scope": "instance",
    "kind": "function",
    "description": "Tests if the matrix is normal.",
    "memberof": "<anonymous>~Matrix2",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if normal."
      }
    ],
    "meta": {
      "lineno": 222,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1269
  },
  {
    "id": "<anonymous>~Matrix2#isOrthonormal",
    "longname": "<anonymous>~Matrix2#isOrthonormal",
    "name": "isOrthonormal",
    "scope": "instance",
    "kind": "function",
    "description": "Tests if the matrix is orthonormal.",
    "memberof": "<anonymous>~Matrix2",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if orthonormal."
      }
    ],
    "meta": {
      "lineno": 245,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1270
  },
  {
    "id": "<anonymous>~Matrix2#determinant",
    "longname": "<anonymous>~Matrix2#determinant",
    "name": "determinant",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the determinant of the matrix.",
    "memberof": "<anonymous>~Matrix2",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Determinant of matrix."
      }
    ],
    "meta": {
      "lineno": 253,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1271
  },
  {
    "id": "<anonymous>~Matrix2#setIdentity",
    "longname": "<anonymous>~Matrix2#setIdentity",
    "name": "setIdentity",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the matrix to identity.",
    "memberof": "<anonymous>~Matrix2",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 261,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1272
  },
  {
    "id": "<anonymous>~Matrix2#equals",
    "longname": "<anonymous>~Matrix2#equals",
    "name": "equals",
    "scope": "instance",
    "kind": "function",
    "description": "Compares two matrices for approximate equality",
    "memberof": "<anonymous>~Matrix2",
    "params": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "The matrix to compare against",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 271,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1273
  },
  {
    "id": "<anonymous>~Matrix2#copy",
    "longname": "<anonymous>~Matrix2#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "function",
    "description": "Copies component values from another matrix to this matrix",
    "memberof": "<anonymous>~Matrix2",
    "params": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Source matrix",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 286,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1274
  },
  {
    "id": "<anonymous>~Matrix2#setArray",
    "longname": "<anonymous>~Matrix2#setArray",
    "name": "setArray",
    "scope": "instance",
    "kind": "function",
    "description": "Sets matrix values from an array.",
    "memberof": "<anonymous>~Matrix2",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "Array source",
        "name": "rhsData"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 303,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1275
  },
  {
    "id": "<anonymous>~Matrix2#clone",
    "longname": "<anonymous>~Matrix2#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a new matrix with the same values as the existing one",
    "memberof": "<anonymous>~Matrix2",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "The new matrix"
      }
    ],
    "meta": {
      "lineno": 325,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1277
  },
  {
    "id": "<anonymous>~Matrix3#add",
    "longname": "<anonymous>~Matrix3#add",
    "name": "add",
    "scope": "instance",
    "kind": "function",
    "description": "Performs a component-wise addition.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 74,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1289
  },
  {
    "id": "<anonymous>~Matrix3#sub",
    "longname": "<anonymous>~Matrix3#sub",
    "name": "sub",
    "scope": "instance",
    "kind": "function",
    "description": "Performs a component-wise subtraction.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 96,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1290
  },
  {
    "id": "<anonymous>~Matrix3#scale",
    "longname": "<anonymous>~Matrix3#scale",
    "name": "scale",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies this matrix with a scalar",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "scalar"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 118,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1291
  },
  {
    "id": "<anonymous>~Matrix3#mul",
    "longname": "<anonymous>~Matrix3#mul",
    "name": "mul",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies this matrix with another matrix",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Matrix on the left-hand side",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 139,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1292
  },
  {
    "id": "<anonymous>~Matrix3#mul2",
    "longname": "<anonymous>~Matrix3#mul2",
    "name": "mul2",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies two matrices and stores the result in this matrix",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Matrix on the left-hand side",
        "name": "lhs"
      },
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Matrix on the right-hand side",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 172,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1293
  },
  {
    "id": "<anonymous>~Matrix3#transpose",
    "longname": "<anonymous>~Matrix3#transpose",
    "name": "transpose",
    "scope": "instance",
    "kind": "function",
    "description": "Transposes a matrix (exchanges rows and columns) and stores the result in a separate matrix.",
    "memberof": "<anonymous>~Matrix3",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "A new matrix if the target matrix is omitted, else the target matrix."
      }
    ],
    "meta": {
      "lineno": 202,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1294
  },
  {
    "id": "<anonymous>~Matrix3#invert",
    "longname": "<anonymous>~Matrix3#invert",
    "name": "invert",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the analytical inverse and stores the result locally.",
    "memberof": "<anonymous>~Matrix3",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 263,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1296
  },
  {
    "id": "<anonymous>~Matrix3#isOrthogonal",
    "longname": "<anonymous>~Matrix3#isOrthogonal",
    "name": "isOrthogonal",
    "scope": "instance",
    "kind": "function",
    "description": "Tests if the matrix is orthogonal.",
    "memberof": "<anonymous>~Matrix3",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "True if orthogonal."
      }
    ],
    "meta": {
      "lineno": 271,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1297
  },
  {
    "id": "<anonymous>~Matrix3#isNormal",
    "longname": "<anonymous>~Matrix3#isNormal",
    "name": "isNormal",
    "scope": "instance",
    "kind": "function",
    "description": "Tests if the matrix is normal.",
    "memberof": "<anonymous>~Matrix3",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if normal."
      }
    ],
    "meta": {
      "lineno": 299,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1298
  },
  {
    "id": "<anonymous>~Matrix3#isOrthonormal",
    "longname": "<anonymous>~Matrix3#isOrthonormal",
    "name": "isOrthonormal",
    "scope": "instance",
    "kind": "function",
    "description": "Tests if the matrix is orthonormal.",
    "memberof": "<anonymous>~Matrix3",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if orthonormal."
      }
    ],
    "meta": {
      "lineno": 327,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1299
  },
  {
    "id": "<anonymous>~Matrix3#determinant",
    "longname": "<anonymous>~Matrix3#determinant",
    "name": "determinant",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the determinant of the matrix.",
    "memberof": "<anonymous>~Matrix3",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Determinant of matrix."
      }
    ],
    "meta": {
      "lineno": 335,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1300
  },
  {
    "id": "<anonymous>~Matrix3#setIdentity",
    "longname": "<anonymous>~Matrix3#setIdentity",
    "name": "setIdentity",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the matrix to identity: (1, 0, 0, 0, 1, 0, 0, 0, 1).",
    "memberof": "<anonymous>~Matrix3",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 346,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1301
  },
  {
    "id": "<anonymous>~Matrix3#multiplyDiagonalPost",
    "longname": "<anonymous>~Matrix3#multiplyDiagonalPost",
    "name": "multiplyDiagonalPost",
    "scope": "instance",
    "kind": "function",
    "description": "Post-multiplies the matrix (\"before\") with a scaling vector.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Vector on the right-hand side.",
        "name": "vec"
      },
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Storage matrix.",
        "name": "result"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Storage matrix."
      }
    ],
    "meta": {
      "lineno": 371,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1302
  },
  {
    "id": "<anonymous>~Matrix3#fromAngles",
    "longname": "<anonymous>~Matrix3#fromAngles",
    "name": "fromAngles",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the Matrix3 from rotational angles in radians.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Pitch (X axis) angle in radians.",
        "name": "pitch"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Yaw (Y axis) angle in radians.",
        "name": "yaw"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Roll (Z axis) angle in radians.",
        "name": "roll"
      }
    ],
    "examples": [
      "// sets the rotation to Math.PI (180 degrees) on the Y axis\nentity.transformComponent.transform.rotation.fromAngles(0, Math.PI, 0);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 401,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1303
  },
  {
    "id": "<anonymous>~Matrix3#rotateX",
    "longname": "<anonymous>~Matrix3#rotateX",
    "name": "rotateX",
    "scope": "instance",
    "kind": "function",
    "description": "Rotates a Matrix3 by the given angle in radians, around the X axis.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the angle in radians to rotate the Matrix3 by.",
        "name": "rad"
      },
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "optional": true,
        "description": "the target Matrix3 to store the result or 'this', if undefined.",
        "name": "store"
      }
    ],
    "examples": [
      "// rotates the entity on the X axis, by the amount of time per frame (tpf)\nentity.transformComponent.transform.rotation.rotateX(goo.world.tpf);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "store"
      }
    ],
    "meta": {
      "lineno": 433,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1304
  },
  {
    "id": "<anonymous>~Matrix3#rotateY",
    "longname": "<anonymous>~Matrix3#rotateY",
    "name": "rotateY",
    "scope": "instance",
    "kind": "function",
    "description": "Rotates a Matrix3 by the given angle in radians, around the Y axis.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the angle in radians to rotate the Matrix3 by.",
        "name": "rad"
      },
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "optional": true,
        "description": "the target Matrix3 to store the result or 'this', if undefined.",
        "name": "store"
      }
    ],
    "examples": [
      "// rotates the entity on the Y axis, by Math.PI * 0.5 (90 degrees)\nentity.transformComponent.transform.rotation.rotateY(Math.PI * 0.5);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "store"
      }
    ],
    "meta": {
      "lineno": 474,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1305
  },
  {
    "id": "<anonymous>~Matrix3#rotateZ",
    "longname": "<anonymous>~Matrix3#rotateZ",
    "name": "rotateZ",
    "scope": "instance",
    "kind": "function",
    "description": "Rotates a Matrix3 by the given angle in radians, around the Z axis.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the angle in radians to rotate the Matrix3 by.",
        "name": "rad"
      },
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "optional": true,
        "description": "the target Matrix3 to store the result or 'this', if undefined.",
        "name": "store"
      }
    ],
    "examples": [
      "// rotates the entity on the Z axis, by 3.14 (180 degrees)\nentity.transformComponent.transform.rotation.rotateZ(3.14);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "store"
      }
    ],
    "meta": {
      "lineno": 515,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1306
  },
  {
    "id": "<anonymous>~Matrix3#toAngles",
    "longname": "<anonymous>~Matrix3#toAngles",
    "name": "toAngles",
    "scope": "instance",
    "kind": "function",
    "description": "Converts the current Matrix3 to Euler rotation angles in radians: (X axis, Y axis, Z axis)",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "to store the computed angles in (or undefined to create a new one).",
        "name": "Vector3"
      }
    ],
    "examples": [
      "// Not passing in a Vector3 to store the result, one is created and returned\nvar rot = entity.transformComponent.transform.rotation.toAngles();\n\n// Passing in an existing Vector3 to store the result\nvar angles = new Vector3();\nentity.transformComponent.transform.rotation.toAngles(angles);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Result"
      }
    ],
    "meta": {
      "lineno": 558,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1307
  },
  {
    "id": "<anonymous>~Matrix3#fromAngleNormalAxis",
    "longname": "<anonymous>~Matrix3#fromAngleNormalAxis",
    "name": "fromAngleNormalAxis",
    "scope": "instance",
    "kind": "function",
    "description": "Sets this matrix to the rotation indicated by the given angle and a unit-length axis of rotation.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the angle to rotate (in radians).",
        "name": "angle"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "this for chaining"
      }
    ],
    "meta": {
      "lineno": 590,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1308
  },
  {
    "id": "<anonymous>~Matrix3#lookAt",
    "longname": "<anonymous>~Matrix3#lookAt",
    "name": "lookAt",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the Matrix3 to look in a specific direction.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Direction vector.",
        "name": "direction"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Up vector.",
        "name": "up"
      }
    ],
    "examples": [
      "// get the direction from the current entity to the 'other' entity\nvar direction = Vector3.sub(other.transformComponent.transform.translation, entity.transformComponent.transform.translation);\n// pass in the direction, and use Vector3.UNIT_Y as 'up'\nentity.lookAt(direction, Vector3.UNIT_Y);\n// update the transform component with the new rotation\nentity.transformComponent.setUpdated();"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 631,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1309
  },
  {
    "id": "<anonymous>~Matrix3#copyQuaternion",
    "longname": "<anonymous>~Matrix3#copyQuaternion",
    "name": "copyQuaternion",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the matrix from a quaternion.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Rotational quaternion.",
        "name": "quaternion"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 667,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1310
  },
  {
    "id": "<anonymous>~Matrix3#equals",
    "longname": "<anonymous>~Matrix3#equals",
    "name": "equals",
    "scope": "instance",
    "kind": "function",
    "description": "Compares two matrices for approximate equality",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "The matrix to compare against",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 676,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1311
  },
  {
    "id": "<anonymous>~Matrix3#copy",
    "longname": "<anonymous>~Matrix3#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "function",
    "description": "Copies component values and stores them locally.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Source matrix.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 696,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1312
  },
  {
    "id": "<anonymous>~Matrix3#copyMatrix4",
    "longname": "<anonymous>~Matrix3#copyMatrix4",
    "name": "copyMatrix4",
    "scope": "instance",
    "kind": "function",
    "description": "Copies component values from the upper-left submatrix of a Matrix4.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Source matrix.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 718,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1313
  },
  {
    "id": "<anonymous>~Matrix3#setArray",
    "longname": "<anonymous>~Matrix3#setArray",
    "name": "setArray",
    "scope": "instance",
    "kind": "function",
    "description": "Sets matrix values from an array.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "Array source",
        "name": "rhsData"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 740,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1314
  },
  {
    "id": "<anonymous>~Matrix3#clone",
    "longname": "<anonymous>~Matrix3#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a new matrix with the same values as the existing one.",
    "memberof": "<anonymous>~Matrix3",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "The new matrix."
      }
    ],
    "meta": {
      "lineno": 767,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1316
  },
  {
    "id": "<anonymous>~Matrix4#add",
    "longname": "<anonymous>~Matrix4#add",
    "name": "add",
    "scope": "instance",
    "kind": "function",
    "description": "Performs a component-wise addition.",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self to allow chaining."
      }
    ],
    "meta": {
      "lineno": 55,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1329
  },
  {
    "id": "<anonymous>~Matrix4#sub",
    "longname": "<anonymous>~Matrix4#sub",
    "name": "sub",
    "scope": "instance",
    "kind": "function",
    "description": "Performs a component-wise subtraction.",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 84,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1330
  },
  {
    "id": "<anonymous>~Matrix4#scale",
    "longname": "<anonymous>~Matrix4#scale",
    "name": "scale",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies this matrix with a scalar",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "scalar"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 113,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1331
  },
  {
    "id": "<anonymous>~Matrix4#mul",
    "longname": "<anonymous>~Matrix4#mul",
    "name": "mul",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies this matrix with another matrix",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Matrix on the left-hand side",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 141,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1332
  },
  {
    "id": "<anonymous>~Matrix4#mul2",
    "longname": "<anonymous>~Matrix4#mul2",
    "name": "mul2",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies two matrices and stores the result in this matrix",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Matrix on the left-hand side",
        "name": "lhs"
      },
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Matrix on the right-hand side",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 183,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1333
  },
  {
    "id": "<anonymous>~Matrix4#transpose",
    "longname": "<anonymous>~Matrix4#transpose",
    "name": "transpose",
    "scope": "instance",
    "kind": "function",
    "description": "Transposes a matrix (exchanges rows and columns)",
    "memberof": "<anonymous>~Matrix4",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 223,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1334
  },
  {
    "id": "<anonymous>~Matrix4#invert",
    "longname": "<anonymous>~Matrix4#invert",
    "name": "invert",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the analytical inverse and stores the result locally.",
    "memberof": "<anonymous>~Matrix4",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 300,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1336
  },
  {
    "id": "<anonymous>~Matrix4#isOrthogonal",
    "longname": "<anonymous>~Matrix4#isOrthogonal",
    "name": "isOrthogonal",
    "scope": "instance",
    "kind": "function",
    "description": "Tests if the matrix is orthogonal.",
    "memberof": "<anonymous>~Matrix4",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "True if orthogonal."
      }
    ],
    "meta": {
      "lineno": 308,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1337
  },
  {
    "id": "<anonymous>~Matrix4#isNormal",
    "longname": "<anonymous>~Matrix4#isNormal",
    "name": "isNormal",
    "scope": "instance",
    "kind": "function",
    "description": "Tests if the matrix is normal.",
    "memberof": "<anonymous>~Matrix4",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "True if normal."
      }
    ],
    "meta": {
      "lineno": 355,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1338
  },
  {
    "id": "<anonymous>~Matrix4#isOrthonormal",
    "longname": "<anonymous>~Matrix4#isOrthonormal",
    "name": "isOrthonormal",
    "scope": "instance",
    "kind": "function",
    "description": "Tests if the matrix is orthonormal.",
    "memberof": "<anonymous>~Matrix4",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "True if orthonormal."
      }
    ],
    "meta": {
      "lineno": 390,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1339
  },
  {
    "id": "<anonymous>~Matrix4#determinant",
    "longname": "<anonymous>~Matrix4#determinant",
    "name": "determinant",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the determinant of the matrix.",
    "memberof": "<anonymous>~Matrix4",
    "returns": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Determinant of matrix."
      }
    ],
    "meta": {
      "lineno": 398,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1340
  },
  {
    "id": "<anonymous>~Matrix4#setIdentity",
    "longname": "<anonymous>~Matrix4#setIdentity",
    "name": "setIdentity",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the matrix to identity.",
    "memberof": "<anonymous>~Matrix4",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 437,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1341
  },
  {
    "id": "<anonymous>~Matrix4#setRotationFromVector",
    "longname": "<anonymous>~Matrix4#setRotationFromVector",
    "name": "setRotationFromVector",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the rotational part of the matrix from a vector of angles. Order convention is x followed by y followed by z.",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Rotational angles in radians.",
        "name": "angles"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 465,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1342
  },
  {
    "id": "<anonymous>~Matrix4#setRotationFromQuaternion",
    "longname": "<anonymous>~Matrix4#setRotationFromQuaternion",
    "name": "setRotationFromQuaternion",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the rotational part of the matrix from a quaternion.",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Rotational quaternion.",
        "name": "quaternion"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 491,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1343
  },
  {
    "id": "<anonymous>~Matrix4#setTranslation",
    "longname": "<anonymous>~Matrix4#setTranslation",
    "name": "setTranslation",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the translational part of the matrix.",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Translation vector.",
        "name": "translation"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 528,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1344
  },
  {
    "id": "<anonymous>~Matrix4#getTranslation",
    "longname": "<anonymous>~Matrix4#getTranslation",
    "name": "getTranslation",
    "scope": "instance",
    "kind": "function",
    "description": "Gets the translational part of the matrix.",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Translation vector to store result in.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 541,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1345
  },
  {
    "id": "<anonymous>~Matrix4#getRotation",
    "longname": "<anonymous>~Matrix4#getRotation",
    "name": "getRotation",
    "scope": "instance",
    "kind": "function",
    "description": "Gets the rotational part of the matrix (the upper left 3x3 matrix).",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Rotation matrix to store in.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 554,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1346
  },
  {
    "id": "<anonymous>~Matrix4#getScale",
    "longname": "<anonymous>~Matrix4#getScale",
    "name": "getScale",
    "scope": "instance",
    "kind": "function",
    "description": "Gets the scaling part of the matrix.",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Scaling vector to store result in.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 576,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1347
  },
  {
    "id": "<anonymous>~Matrix4#setScale",
    "longname": "<anonymous>~Matrix4#setScale",
    "name": "setScale",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the scale of the matrix.",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Scale vector.",
        "name": "scale"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 594,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1348
  },
  {
    "id": "<anonymous>~Matrix4#equals",
    "longname": "<anonymous>~Matrix4#equals",
    "name": "equals",
    "scope": "instance",
    "kind": "function",
    "description": "Compares two matrices for approximate equality",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "The matrix to compare against",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 613,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1349
  },
  {
    "id": "<anonymous>~Matrix4#copy",
    "longname": "<anonymous>~Matrix4#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "function",
    "description": "Copies component values and stores them locally.",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Source matrix.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 640,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1350
  },
  {
    "id": "<anonymous>~Matrix4#setArray",
    "longname": "<anonymous>~Matrix4#setArray",
    "name": "setArray",
    "scope": "instance",
    "kind": "function",
    "description": "Sets matrix values from an array.",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "Array source",
        "name": "rhsData"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 669,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1351
  },
  {
    "id": "<anonymous>~Matrix4#clone",
    "longname": "<anonymous>~Matrix4#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a new matrix with the same values as the existing one.",
    "memberof": "<anonymous>~Matrix4",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "The new matrix."
      }
    ],
    "meta": {
      "lineno": 703,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1353
  },
  {
    "id": "<anonymous>~Plane#pseudoDistance",
    "longname": "<anonymous>~Plane#pseudoDistance",
    "name": "pseudoDistance",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Plane",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "point"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The distance from this plane to a provided point. If the point is on the negative side of the plane the distance returned is negative,\n        otherwise it is positive. If the point is on the plane, it is zero."
      }
    ],
    "meta": {
      "lineno": 35,
      "filename": "Plane.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1368
  },
  {
    "id": "<anonymous>~Plane#setPlanePoints",
    "longname": "<anonymous>~Plane#setPlanePoints",
    "name": "setPlanePoints",
    "scope": "instance",
    "kind": "function",
    "description": "Sets this plane to the plane defined by the given three points.",
    "memberof": "<anonymous>~Plane",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "pointA"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "pointB"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "pointC"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Plane"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 46,
      "filename": "Plane.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1369
  },
  {
    "id": "<anonymous>~Plane#reflectVector",
    "longname": "<anonymous>~Plane#reflectVector",
    "name": "reflectVector",
    "scope": "instance",
    "kind": "function",
    "description": "Reflects an incoming vector across the normal of this Plane.",
    "memberof": "<anonymous>~Plane",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "the incoming vector. Must be a unit vector.",
        "name": "unitVector"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "Vector to store the result in. May be the same as the unitVector.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The reflected vector."
      }
    ],
    "meta": {
      "lineno": 59,
      "filename": "Plane.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1370
  },
  {
    "id": "<anonymous>~Plane#rayIntersect",
    "longname": "<anonymous>~Plane#rayIntersect",
    "name": "rayIntersect",
    "scope": "instance",
    "kind": "function",
    "description": "Get the intersection of a ray with a plane.",
    "memberof": "<anonymous>~Plane",
    "params": [
      {
        "type": {
          "names": [
            "Ray"
          ]
        },
        "name": "ray"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "name": "store"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "suppressWarnings"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": "1e-8",
        "name": "precision"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The store, or new Vector3 if no store was given. In the case where the ray is parallel with the plane, null is returned (and a warning is printed to console)."
      }
    ],
    "meta": {
      "lineno": 80,
      "filename": "Plane.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1371
  },
  {
    "id": "<anonymous>~Plane#copy",
    "longname": "<anonymous>~Plane#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "function",
    "description": "Copies data from another plane",
    "memberof": "<anonymous>~Plane",
    "params": [
      {
        "type": {
          "names": [
            "Plane"
          ]
        },
        "description": "Source plane to copy from",
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Plane"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 109,
      "filename": "Plane.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1372
  },
  {
    "id": "<anonymous>~Plane#clone",
    "longname": "<anonymous>~Plane#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this plane",
    "memberof": "<anonymous>~Plane",
    "returns": [
      {
        "type": {
          "names": [
            "Plane"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 119,
      "filename": "Plane.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1373
  },
  {
    "id": "<anonymous>~Quaternion#negate",
    "longname": "<anonymous>~Quaternion#negate",
    "name": "negate",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies this quaterion's values by -1.",
    "memberof": "<anonymous>~Quaternion",
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 170,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1377
  },
  {
    "id": "<anonymous>~Quaternion#conjugate",
    "longname": "<anonymous>~Quaternion#conjugate",
    "name": "conjugate",
    "scope": "instance",
    "kind": "function",
    "description": "Conjugates this quaternion",
    "memberof": "<anonymous>~Quaternion",
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 183,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1378
  },
  {
    "id": "<anonymous>~Quaternion#invert",
    "longname": "<anonymous>~Quaternion#invert",
    "name": "invert",
    "scope": "instance",
    "kind": "function",
    "description": "Inverts this quaternion",
    "memberof": "<anonymous>~Quaternion",
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 195,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1379
  },
  {
    "id": "<anonymous>~Quaternion#mul",
    "longname": "<anonymous>~Quaternion#mul",
    "name": "mul",
    "scope": "instance",
    "kind": "function",
    "description": "Performs a multiplication between the current quaternion and another and stores the result locally.\nThe result is a <b>quaternion product</b>.",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Quaternion on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 205,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1380
  },
  {
    "id": "<anonymous>~Quaternion#slerp",
    "longname": "<anonymous>~Quaternion#slerp",
    "name": "slerp",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the spherical linear interpolation from the current quaternion towards endQuat.",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "End quaternion.",
        "name": "endQuat"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Interpolation factor between 0.0 and 1.0.",
        "name": "changeAmount"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 226,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1381
  },
  {
    "id": "<anonymous>~Quaternion#fromRotationMatrix",
    "longname": "<anonymous>~Quaternion#fromRotationMatrix",
    "name": "fromRotationMatrix",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the value of this quaternion to the rotation described by the given matrix values.",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Rotation matrix.",
        "name": "matrix"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 239,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1382
  },
  {
    "id": "<anonymous>~Quaternion#toRotationMatrix",
    "longname": "<anonymous>~Quaternion#toRotationMatrix",
    "name": "toRotationMatrix",
    "scope": "instance",
    "kind": "function",
    "description": "Return a rotation matrix representing the current quaternion.",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "optional": true,
        "description": "The matrix to store our result in. If null, a new matrix is created.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "The normalized rotation matrix representation of this quaternion."
      }
    ],
    "meta": {
      "lineno": 288,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1383
  },
  {
    "id": "<anonymous>~Quaternion#fromVectorToVector",
    "longname": "<anonymous>~Quaternion#fromVectorToVector",
    "name": "fromVectorToVector",
    "scope": "instance",
    "kind": "function",
    "description": "Sets this quaternion to the one that will rotate vector \"from\" into vector \"to\". Vectors do not have to be the same length.",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The source vector.",
        "name": "from"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The destination vector into which to rotate the source vector.",
        "name": "to"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 330,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1384
  },
  {
    "id": "<anonymous>~Quaternion#fromAngleAxis",
    "longname": "<anonymous>~Quaternion#fromAngleAxis",
    "name": "fromAngleAxis",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the values of this quaternion to the values represented by a given angle and axis of rotation.\nNote that this method creates an object, so use fromAngleNormalAxis if your axis is already normalized.\nIf axis == (0, 0, 0) the quaternion is set to identity.",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The angle to rotate (in radians).",
        "name": "angle"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The axis of rotation.",
        "name": "axis"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 380,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1385
  },
  {
    "id": "<anonymous>~Quaternion#fromAngleNormalAxis",
    "longname": "<anonymous>~Quaternion#fromAngleNormalAxis",
    "name": "fromAngleNormalAxis",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the values of this quaternion to the values represented by a given angle and unit length axis of rotation.\nIf axis == (0, 0, 0) the quaternion is set to identity.",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The angle to rotate (in radians).",
        "name": "angle"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The axis of rotation (already normalized - unit length).",
        "name": "axis"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 393,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1386
  },
  {
    "id": "<anonymous>~Quaternion#toAngleAxis",
    "longname": "<anonymous>~Quaternion#toAngleAxis",
    "name": "toAngleAxis",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the rotation angle represented by this quaternion. If a non-null vector is provided, the axis of rotation is stored in\n             that vector as well.",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The object to store the computed axis in. If null, no computations are done to determine axis.",
        "name": "axisStore"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The angle of rotation in radians."
      }
    ],
    "meta": {
      "lineno": 413,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1387
  },
  {
    "id": "<anonymous>~Quaternion#clone",
    "longname": "<anonymous>~Quaternion#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Clones the quaternion",
    "memberof": "<anonymous>~Quaternion",
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Clone of self"
      }
    ],
    "meta": {
      "lineno": 440,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1388
  },
  {
    "id": "<anonymous>~Quaternion#dot",
    "longname": "<anonymous>~Quaternion#dot",
    "name": "dot",
    "scope": "instance",
    "kind": "function",
    "description": "Calculates the dot product between the current quaternion and another quaternion.",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "description": "Quaternion on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The dot product."
      }
    ],
    "meta": {
      "lineno": 449,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1389
  },
  {
    "id": "<anonymous>~Quaternion#setDirect",
    "longname": "<anonymous>~Quaternion#setDirect",
    "name": "setDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector's values from 4 numeric arguments",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "w"
      }
    ],
    "examples": [
      "var q = new Quaternion(); // q == (0, 0, 0, 0)\nq.setDirect(2, 4, 6, 8); // q == (2, 4, 6, 8)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 472,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1390
  },
  {
    "id": "<anonymous>~Ray#intersects",
    "longname": "<anonymous>~Ray#intersects",
    "name": "intersects",
    "scope": "instance",
    "kind": "function",
    "description": "Check for intersection of this ray and and a quad or triangle, either just inside the shape or for the plane defined by the shape (doPlanar == true)",
    "memberof": "<anonymous>~Ray",
    "params": [
      {
        "description": "3 or 4 vector3s defining a triangle or quad",
        "name": "polygonVertices"
      },
      {
        "optional": true,
        "name": "doPlanar"
      },
      {
        "description": "Vector3 to store our intersection point in.",
        "name": "locationStore"
      }
    ],
    "returns": [
      {
        "description": "true if this ray intersects a polygon described by the given vertices."
      }
    ],
    "meta": {
      "lineno": 37,
      "filename": "Ray.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1411
  },
  {
    "id": "<anonymous>~Ray#intersectsTriangle",
    "longname": "<anonymous>~Ray#intersectsTriangle",
    "name": "intersectsTriangle",
    "scope": "instance",
    "kind": "function",
    "description": "Ray vs triangle implementation.",
    "memberof": "<anonymous>~Ray",
    "params": [
      {
        "description": "First",
        "name": "pointA"
      },
      {
        "name": "pointB"
      },
      {
        "name": "pointC"
      },
      {
        "optional": true,
        "name": "doPlanar"
      },
      {
        "optional": true,
        "name": "locationStore"
      }
    ],
    "returns": [
      {
        "description": "true if this ray intersects a triangle formed by the given three points."
      }
    ],
    "meta": {
      "lineno": 57,
      "filename": "Ray.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1412
  },
  {
    "id": "<anonymous>~Ray#getDistanceToPrimitive",
    "longname": "<anonymous>~Ray#getDistanceToPrimitive",
    "name": "getDistanceToPrimitive",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Ray",
    "params": [
      {
        "description": "an array (size 3 or 4) of vectors describing a polygon",
        "name": "worldVertices"
      }
    ],
    "returns": [
      {
        "description": "the distance from our origin to the primitive or Infinity if we do not intersect."
      }
    ],
    "meta": {
      "lineno": 120,
      "filename": "Ray.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1413
  },
  {
    "id": "<anonymous>~Ray#intersectsPlane",
    "longname": "<anonymous>~Ray#intersectsPlane",
    "name": "intersectsPlane",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Ray",
    "params": [
      {
        "name": "plane"
      },
      {
        "description": "if not null, and this ray intersects the plane, the world location of the point of intersection is stored in this vector.",
        "name": "locationStore"
      }
    ],
    "returns": [
      {
        "description": "true if the ray collides with the given Plane"
      }
    ],
    "meta": {
      "lineno": 134,
      "filename": "Ray.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1414
  },
  {
    "id": "<anonymous>~Ray#distanceSquared",
    "longname": "<anonymous>~Ray#distanceSquared",
    "name": "distanceSquared",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Ray",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "point"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "if not null, the closest point is stored in this param",
        "name": "store"
      }
    ],
    "returns": [
      {
        "description": "the squared distance from this ray to the given point."
      }
    ],
    "meta": {
      "lineno": 161,
      "filename": "Ray.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1415
  },
  {
    "id": "<anonymous>~Spline#getPoint",
    "longname": "<anonymous>~Spline#getPoint",
    "name": "getPoint",
    "scope": "instance",
    "kind": "function",
    "description": "Stores the coordinates of the point on the spline at a given t",
    "memberof": "<anonymous>~Spline",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Takes values between 0 and 1",
        "name": "t"
      },
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "A vector to store the result in",
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 184,
      "filename": "Spline.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math/splines"
    },
    "order": 1420
  },
  {
    "id": "<anonymous>~SplineWalker#advance",
    "longname": "<anonymous>~SplineWalker#advance",
    "name": "advance",
    "scope": "instance",
    "kind": "function",
    "description": "Advances the walker by the provided distance and store the new location in the second parameter",
    "memberof": "<anonymous>~SplineWalker",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Distance to \"walk\" on the spline; must be positive",
        "name": "distance"
      },
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "The vector to use to store the resulting position; must have the same type as the control points of the spline",
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 64,
      "filename": "SplineWalker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math/splines"
    },
    "order": 1425
  },
  {
    "id": "<anonymous>~SplineWalker#canWalk",
    "longname": "<anonymous>~SplineWalker#canWalk",
    "name": "canWalk",
    "scope": "instance",
    "kind": "function",
    "description": "Returns whether the walker can still advance on the spline",
    "memberof": "<anonymous>~SplineWalker",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 77,
      "filename": "SplineWalker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math/splines"
    },
    "order": 1426
  },
  {
    "id": "<anonymous>~Transform#combine",
    "longname": "<anonymous>~Transform#combine",
    "name": "combine",
    "scope": "instance",
    "kind": "function",
    "description": "Combines new transform into this one. This will only work if scaling in the left hand transform is uniform",
    "memberof": "<anonymous>~Transform",
    "params": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "right hand side transform",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "this for chaining"
      }
    ],
    "meta": {
      "lineno": 85,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1433
  },
  {
    "id": "<anonymous>~Transform#setIdentity",
    "longname": "<anonymous>~Transform#setIdentity",
    "name": "setIdentity",
    "scope": "instance",
    "kind": "function",
    "description": "Set Transform to identity",
    "memberof": "<anonymous>~Transform",
    "returns": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 112,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1434
  },
  {
    "id": "<anonymous>~Transform#applyForward",
    "longname": "<anonymous>~Transform#applyForward",
    "name": "applyForward",
    "scope": "instance",
    "kind": "function",
    "description": "Applies this transform to supplied vector as a point",
    "memberof": "<anonymous>~Transform",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "point"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "store"
      }
    ],
    "examples": [
      "// Vector3 object, one unit right, two units up, two units back\nvar v1 = new Vector3(1, 2, 2);\n// Vector3 to store the local position\nvar localPos = new Vector3();\n// converts v1 to be in 'world space' based on the entities postion / rotation\nentity.transformComponent.transform.applyForward(v1, localPos);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "store"
      }
    ],
    "meta": {
      "lineno": 135,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1435
  },
  {
    "id": "<anonymous>~Transform#applyForwardVector",
    "longname": "<anonymous>~Transform#applyForwardVector",
    "name": "applyForwardVector",
    "scope": "instance",
    "kind": "function",
    "description": "Applies this transform to supplied vector as a direction-vector (translation will not affect it)",
    "memberof": "<anonymous>~Transform",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "vector"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "store"
      }
    ],
    "examples": [
      "// Vector3 pointing in the direction we want\nvar back = new Vector3(0, 0, 1);\n// Vector3 to store the local 'back'\nvar localBack = new Vector3();\n// converts 'back' to a localized direction based on the entities rotation\nentity.transformComponent.transform.applyForwardVector(back, localBack);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "store"
      }
    ],
    "meta": {
      "lineno": 160,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1436
  },
  {
    "id": "<anonymous>~Transform#update",
    "longname": "<anonymous>~Transform#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the transform according to set scaling, rotation and translation. This is done automatically by the engine",
    "memberof": "<anonymous>~Transform",
    "returns": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 173,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1437
  },
  {
    "id": "<anonymous>~Transform#updateNormalMatrix",
    "longname": "<anonymous>~Transform#updateNormalMatrix",
    "name": "updateNormalMatrix",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the normal matrix. This is done automatically by the engine.",
    "memberof": "<anonymous>~Transform",
    "returns": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 203,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1438
  },
  {
    "id": "<anonymous>~Transform#copy",
    "longname": "<anonymous>~Transform#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "function",
    "description": "Copy supplied transform into this transform",
    "memberof": "<anonymous>~Transform",
    "params": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "name": "transform"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 232,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1439
  },
  {
    "id": "<anonymous>~Transform#setRotationXYZ",
    "longname": "<anonymous>~Transform#setRotationXYZ",
    "name": "setRotationXYZ",
    "scope": "instance",
    "kind": "function",
    "description": "Set this transform's rotation to rotation around X, Y and Z axis. Euler order is YZX.",
    "memberof": "<anonymous>~Transform",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 249,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1440
  },
  {
    "id": "<anonymous>~Transform#lookAt",
    "longname": "<anonymous>~Transform#lookAt",
    "name": "lookAt",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the transform to look in a specific direction.",
    "memberof": "<anonymous>~Transform",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Target position.",
        "name": "position"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "defaultvalue": "(0, 1, 0)",
        "description": "Up vector.",
        "name": "up"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 261,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1441
  },
  {
    "id": "<anonymous>~Transform#invert",
    "longname": "<anonymous>~Transform#invert",
    "name": "invert",
    "scope": "instance",
    "kind": "function",
    "description": "Invert this transform and store it in supplied transform",
    "memberof": "<anonymous>~Transform",
    "params": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "store"
      }
    ],
    "meta": {
      "lineno": 280,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1442
  },
  {
    "id": "<anonymous>~Transform#clone",
    "longname": "<anonymous>~Transform#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this transform",
    "memberof": "<anonymous>~Transform",
    "returns": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 319,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1443
  },
  {
    "id": "<anonymous>~Vector2#getComponent",
    "longname": "<anonymous>~Vector2#getComponent",
    "name": "getComponent",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the vector component associated with the given index.\nVector components are numbered from 0 to 2 in this order: x, y.",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "index"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 96,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1483
  },
  {
    "id": "<anonymous>~Vector2#setComponent",
    "longname": "<anonymous>~Vector2#setComponent",
    "name": "setComponent",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector component associated with the given index to a given value.\nVector components are numbered from 0 to 2 in this order: x, y.",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "index"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 110,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1484
  },
  {
    "id": "<anonymous>~Vector2#add",
    "longname": "<anonymous>~Vector2#add",
    "name": "add",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a vector to the current vector",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector2(1, 2);\nvar v2 = new Vector2(4, 5);\nv1.add(v2); // v1 == (5, 7)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 127,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1485
  },
  {
    "id": "<anonymous>~Vector2#addDirect",
    "longname": "<anonymous>~Vector2#addDirect",
    "name": "addDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Adds numbers 'x', 'y' to the current Vector2 values",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      }
    ],
    "examples": [
      "var v = new Vector2(1, 2);\nv.addDirect(2, 4); // v == (3, 6)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 143,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1486
  },
  {
    "id": "<anonymous>~Vector2#sub",
    "longname": "<anonymous>~Vector2#sub",
    "name": "sub",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a vector from the current vector",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector2(4, 5);\nvar v2 = new Vector2(1, 2);\nv1.sub(v2); // v1 == (3, 3)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 159,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1487
  },
  {
    "id": "<anonymous>~Vector2#subDirect",
    "longname": "<anonymous>~Vector2#subDirect",
    "name": "subDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Subtracts numbers 'x', 'y' from the current Vector2",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      }
    ],
    "examples": [
      "var v = new Vector2(); // v == (0, 0)\nv.subDirect(1, 2); // v == (-1, -2)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 175,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1488
  },
  {
    "id": "<anonymous>~Vector2#negate",
    "longname": "<anonymous>~Vector2#negate",
    "name": "negate",
    "scope": "instance",
    "kind": "function",
    "description": "Performs component-wise negation of the vector",
    "memberof": "<anonymous>~Vector2",
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 186,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1489
  },
  {
    "id": "<anonymous>~Vector2#mul",
    "longname": "<anonymous>~Vector2#mul",
    "name": "mul",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies the current vector by another vector",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector2(4, 5);\nvar v2 = new Vector2(1, 2);\nv1.mul(v2); // v1 == (4, 10)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 202,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1490
  },
  {
    "id": "<anonymous>~Vector2#mulDirect",
    "longname": "<anonymous>~Vector2#mulDirect",
    "name": "mulDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies the current Vector2 by numbers 'x', 'y' as inputs",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      }
    ],
    "examples": [
      "var v = new Vector2(1, 2);\nv.mulDirect(2, 4); // v == (2, 8)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 218,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1491
  },
  {
    "id": "<anonymous>~Vector2#scale",
    "longname": "<anonymous>~Vector2#scale",
    "name": "scale",
    "scope": "instance",
    "kind": "function",
    "description": "Scales the vector by a factor",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "factor"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 230,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1492
  },
  {
    "id": "<anonymous>~Vector2#div",
    "longname": "<anonymous>~Vector2#div",
    "name": "div",
    "scope": "instance",
    "kind": "function",
    "description": "Divides the current Vector2 by another vector",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v = new Vector2(4, 16);\nv.div(2, 4); // v == (2, 16)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 245,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1493
  },
  {
    "id": "<anonymous>~Vector2#divDirect",
    "longname": "<anonymous>~Vector2#divDirect",
    "name": "divDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Divides the current Vector2 by numbers 'x', 'y' as inputs",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      }
    ],
    "examples": [
      "var v = new Vector2(4, 9);\nv.divDirect(2, 3); // v == (2, 3)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 261,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1494
  },
  {
    "id": "<anonymous>~Vector2#dot",
    "longname": "<anonymous>~Vector2#dot",
    "name": "dot",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the dot product between the current vector and another vector",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 273,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1495
  },
  {
    "id": "<anonymous>~Vector2#dotDirect",
    "longname": "<anonymous>~Vector2#dotDirect",
    "name": "dotDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the dot product between the current vector and another vector given as 2 numeric values",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 284,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1496
  },
  {
    "id": "<anonymous>~Vector2#equals",
    "longname": "<anonymous>~Vector2#equals",
    "name": "equals",
    "scope": "instance",
    "kind": "function",
    "description": "Returns whether this vector is aproximately equal to a given vector",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 294,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1497
  },
  {
    "id": "<anonymous>~Vector2#equalsDirect",
    "longname": "<anonymous>~Vector2#equalsDirect",
    "name": "equalsDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Returns whether this vector is approximately equal to a given vector given as 2 numeric values",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 305,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1498
  },
  {
    "id": "<anonymous>~Vector2#lerp",
    "longname": "<anonymous>~Vector2#lerp",
    "name": "lerp",
    "scope": "instance",
    "kind": "function",
    "description": "Linearly interpolates between the current Vector2 and an 'end' Vector2",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "End Vector2",
        "name": "end"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Interpolation factor between 0.0 and 1.0",
        "name": "factor"
      }
    ],
    "examples": [
      "var from = new Vector2(1, 2);\nvar to = new Vector2(3, 4);\nvar midway = from.clone().lerp(to, 0.5); // midway == (2, 3)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 320,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1499
  },
  {
    "id": "<anonymous>~Vector2#reflect",
    "longname": "<anonymous>~Vector2#reflect",
    "name": "reflect",
    "scope": "instance",
    "kind": "function",
    "description": "Reflects a vector relative to the plane obtained from the normal parameter.",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Defines the plane that reflects the vector. Assumed to be of unit length.",
        "name": "normal"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 335,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1500
  },
  {
    "id": "<anonymous>~Vector2#set",
    "longname": "<anonymous>~Vector2#set",
    "name": "set",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector's values from another vector's values",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v = new Vector2(); // v == (0, 0)\nv.set(new Vector2(2, 4)); // v == (2, 4)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 351,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1501
  },
  {
    "id": "<anonymous>~Vector2#setDirect",
    "longname": "<anonymous>~Vector2#setDirect",
    "name": "setDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector's values from 2 numeric arguments",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      }
    ],
    "examples": [
      "var v = new Vector2(); // v == (0, 0)\nv.setDirect(2, 4); // v == (2, 4)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 372,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1502
  },
  {
    "id": "<anonymous>~Vector2#lengthSquared",
    "longname": "<anonymous>~Vector2#lengthSquared",
    "name": "lengthSquared",
    "scope": "instance",
    "kind": "function",
    "description": "Calculates the squared length/magnitude of the current Vector2.\nNote: When comparing the relative distances between two points it is usually sufficient\nto compare the squared distances, thus avoiding an expensive square root operation.",
    "memberof": "<anonymous>~Vector2",
    "examples": [
      "var v = new Vector2(0, 9);\nv.lengthSquared(); // 81"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "squared length"
      }
    ],
    "meta": {
      "lineno": 388,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1503
  },
  {
    "id": "<anonymous>~Vector2#length",
    "longname": "<anonymous>~Vector2#length",
    "name": "length",
    "scope": "instance",
    "kind": "function",
    "description": "Calculates length squared of vector",
    "memberof": "<anonymous>~Vector2",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "length squared"
      }
    ],
    "meta": {
      "lineno": 396,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1504
  },
  {
    "id": "<anonymous>~Vector2#normalize",
    "longname": "<anonymous>~Vector2#normalize",
    "name": "normalize",
    "scope": "instance",
    "kind": "function",
    "description": "Normalizes the current vector",
    "memberof": "<anonymous>~Vector2",
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 404,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1505
  },
  {
    "id": "<anonymous>~Vector2#unsafeNormalize",
    "longname": "<anonymous>~Vector2#unsafeNormalize",
    "name": "unsafeNormalize",
    "scope": "instance",
    "kind": "function",
    "description": "Normalizes the current vector; this method does not perform special checks for zero length vectors",
    "memberof": "<anonymous>~Vector2",
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 422,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1506
  },
  {
    "id": "<anonymous>~Vector2#distanceSquared",
    "longname": "<anonymous>~Vector2#distanceSquared",
    "name": "distanceSquared",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the squared distance between the current Vector2 and another Vector2.\nNote: When comparing the relative distances between two points it is usually sufficient\nto compare the squared distances, thus avoiding an expensive square root operation.",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Vector2",
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector2(); // v1 == (0, 0)\nvar v2 = new Vector2(0, 9);\nv1.distanceSquared(v2); // 81"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "distance squared"
      }
    ],
    "meta": {
      "lineno": 442,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1507
  },
  {
    "id": "<anonymous>~Vector2#distance",
    "longname": "<anonymous>~Vector2#distance",
    "name": "distance",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the distance between the current Vector2 and another Vector2.\nNote: When comparing the relative distances between two points it is usually sufficient\nto compare the squared distances, thus avoiding an expensive square root operation.",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Vector2",
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector2(); // v1 == (0, 0)\nvar v2 = new Vector2(0, 9);\nv1.distance(v2); // 9"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "distance"
      }
    ],
    "meta": {
      "lineno": 460,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1508
  },
  {
    "id": "<anonymous>~Vector2#applyPre",
    "longname": "<anonymous>~Vector2#applyPre",
    "name": "applyPre",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies this vector with a Matrix2",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "name": "matrix"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 469,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1509
  },
  {
    "id": "<anonymous>~Vector2#applyPost",
    "longname": "<anonymous>~Vector2#applyPost",
    "name": "applyPost",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies a Matrix2 with this vector",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "name": "matrix"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 486,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1510
  },
  {
    "id": "<anonymous>~Vector2#clone",
    "longname": "<anonymous>~Vector2#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Clones the vector",
    "memberof": "<anonymous>~Vector2",
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Clone of self"
      }
    ],
    "meta": {
      "lineno": 502,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1511
  },
  {
    "id": "<anonymous>~Vector2#copyTo",
    "longname": "<anonymous>~Vector2#copyTo",
    "name": "copyTo",
    "scope": "instance",
    "kind": "function",
    "description": "Copies this vector over another. Not equivalent to `target.copy(this)` when\nthe target vector has more components than the source vector",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 519,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1513
  },
  {
    "id": "<anonymous>~Vector2#setArray",
    "longname": "<anonymous>~Vector2#setArray",
    "name": "setArray",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector content from an array of numbers.",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "name": "array"
      }
    ],
    "meta": {
      "lineno": 554,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1516
  },
  {
    "id": "<anonymous>~Vector2#toArray",
    "longname": "<anonymous>~Vector2#toArray",
    "name": "toArray",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the components of the vector in array form",
    "memberof": "<anonymous>~Vector2",
    "returns": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 565,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1517
  },
  {
    "id": "<anonymous>~Vector3#getComponent",
    "longname": "<anonymous>~Vector3#getComponent",
    "name": "getComponent",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the vector component associated with the given index.\nVector components are numbered from 0 to 2 in this order: x, y, z.",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "index"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 105,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1534
  },
  {
    "id": "<anonymous>~Vector3#setComponent",
    "longname": "<anonymous>~Vector3#setComponent",
    "name": "setComponent",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector component associated with the given index to a given value.\nVector components are numbered from 0 to 2 in this order: x, y, z.",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "index"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 120,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1535
  },
  {
    "id": "<anonymous>~Vector3#add",
    "longname": "<anonymous>~Vector3#add",
    "name": "add",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a vector to the current vector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector3(1, 2, 3);\nvar v2 = new Vector3(4, 5, 6);\nv1.add(v2); // v1 == (5, 7, 9)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 138,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1536
  },
  {
    "id": "<anonymous>~Vector3#addDirect",
    "longname": "<anonymous>~Vector3#addDirect",
    "name": "addDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Adds numbers 'x', 'y', 'z' to the current Vector3 values",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "examples": [
      "var v = new Vector3(1, 2, 3);\nv.addDirect(2, 4, 6); // v == (3, 6, 9)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 175,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1537
  },
  {
    "id": "<anonymous>~Vector3#sub",
    "longname": "<anonymous>~Vector3#sub",
    "name": "sub",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a vector from the current vector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector3(4, 5, 6);\nvar v2 = new Vector3(1, 2, 3);\nv1.sub(v2); // v1 == (3, 3, 3)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 192,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1538
  },
  {
    "id": "<anonymous>~Vector3#subDirect",
    "longname": "<anonymous>~Vector3#subDirect",
    "name": "subDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Subtracts numbers 'x', 'y', 'z' from the current Vector3",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "examples": [
      "var v = new Vector3(); // v == (0, 0, 0)\nv.subDirect(1, 2, 3); // v == (-1, -2, -3)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 210,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1539
  },
  {
    "id": "<anonymous>~Vector3#negate",
    "longname": "<anonymous>~Vector3#negate",
    "name": "negate",
    "scope": "instance",
    "kind": "function",
    "description": "Performs component-wise negation of the vector",
    "memberof": "<anonymous>~Vector3",
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 222,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1540
  },
  {
    "id": "<anonymous>~Vector3#mul",
    "longname": "<anonymous>~Vector3#mul",
    "name": "mul",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies the current vector by another vector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector3(4, 5, 6);\nvar v2 = new Vector3(1, 2, 3);\nv1.mul(v2); // v1 == (4, 10, 18)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 239,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1541
  },
  {
    "id": "<anonymous>~Vector3#mulDirect",
    "longname": "<anonymous>~Vector3#mulDirect",
    "name": "mulDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies the current Vector3 by numbers 'x', 'y', 'z' as inputs",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "examples": [
      "var v = new Vector3(1, 2, 3);\nv.mulDirect(2, 4, 6); // v == (2, 8, 18)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 264,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1542
  },
  {
    "id": "<anonymous>~Vector3#scale",
    "longname": "<anonymous>~Vector3#scale",
    "name": "scale",
    "scope": "instance",
    "kind": "function",
    "description": "Scales the vector by a factor",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "factor"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 277,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1543
  },
  {
    "id": "<anonymous>~Vector3#div",
    "longname": "<anonymous>~Vector3#div",
    "name": "div",
    "scope": "instance",
    "kind": "function",
    "description": "Divides the current Vector3 by another vector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v = new Vector3(2, 4, 6);\nv.div(1, 2, 3); // v == (2, 2, 2)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 293,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1544
  },
  {
    "id": "<anonymous>~Vector3#divDirect",
    "longname": "<anonymous>~Vector3#divDirect",
    "name": "divDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Divides the current Vector3 by numbers 'x', 'y', 'z' as inputs",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "examples": [
      "var v = new Vector3(2, 4, 6);\nv.divDirect(1, 2, 3); // v == (2, 2, 2)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 318,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1545
  },
  {
    "id": "<anonymous>~Vector3#dot",
    "longname": "<anonymous>~Vector3#dot",
    "name": "dot",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the dot product between the current vector and another vector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 331,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1546
  },
  {
    "id": "<anonymous>~Vector3#dotDirect",
    "longname": "<anonymous>~Vector3#dotDirect",
    "name": "dotDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the dot product between the current vector and another vector given as 3 values",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 344,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1547
  },
  {
    "id": "<anonymous>~Vector3#equals",
    "longname": "<anonymous>~Vector3#equals",
    "name": "equals",
    "scope": "instance",
    "kind": "function",
    "description": "Returns whether this vector is aproximately equal to a given vector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 355,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1548
  },
  {
    "id": "<anonymous>~Vector3#equalsDirect",
    "longname": "<anonymous>~Vector3#equalsDirect",
    "name": "equalsDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Returns whether this vector is approximately equal to a given vector given as 3 values",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 368,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1549
  },
  {
    "id": "<anonymous>~Vector3#cross",
    "longname": "<anonymous>~Vector3#cross",
    "name": "cross",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the cross product between the current Vector3 and another vector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector3(0, 1, 0);\nvar v2 = new Vector3(0, 0, -1);\nv1.cross(v2); // v1 == (-1, 0, 0)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 383,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1550
  },
  {
    "id": "<anonymous>~Vector3#crossDirect",
    "longname": "<anonymous>~Vector3#crossDirect",
    "name": "crossDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the cross product between the current Vector3 and another vector given as 3 values",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "examples": [
      "var v1 = new Vector3(0, 1, 0);\nvar v2 = new Vector3(0, 0, -1);\nv1.cross(v2); // v1 == (-1, 0, 0)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 406,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1551
  },
  {
    "id": "<anonymous>~Vector3#lerp",
    "longname": "<anonymous>~Vector3#lerp",
    "name": "lerp",
    "scope": "instance",
    "kind": "function",
    "description": "Linearly interpolates between the current Vector3 and an 'end' Vector3",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "End Vector3",
        "name": "end"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Interpolation factor between 0.0 and 1.0",
        "name": "factor"
      }
    ],
    "examples": [
      "var from = new Vector3(1, 2, 3);\nvar to = new Vector3(3, 4, 5);\nvar midway = from.clone().lerp(to, 0.5); // midway == (2, 3, 4)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 428,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1552
  },
  {
    "id": "<anonymous>~Vector3#reflect",
    "longname": "<anonymous>~Vector3#reflect",
    "name": "reflect",
    "scope": "instance",
    "kind": "function",
    "description": "Reflects a vector relative to the plane obtained from the normal parameter.",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Defines the plane that reflects the vector. Assumed to be of unit length.",
        "name": "normal"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 444,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1553
  },
  {
    "id": "<anonymous>~Vector3#set",
    "longname": "<anonymous>~Vector3#set",
    "name": "set",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector's values from another vector's values",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v = new Vector3(); // v == (0, 0, 0)\nv.set(new Vector3(2, 4, 6)); // v == (2, 4, 6)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 460,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1554
  },
  {
    "id": "<anonymous>~Vector3#setDirect",
    "longname": "<anonymous>~Vector3#setDirect",
    "name": "setDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector's values from 3 numeric arguments",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "examples": [
      "var v = new Vector3(); // v == (0, 0, 0)\nv.setDirect(2, 4, 6); // v == (2, 4, 6)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 484,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1555
  },
  {
    "id": "<anonymous>~Vector3#lengthSquared",
    "longname": "<anonymous>~Vector3#lengthSquared",
    "name": "lengthSquared",
    "scope": "instance",
    "kind": "function",
    "description": "Calculates the squared length/magnitude of the current Vector3.\nNote: When comparing the relative distances between two points it is usually sufficient\nto compare the squared distances, thus avoiding an expensive square root operation.",
    "memberof": "<anonymous>~Vector3",
    "examples": [
      "var v = new Vector3(0, 9, 0);\nv.lengthSquared(); // 81"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "squared length"
      }
    ],
    "meta": {
      "lineno": 501,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1556
  },
  {
    "id": "<anonymous>~Vector3#length",
    "longname": "<anonymous>~Vector3#length",
    "name": "length",
    "scope": "instance",
    "kind": "function",
    "description": "Calculates length squared of vector",
    "memberof": "<anonymous>~Vector3",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "length squared"
      }
    ],
    "meta": {
      "lineno": 509,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1557
  },
  {
    "id": "<anonymous>~Vector3#normalize",
    "longname": "<anonymous>~Vector3#normalize",
    "name": "normalize",
    "scope": "instance",
    "kind": "function",
    "description": "Normalizes the current vector",
    "memberof": "<anonymous>~Vector3",
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 517,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1558
  },
  {
    "id": "<anonymous>~Vector3#unsafeNormalize",
    "longname": "<anonymous>~Vector3#unsafeNormalize",
    "name": "unsafeNormalize",
    "scope": "instance",
    "kind": "function",
    "description": "Normalizes the current vector; this method does not perform special checks for zero length vectors",
    "memberof": "<anonymous>~Vector3",
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 537,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1559
  },
  {
    "id": "<anonymous>~Vector3#distanceSquared",
    "longname": "<anonymous>~Vector3#distanceSquared",
    "name": "distanceSquared",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the squared distance between the current Vector3 and another Vector3.\nNote: When comparing the relative distances between two points it is usually sufficient\nto compare the squared distances, thus avoiding an expensive square root operation.",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Vector3",
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector3(); // v1 == (0, 0, 0)\nvar v2 = new Vector3(0, 9, 0);\nv1.distanceSquared(v2); // 81"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "distance squared"
      }
    ],
    "meta": {
      "lineno": 558,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1560
  },
  {
    "id": "<anonymous>~Vector3#distance",
    "longname": "<anonymous>~Vector3#distance",
    "name": "distance",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the distance between the current Vector3 and another Vector3.\nNote: When comparing the relative distances between two points it is usually sufficient\nto compare the squared distances, thus avoiding an expensive square root operation.",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Vector3",
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector3(); // v1 == (0, 0, 0)\nvar v2 = new Vector3(0, 9, 0);\nv1.distance(v2); // 9"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "distance"
      }
    ],
    "meta": {
      "lineno": 577,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1561
  },
  {
    "id": "<anonymous>~Vector3#applyPre",
    "longname": "<anonymous>~Vector3#applyPre",
    "name": "applyPre",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies this vector with a Matrix3",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "name": "matrix"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 586,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1562
  },
  {
    "id": "<anonymous>~Vector3#applyPost",
    "longname": "<anonymous>~Vector3#applyPost",
    "name": "applyPost",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies a Matrix3 with this vector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "name": "matrix"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 605,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1563
  },
  {
    "id": "<anonymous>~Vector3#applyPostPoint",
    "longname": "<anonymous>~Vector3#applyPostPoint",
    "name": "applyPostPoint",
    "scope": "instance",
    "kind": "function",
    "description": "Applies a Matrix4 (rotation, scale, translation) to this vector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "name": "matrix"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 624,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1564
  },
  {
    "id": "<anonymous>~Vector3#applyPostVector",
    "longname": "<anonymous>~Vector3#applyPostVector",
    "name": "applyPostVector",
    "scope": "instance",
    "kind": "function",
    "description": "Applies a Matrix4 (rotation, scale) to this vector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "name": "matrix"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 643,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1565
  },
  {
    "id": "<anonymous>~Vector3#clone",
    "longname": "<anonymous>~Vector3#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Clones the vector",
    "memberof": "<anonymous>~Vector3",
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Clone of self"
      }
    ],
    "meta": {
      "lineno": 661,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1566
  },
  {
    "id": "<anonymous>~Vector3#copyTo",
    "longname": "<anonymous>~Vector3#copyTo",
    "name": "copyTo",
    "scope": "instance",
    "kind": "function",
    "description": "Copies this vector over another. Not equivalent to `target.copy(this)` when\nthe target vector has more components than the source vector",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 678,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1568
  },
  {
    "id": "<anonymous>~Vector3#toArray",
    "longname": "<anonymous>~Vector3#toArray",
    "name": "toArray",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the components of the vector in array form",
    "memberof": "<anonymous>~Vector3",
    "returns": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 690,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1569
  },
  {
    "id": "<anonymous>~Vector3#setArray",
    "longname": "<anonymous>~Vector3#setArray",
    "name": "setArray",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector content from an array of numbers.",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "name": "array"
      }
    ],
    "meta": {
      "lineno": 722,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1572
  },
  {
    "id": "<anonymous>~Vector4#getComponent",
    "longname": "<anonymous>~Vector4#getComponent",
    "name": "getComponent",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the vector component associated with the given index.\nVector components are numbered from 0 to 3 in this order: x, y, z, w.",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "index"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 114,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1595
  },
  {
    "id": "<anonymous>~Vector4#setComponent",
    "longname": "<anonymous>~Vector4#setComponent",
    "name": "setComponent",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector component associated with the given index to a given value.\nVector components are numbered from 0 to 3 in this order: x, y, z, w.",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "index"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 130,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1596
  },
  {
    "id": "<anonymous>~Vector4#add",
    "longname": "<anonymous>~Vector4#add",
    "name": "add",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a vector to the current vector",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector4(1, 2, 3, 4);\nvar v2 = new Vector4(4, 5, 6, 7);\nv1.add(v2); // v1 == (5, 7, 9, 11)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 149,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1597
  },
  {
    "id": "<anonymous>~Vector4#addDirect",
    "longname": "<anonymous>~Vector4#addDirect",
    "name": "addDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Adds numbers 'x', 'y', 'z', 'w' to the current Vector4 values",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "w"
      }
    ],
    "examples": [
      "var v = new Vector4(1, 2, 3, 4);\nv.addDirect(2, 4, 6, 8); // v == (3, 6, 9, 12)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 169,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1598
  },
  {
    "id": "<anonymous>~Vector4#sub",
    "longname": "<anonymous>~Vector4#sub",
    "name": "sub",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a vector from the current vector",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector4(4, 5, 6, 7);\nvar v2 = new Vector4(1, 2, 3, 4);\nv1.sub(v2); // v1 == (3, 3, 3, 3)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 187,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1599
  },
  {
    "id": "<anonymous>~Vector4#subDirect",
    "longname": "<anonymous>~Vector4#subDirect",
    "name": "subDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Subtracts numbers 'x', 'y', 'z', 'w' from the current Vector4",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "w"
      }
    ],
    "examples": [
      "var v = new Vector4(); // v == (0, 0, 0, 0)\nv.subDirect(1, 2, 3); // v == (-1, -2, -3, -4)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 207,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1600
  },
  {
    "id": "<anonymous>~Vector4#negate",
    "longname": "<anonymous>~Vector4#negate",
    "name": "negate",
    "scope": "instance",
    "kind": "function",
    "description": "Performs component-wise negation of the vector",
    "memberof": "<anonymous>~Vector4",
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 220,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1601
  },
  {
    "id": "<anonymous>~Vector4#mul",
    "longname": "<anonymous>~Vector4#mul",
    "name": "mul",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies the current vector by another vector",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector4(4, 5, 6, 7);\nvar v2 = new Vector4(1, 2, 3, 4);\nv1.mul(v2); // v1 == (4, 10, 18, 28)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 238,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1602
  },
  {
    "id": "<anonymous>~Vector4#mulDirect",
    "longname": "<anonymous>~Vector4#mulDirect",
    "name": "mulDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies the current Vector4 by numbers 'x', 'y', 'z', 'w' as inputs",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "w"
      }
    ],
    "examples": [
      "var v = new Vector4(1, 2, 3, 4);\nv.mulDirect(2, 4, 6, 8); // v == (2, 8, 18, 32)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 258,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1603
  },
  {
    "id": "<anonymous>~Vector4#scale",
    "longname": "<anonymous>~Vector4#scale",
    "name": "scale",
    "scope": "instance",
    "kind": "function",
    "description": "Scales the vector by a factor",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "factor"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 272,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1604
  },
  {
    "id": "<anonymous>~Vector4#div",
    "longname": "<anonymous>~Vector4#div",
    "name": "div",
    "scope": "instance",
    "kind": "function",
    "description": "Divides the current Vector4 by another vector",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v = new Vector4(2, 4, 6, 8);\nv.divDirect(1, 2, 3, 4); // v == (2, 2, 2, 2)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 289,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1605
  },
  {
    "id": "<anonymous>~Vector4#divDirect",
    "longname": "<anonymous>~Vector4#divDirect",
    "name": "divDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Divides the current Vector4 by numbers 'x', 'y', 'z', 'w' as inputs",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "w"
      }
    ],
    "examples": [
      "var v = new Vector4(4, 9, 16, 25);\nv.divDirect(2, 3, 4, 5); // v == (2, 3, 4, 5)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 309,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1606
  },
  {
    "id": "<anonymous>~Vector4#dot",
    "longname": "<anonymous>~Vector4#dot",
    "name": "dot",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the dot product between the current vector and another vector",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 323,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1607
  },
  {
    "id": "<anonymous>~Vector4#dotDirect",
    "longname": "<anonymous>~Vector4#dotDirect",
    "name": "dotDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the dot product between the current vector and another vector given as 3 values",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "w"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 338,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1608
  },
  {
    "id": "<anonymous>~Vector4#equals",
    "longname": "<anonymous>~Vector4#equals",
    "name": "equals",
    "scope": "instance",
    "kind": "function",
    "description": "Returns whether this vector is aproximately equal to a given vector",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 350,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1609
  },
  {
    "id": "<anonymous>~Vector4#equalsDirect",
    "longname": "<anonymous>~Vector4#equalsDirect",
    "name": "equalsDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Returns whether this vector is approximately equal to a given vector given as 3 values",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "w"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 365,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1610
  },
  {
    "id": "<anonymous>~Vector4#lerp",
    "longname": "<anonymous>~Vector4#lerp",
    "name": "lerp",
    "scope": "instance",
    "kind": "function",
    "description": "Linearly interpolates between the current Vector4 and an 'end' Vector4",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "End Vector4",
        "name": "end"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Interpolation factor between 0.0 and 1.0",
        "name": "factor"
      }
    ],
    "examples": [
      "var from = new Vector4(1, 2, 3, 4);\nvar to = new Vector4(3, 4, 5, 6);\nvar midway = from.clone().lerp(to, 0.5); // midway == (2, 3, 4, 5)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 382,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1611
  },
  {
    "id": "<anonymous>~Vector4#reflect",
    "longname": "<anonymous>~Vector4#reflect",
    "name": "reflect",
    "scope": "instance",
    "kind": "function",
    "description": "Reflects a vector relative to the plane obtained from the normal parameter.",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Defines the plane that reflects the vector. Assumed to be of unit length.",
        "name": "normal"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 399,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1612
  },
  {
    "id": "<anonymous>~Vector4#set",
    "longname": "<anonymous>~Vector4#set",
    "name": "set",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector's values from another vector's values",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "name": "rhs"
      }
    ],
    "examples": [
      "var v = new Vector4(); // v == (0, 0, 0, 0)\nv.set(new Vector4(2, 4, 6, 8)); // v == (2, 4, 6, 8)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 415,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1613
  },
  {
    "id": "<anonymous>~Vector4#setDirect",
    "longname": "<anonymous>~Vector4#setDirect",
    "name": "setDirect",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector's values from 4 numeric arguments",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "w"
      }
    ],
    "examples": [
      "var v = new Vector4(); // v == (0, 0, 0, 0)\nv.setDirect(2, 4, 6, 8); // v == (2, 4, 6, 8)"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 442,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1614
  },
  {
    "id": "<anonymous>~Vector4#lengthSquared",
    "longname": "<anonymous>~Vector4#lengthSquared",
    "name": "lengthSquared",
    "scope": "instance",
    "kind": "function",
    "description": "Calculates the squared length/magnitude of the current Vector4.\nNote: When comparing the relative distances between two points it is usually sufficient\nto compare the squared distances, thus avoiding an expensive square root operation.",
    "memberof": "<anonymous>~Vector4",
    "examples": [
      "var v = new Vector4(0, 9, 0, 0);\nv.lengthSquared(); // 81"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "squared length"
      }
    ],
    "meta": {
      "lineno": 460,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1615
  },
  {
    "id": "<anonymous>~Vector4#length",
    "longname": "<anonymous>~Vector4#length",
    "name": "length",
    "scope": "instance",
    "kind": "function",
    "description": "Calculates length squared of vector",
    "memberof": "<anonymous>~Vector4",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "length squared"
      }
    ],
    "meta": {
      "lineno": 468,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1616
  },
  {
    "id": "<anonymous>~Vector4#normalize",
    "longname": "<anonymous>~Vector4#normalize",
    "name": "normalize",
    "scope": "instance",
    "kind": "function",
    "description": "Normalizes the current vector",
    "memberof": "<anonymous>~Vector4",
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 476,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1617
  },
  {
    "id": "<anonymous>~Vector4#unsafeNormalize",
    "longname": "<anonymous>~Vector4#unsafeNormalize",
    "name": "unsafeNormalize",
    "scope": "instance",
    "kind": "function",
    "description": "Normalizes the current vector; this method does not perform special checks for zero length vectors",
    "memberof": "<anonymous>~Vector4",
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 498,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1618
  },
  {
    "id": "<anonymous>~Vector4#distanceSquared",
    "longname": "<anonymous>~Vector4#distanceSquared",
    "name": "distanceSquared",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the squared distance between the current Vector4 and another Vector4.\nNote: When comparing the relative distances between two points it is usually sufficient\nto compare the squared distances, thus avoiding an expensive square root operation.",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Vector4",
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector4(); // v1 == (0, 0, 0, 0)\nvar v2 = new Vector4(0, 9, 0, 0);\nv1.distanceSquared(v2); // 81"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "distance squared"
      }
    ],
    "meta": {
      "lineno": 520,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1619
  },
  {
    "id": "<anonymous>~Vector4#distance",
    "longname": "<anonymous>~Vector4#distance",
    "name": "distance",
    "scope": "instance",
    "kind": "function",
    "description": "Computes the distance between the current Vector4 and another Vector4.\nNote: When comparing the relative distances between two points it is usually sufficient\nto compare the squared distances, thus avoiding an expensive square root operation.",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Vector4",
        "name": "rhs"
      }
    ],
    "examples": [
      "var v1 = new Vector4(); // v1 == (0, 0, 0, 0)\nvar v2 = new Vector4(0, 9, 0, 0);\nv1.distance(v2); // 9"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "distance"
      }
    ],
    "meta": {
      "lineno": 540,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1620
  },
  {
    "id": "<anonymous>~Vector4#applyPre",
    "longname": "<anonymous>~Vector4#applyPre",
    "name": "applyPre",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies this vector with a Matrix4",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "name": "matrix"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 549,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1621
  },
  {
    "id": "<anonymous>~Vector4#applyPost",
    "longname": "<anonymous>~Vector4#applyPost",
    "name": "applyPost",
    "scope": "instance",
    "kind": "function",
    "description": "Multiplies a Matrix4 with this vector",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "name": "matrix"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 570,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1622
  },
  {
    "id": "<anonymous>~Vector4#clone",
    "longname": "<anonymous>~Vector4#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Clones the vector",
    "memberof": "<anonymous>~Vector4",
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Clone of self"
      }
    ],
    "meta": {
      "lineno": 590,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1623
  },
  {
    "id": "<anonymous>~Vector4#copyTo",
    "longname": "<anonymous>~Vector4#copyTo",
    "name": "copyTo",
    "scope": "instance",
    "kind": "function",
    "description": "Copies this vector over another. Not equivalent to `target.copy(this)` when\nthe target vector has more components than the source vector",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 607,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1625
  },
  {
    "id": "<anonymous>~Vector4#setArray",
    "longname": "<anonymous>~Vector4#setArray",
    "name": "setArray",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the vector content from an array of numbers.",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "name": "array"
      }
    ],
    "meta": {
      "lineno": 644,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1628
  },
  {
    "id": "<anonymous>~Vector4#toArray",
    "longname": "<anonymous>~Vector4#toArray",
    "name": "toArray",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the components of the vector in array form",
    "memberof": "<anonymous>~Vector4",
    "returns": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 656,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1629
  },
  {
    "id": "<anonymous>~OcclusionPartitioner#_writeDebugData",
    "longname": "<anonymous>~OcclusionPartitioner#_writeDebugData",
    "name": "_writeDebugData",
    "scope": "instance",
    "kind": "function",
    "description": "Writes the color data, used to debug the culling.",
    "memberof": "<anonymous>~OcclusionPartitioner",
    "meta": {
      "lineno": 94,
      "filename": "OcclusionPartitioner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack"
    },
    "order": 1658
  },
  {
    "id": "<anonymous>~OcclusionPartitioner#_addVisibleOccluders",
    "longname": "<anonymous>~OcclusionPartitioner#_addVisibleOccluders",
    "name": "_addVisibleOccluders",
    "scope": "instance",
    "kind": "function",
    "description": "Iterates over the entities in the renderlist and adds them to the occluderList if they have a OccluderComponent.",
    "memberof": "<anonymous>~OcclusionPartitioner",
    "meta": {
      "lineno": 102,
      "filename": "OcclusionPartitioner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack"
    },
    "order": 1659
  },
  {
    "id": "<anonymous>~BoundingBoxOcclusionChecker#occlusionCull",
    "longname": "<anonymous>~BoundingBoxOcclusionChecker#occlusionCull",
    "name": "occlusionCull",
    "scope": "instance",
    "kind": "function",
    "description": "Occlusion culls the entity based on the entity's BoundingBox.",
    "memberof": "<anonymous>~BoundingBoxOcclusionChecker",
    "params": [
      {
        "name": "entity"
      },
      {
        "name": "cameraViewProjectionMatrix"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "occluded or not occluded."
      }
    ],
    "meta": {
      "lineno": 91,
      "filename": "BoundingBoxOcclusionChecker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1661
  },
  {
    "id": "<anonymous>~BoundingBoxOcclusionChecker#_copyEntityVerticesToPositionArray",
    "longname": "<anonymous>~BoundingBoxOcclusionChecker#_copyEntityVerticesToPositionArray",
    "name": "_copyEntityVerticesToPositionArray",
    "scope": "instance",
    "kind": "function",
    "description": "Generates a array of homogeneous vertices for a entity's bounding box.",
    "memberof": "<anonymous>~BoundingBoxOcclusionChecker",
    "meta": {
      "lineno": 190,
      "filename": "BoundingBoxOcclusionChecker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1664
  },
  {
    "id": "<anonymous>~BoundingBoxOcclusionChecker#_clipBox",
    "longname": "<anonymous>~BoundingBoxOcclusionChecker#_clipBox",
    "name": "_clipBox",
    "scope": "instance",
    "kind": "function",
    "description": "Clips the bounding box's screen space transformed vertices and outputs the minimum and maximum x- and y-coordinates as well as the minimum depth.\n\tThis is a implementation of the Cohen-Sutherland clipping algorithm. The x- and y-coordinates are only valid for comparing as min or max coordinate\n\tif the coordinate is inside the clipping window. The depth is always taken into consideration, which will be overly conservative at some cases, but without doing this,\n\tit will be non-conservative in some cases.\n\n The new values are stored in the global minMaxArray.",
    "memberof": "<anonymous>~BoundingBoxOcclusionChecker",
    "params": [
      {
        "type": {
          "names": [
            "Float32Array"
          ]
        },
        "description": "Array of screen space transformed vertices.",
        "name": "positions"
      }
    ],
    "meta": {
      "lineno": 204,
      "filename": "BoundingBoxOcclusionChecker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1665
  },
  {
    "id": "<anonymous>~BoundingBoxOcclusionChecker#_isBoundingBoxScanlineOccluded",
    "longname": "<anonymous>~BoundingBoxOcclusionChecker#_isBoundingBoxScanlineOccluded",
    "name": "_isBoundingBoxScanlineOccluded",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a screen space axis aligned box from the min and max values.\n\tThe depth buffer is checked for each pixel the box covers against the nearest depth of the Bounding Box.",
    "memberof": "<anonymous>~BoundingBoxOcclusionChecker",
    "params": [
      {
        "type": {
          "names": [
            "Float32Array"
          ]
        },
        "description": "[minX, maxX, minY, maxY, minDepth]",
        "name": "minmaxArray"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "occluded or not occluded."
      }
    ],
    "meta": {
      "lineno": 412,
      "filename": "BoundingBoxOcclusionChecker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1667
  },
  {
    "id": "<anonymous>~BoundingSphereOcclusionChecker#occlusionCull",
    "longname": "<anonymous>~BoundingSphereOcclusionChecker#occlusionCull",
    "name": "occlusionCull",
    "scope": "instance",
    "kind": "function",
    "description": "Return true if the object is occluded.",
    "memberof": "<anonymous>~BoundingSphereOcclusionChecker",
    "params": [
      {
        "name": "entity"
      },
      {
        "name": "cameraViewMatrix"
      },
      {
        "name": "cameraProjectionMatrix"
      },
      {
        "name": "cameraNearZInWorld"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "occluded or not occluded"
      }
    ],
    "meta": {
      "lineno": 52,
      "filename": "BoundingSphereOcclusionChecker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1671
  },
  {
    "id": "<anonymous>~BoundingSphereOcclusionChecker#_isSSAABBScanlineOccluded",
    "longname": "<anonymous>~BoundingSphereOcclusionChecker#_isSSAABBScanlineOccluded",
    "name": "_isSSAABBScanlineOccluded",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a screen space axis aligned bounding box from the bounding sphere's\n\tcoordinates and performs scanline tests against the depthbuffer with the given nearest depth.",
    "memberof": "<anonymous>~BoundingSphereOcclusionChecker",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "occluded or not occluded."
      }
    ],
    "meta": {
      "lineno": 206,
      "filename": "BoundingSphereOcclusionChecker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1672
  },
  {
    "id": "<anonymous>~BoundingSphereOcclusionChecker#_isOccluded",
    "longname": "<anonymous>~BoundingSphereOcclusionChecker#_isOccluded",
    "name": "_isOccluded",
    "scope": "instance",
    "kind": "function",
    "description": "Check occlusion on a given coordinate.\n\tIf the coordinate is inside the screen pixel space, the given depth value is compared,\n\totherwise the coordinate is assumed to be occluded.",
    "memberof": "<anonymous>~BoundingSphereOcclusionChecker",
    "params": [
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "The coordinate to look-up",
        "name": "coordinate"
      },
      {
        "name": "nearestDepth"
      },
      {
        "name": "color"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "true or false, occluded or not occluded."
      }
    ],
    "meta": {
      "lineno": 462,
      "filename": "BoundingSphereOcclusionChecker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1674
  },
  {
    "id": "<anonymous>~BoundingSphereOcclusionChecker#_isCoordinateInsideScreen",
    "longname": "<anonymous>~BoundingSphereOcclusionChecker#_isCoordinateInsideScreen",
    "name": "_isCoordinateInsideScreen",
    "scope": "instance",
    "kind": "function",
    "description": "Returns true if the coordinate is inside the screen pixel space. Otherwise it returns false.",
    "memberof": "<anonymous>~BoundingSphereOcclusionChecker",
    "params": [
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "name": "coordinate"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "true/false"
      }
    ],
    "meta": {
      "lineno": 483,
      "filename": "BoundingSphereOcclusionChecker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1675
  },
  {
    "id": "<anonymous>~EdgeData#setData",
    "longname": "<anonymous>~EdgeData#setData",
    "name": "setData",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the values in the edgeData.",
    "memberof": "<anonymous>~EdgeData",
    "params": [
      {
        "name": "dataArray"
      }
    ],
    "meta": {
      "lineno": 24,
      "filename": "EdgeData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1678
  },
  {
    "id": "<anonymous>~OccludeeTriangleData#addIndices",
    "longname": "<anonymous>~OccludeeTriangleData#addIndices",
    "name": "addIndices",
    "scope": "instance",
    "kind": "function",
    "description": "Adds 3 indices to the index array.",
    "memberof": "<anonymous>~OccludeeTriangleData",
    "params": [
      {
        "type": {
          "names": [
            "Uint8Array"
          ]
        },
        "name": "triangleIndices"
      }
    ],
    "meta": {
      "lineno": 35,
      "filename": "OccludeeTriangleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1683
  },
  {
    "id": "<anonymous>~OccludeeTriangleData#clear",
    "longname": "<anonymous>~OccludeeTriangleData#clear",
    "name": "clear",
    "scope": "instance",
    "kind": "function",
    "description": "Empties the data.",
    "memberof": "<anonymous>~OccludeeTriangleData",
    "meta": {
      "lineno": 49,
      "filename": "OccludeeTriangleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1684
  },
  {
    "id": "<anonymous>~OccluderTriangleData#addVertex",
    "longname": "<anonymous>~OccluderTriangleData#addVertex",
    "name": "addVertex",
    "scope": "instance",
    "kind": "function",
    "description": "Adds the array of vertex data to the position array and returns the new vertex's index to the position.",
    "memberof": "<anonymous>~OccluderTriangleData",
    "params": [
      {
        "type": {
          "names": [
            "Float32Array"
          ]
        },
        "description": "[x, y, z, w]",
        "name": "array"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the added position's vertex index"
      }
    ],
    "meta": {
      "lineno": 64,
      "filename": "OccluderTriangleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1687
  },
  {
    "id": "<anonymous>~OccluderTriangleData#setCountersToNewEntity",
    "longname": "<anonymous>~OccluderTriangleData#setCountersToNewEntity",
    "name": "setCountersToNewEntity",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the counters to the correct values to correspond to the positions written into the array.",
    "memberof": "<anonymous>~OccluderTriangleData",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The number of position values which have been written to the position array.",
        "name": "positionCount"
      }
    ],
    "meta": {
      "lineno": 86,
      "filename": "OccluderTriangleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1688
  },
  {
    "id": "<anonymous>~OccluderTriangleData#addIndices",
    "longname": "<anonymous>~OccluderTriangleData#addIndices",
    "name": "addIndices",
    "scope": "instance",
    "kind": "function",
    "description": "Adds 3 indices to the index array.",
    "memberof": "<anonymous>~OccluderTriangleData",
    "params": [
      {
        "type": {
          "names": [
            "Uint8Array"
          ]
        },
        "name": "triangleIndices"
      }
    ],
    "meta": {
      "lineno": 99,
      "filename": "OccluderTriangleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1689
  },
  {
    "id": "<anonymous>~SoftwareRenderer#_clearDepthData",
    "longname": "<anonymous>~SoftwareRenderer#_clearDepthData",
    "name": "_clearDepthData",
    "scope": "instance",
    "kind": "function",
    "description": "Clears the depth data.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "meta": {
      "lineno": 97,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1692
  },
  {
    "id": "<anonymous>~SoftwareRenderer#render",
    "longname": "<anonymous>~SoftwareRenderer#render",
    "name": "render",
    "scope": "instance",
    "kind": "function",
    "description": "Renders z-buffer (w-buffer) from the given renderList of entities with OccluderComponents.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "params": [
      {
        "type": {
          "names": [
            "Array.<Entity>"
          ]
        },
        "description": "The array of entities with attached OccluderComponents.",
        "name": "renderList"
      }
    ],
    "meta": {
      "lineno": 105,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1693
  },
  {
    "id": "<anonymous>~SoftwareRenderer#performOcclusionCulling",
    "longname": "<anonymous>~SoftwareRenderer#performOcclusionCulling",
    "name": "performOcclusionCulling",
    "scope": "instance",
    "kind": "function",
    "description": "Performs occlusion culling for the given array of Entities. A new array is returned with the visibile Entities.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "params": [
      {
        "type": {
          "names": [
            "Array.<Entity>"
          ]
        },
        "description": "The array of entities which are possible occludees.",
        "name": "renderList"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Entity>"
          ]
        },
        "description": "visibleEntities The array of entities which are visible after occlusion culling has been applied."
      }
    ],
    "meta": {
      "lineno": 163,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1694
  },
  {
    "id": "<anonymous>~SoftwareRenderer#_setupTriangleDataForEntity",
    "longname": "<anonymous>~SoftwareRenderer#_setupTriangleDataForEntity",
    "name": "_setupTriangleDataForEntity",
    "scope": "instance",
    "kind": "function",
    "description": "Constructs the triangle data which makes up the visible triangles for the given entity.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "the entity from which to create triangles.",
        "name": "entity"
      },
      {
        "name": "cameraProjectionMatrix"
      },
      {
        "name": "cameraViewMatrix"
      }
    ],
    "meta": {
      "lineno": 396,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1698
  },
  {
    "id": "<anonymous>~SoftwareRenderer#_categorizeVertices",
    "longname": "<anonymous>~SoftwareRenderer#_categorizeVertices",
    "name": "_categorizeVertices",
    "scope": "instance",
    "kind": "function",
    "description": "Categorizes the vertices into outside and inside (of the view frustum).\n\tA vertex is categorized as being on the inside of the view frustum if it is located on the near plane.\n\tThe outside- and insideIndices arrays are populated with the index to the vertex in question.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "params": [
      {
        "name": "cameraNear"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "outCount"
      }
    ],
    "meta": {
      "lineno": 443,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1699
  },
  {
    "id": "<anonymous>~SoftwareRenderer#_calculateIntersectionRatio",
    "longname": "<anonymous>~SoftwareRenderer#_calculateIntersectionRatio",
    "name": "_calculateIntersectionRatio",
    "scope": "instance",
    "kind": "function",
    "description": "Calculates the intersection ratio between the vector, created from the parameters origin and target, with the camera's near plane.\n\n\tThe ratio is defined as the amount (%), of the vector from origin to target, where the vector's intersection\n\twith the near plane happens.\n\n\tDue to this intersection being performed in camera space, the ratio calculation can be simplified to\n\tonly account for the z-coordinates.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "origin"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "target"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The near plane.",
        "name": "near"
      }
    ],
    "meta": {
      "lineno": 474,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1700
  },
  {
    "id": "<anonymous>~SoftwareRenderer#_isBackFacingProjected",
    "longname": "<anonymous>~SoftwareRenderer#_isBackFacingProjected",
    "name": "_isBackFacingProjected",
    "scope": "instance",
    "kind": "function",
    "description": "Returns true if the (CCW) triangle created by the vertices v1, v2 and v3 is facing backwards.\n\tOtherwise false is returned. This method is for checking projected vertices.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Vertex #1",
        "name": "v1"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Vertex #2",
        "name": "v2"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Vertex #3",
        "name": "v3"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "true or false"
      }
    ],
    "meta": {
      "lineno": 532,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1701
  },
  {
    "id": "<anonymous>~SoftwareRenderer#isRenderedTriangleOccluded",
    "longname": "<anonymous>~SoftwareRenderer#isRenderedTriangleOccluded",
    "name": "isRenderedTriangleOccluded",
    "scope": "instance",
    "kind": "function",
    "description": "Returns true if the triangle is occluded.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "meta": {
      "lineno": 648,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1704
  },
  {
    "id": "<anonymous>~SoftwareRenderer#_verticalLongEdgeCull",
    "longname": "<anonymous>~SoftwareRenderer#_verticalLongEdgeCull",
    "name": "_verticalLongEdgeCull",
    "scope": "instance",
    "kind": "function",
    "description": "Returns true if the triangle should be culled, if not, it returns false.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "meta": {
      "lineno": 770,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1706
  },
  {
    "id": "<anonymous>~SoftwareRenderer#_horizontalLongEdgeCull",
    "longname": "<anonymous>~SoftwareRenderer#_horizontalLongEdgeCull",
    "name": "_horizontalLongEdgeCull",
    "scope": "instance",
    "kind": "function",
    "description": "Returns true if the triangle should be culled, if not, it returns false.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "params": [
      {
        "name": "orientationData"
      },
      {
        "name": "longEdge"
      }
    ],
    "meta": {
      "lineno": 779,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1707
  },
  {
    "id": "<anonymous>~SoftwareRenderer#_createEdgeData",
    "longname": "<anonymous>~SoftwareRenderer#_createEdgeData",
    "name": "_createEdgeData",
    "scope": "instance",
    "kind": "function",
    "description": "Creates the EdgeData , used for rendering. False is returned if there is not anything to draw.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "drawable"
      }
    ],
    "meta": {
      "lineno": 1301,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1709
  },
  {
    "id": "<anonymous>~SoftwareRenderer#_fillPixels",
    "longname": "<anonymous>~SoftwareRenderer#_fillPixels",
    "name": "_fillPixels",
    "scope": "instance",
    "kind": "function",
    "description": "Writes the span of pixels to the depthData. The pixels written are\n\tthe closed interval of [leftX, rightX] on the y-coordinte y.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "meta": {
      "lineno": 1433,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1711
  },
  {
    "id": "<anonymous>~SoftwareRenderer#copyDepthToColor",
    "longname": "<anonymous>~SoftwareRenderer#copyDepthToColor",
    "name": "copyDepthToColor",
    "scope": "instance",
    "kind": "function",
    "description": "Maps the data in the depth buffer to gray scale values in the color buffer.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "meta": {
      "lineno": 1501,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1712
  },
  {
    "id": "<anonymous>~SoftwareRenderer#getColorData",
    "longname": "<anonymous>~SoftwareRenderer#getColorData",
    "name": "getColorData",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the array of RGBA color data.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "returns": [
      {
        "type": {
          "names": [
            "Uint8Array"
          ]
        },
        "description": "RGBA Color data."
      }
    ],
    "meta": {
      "lineno": 1530,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1713
  },
  {
    "id": "<anonymous>~SoftwareRenderer#getDepthData",
    "longname": "<anonymous>~SoftwareRenderer#getDepthData",
    "name": "getDepthData",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the array of depth data.",
    "memberof": "<anonymous>~SoftwareRenderer",
    "returns": [
      {
        "type": {
          "names": [
            "Float32Array"
          ]
        },
        "description": "Depth data."
      }
    ],
    "meta": {
      "lineno": 1538,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1714
  },
  {
    "id": "<anonymous>~PosteffectsHandler#_remove",
    "longname": "<anonymous>~PosteffectsHandler#_remove",
    "name": "_remove",
    "scope": "instance",
    "kind": "function",
    "description": "Removes the posteffects, i e removes the composer from rendersystem.",
    "memberof": "<anonymous>~PosteffectsHandler",
    "params": [
      {
        "type": {
          "names": [
            "ref"
          ]
        },
        "name": "ref"
      }
    ],
    "meta": {
      "lineno": 53,
      "filename": "PosteffectsHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/passpack"
    },
    "order": 1744
  },
  {
    "id": "<anonymous>~PosteffectsHandler#_update",
    "longname": "<anonymous>~PosteffectsHandler#_update",
    "name": "_update",
    "scope": "instance",
    "kind": "function",
    "description": "Creates/updates/removes a posteffectconfig",
    "memberof": "<anonymous>~PosteffectsHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ref"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves with the updated posteffectsarray or null if removed"
      }
    ],
    "meta": {
      "lineno": 82,
      "filename": "PosteffectsHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/passpack"
    },
    "order": 1746
  },
  {
    "id": "<anonymous>~PosteffectsHandler#_updateEffect",
    "longname": "<anonymous>~PosteffectsHandler#_updateEffect",
    "name": "_updateEffect",
    "scope": "instance",
    "kind": "function",
    "description": "Finds the already created effect from the configs id or creates a new one and updates it\naccording to config",
    "memberof": "<anonymous>~PosteffectsHandler",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Array.<RenderPass>"
          ]
        },
        "description": "array of engine posteffects/Renderpasses",
        "name": "posteffects"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RenderPass"
          ]
        },
        "description": "effect"
      }
    ],
    "meta": {
      "lineno": 139,
      "filename": "PosteffectsHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/passpack"
    },
    "order": 1747
  },
  {
    "id": "<anonymous>~DoubleQuad#rebuild",
    "longname": "<anonymous>~DoubleQuad#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~DoubleQuad",
    "returns": [
      {
        "type": {
          "names": [
            "DoubleQuad"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 69,
      "filename": "DoubleQuad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1762
  },
  {
    "id": "<anonymous>~QuadComponent#setMaterial",
    "longname": "<anonymous>~QuadComponent#setMaterial",
    "name": "setMaterial",
    "scope": "instance",
    "kind": "function",
    "description": "Set the current material for the quad",
    "memberof": "<anonymous>~QuadComponent",
    "params": [
      {
        "description": "material",
        "name": "Material"
      }
    ],
    "meta": {
      "lineno": 141,
      "filename": "QuadComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1774
  },
  {
    "id": "<anonymous>~QuadComponent#rebuildMeshData",
    "longname": "<anonymous>~QuadComponent#rebuildMeshData",
    "name": "rebuildMeshData",
    "scope": "instance",
    "kind": "function",
    "description": "Re-build the meshData for the meshDataComponent.",
    "memberof": "<anonymous>~QuadComponent",
    "meta": {
      "lineno": 150,
      "filename": "QuadComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1775
  },
  {
    "id": "<anonymous>~QuadComponentHandler#update",
    "longname": "<anonymous>~QuadComponentHandler#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update engine quadcomponent object based on the config.",
    "memberof": "<anonymous>~QuadComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity on which this component should be added.",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "promise that resolves with the component when loading is done."
      }
    ],
    "meta": {
      "lineno": 62,
      "filename": "QuadComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1780
  },
  {
    "id": "<anonymous>~BoundingBox#containsPoint",
    "longname": "<anonymous>~BoundingBox#containsPoint",
    "name": "containsPoint",
    "scope": "instance",
    "kind": "function",
    "description": "Method to test whether a point is inside the bounding box or not",
    "memberof": "<anonymous>~BoundingBox",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "point"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 81,
      "filename": "BoundingBox.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/bounds"
    },
    "order": 1783
  },
  {
    "id": "<anonymous>~BoundingBox#copy",
    "longname": "<anonymous>~BoundingBox#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "function",
    "description": "Copies data from another bounding box",
    "memberof": "<anonymous>~BoundingBox",
    "params": [
      {
        "type": {
          "names": [
            "BoundingBox"
          ]
        },
        "description": "bounding box to copy from",
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BoundingBox"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 567,
      "filename": "BoundingBox.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/bounds"
    },
    "order": 1784
  },
  {
    "id": "<anonymous>~BoundingBox#clone",
    "longname": "<anonymous>~BoundingBox#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this bounding box",
    "memberof": "<anonymous>~BoundingBox",
    "returns": [
      {
        "type": {
          "names": [
            "BoundingBox"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 582,
      "filename": "BoundingBox.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/bounds"
    },
    "order": 1785
  },
  {
    "id": "<anonymous>~BoundingSphere#containsPoint",
    "longname": "<anonymous>~BoundingSphere#containsPoint",
    "name": "containsPoint",
    "scope": "instance",
    "kind": "function",
    "description": "Method to test whether a point is inside the bounding box or not",
    "memberof": "<anonymous>~BoundingSphere",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "point"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 78,
      "filename": "BoundingSphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/bounds"
    },
    "order": 1788
  },
  {
    "id": "<anonymous>~BoundingSphere#copy",
    "longname": "<anonymous>~BoundingSphere#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "function",
    "description": "Copies data from another bounding sphere",
    "memberof": "<anonymous>~BoundingSphere",
    "params": [
      {
        "type": {
          "names": [
            "BoundingSphere"
          ]
        },
        "description": "bounding sphere to copy from",
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BoundingSphere"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 338,
      "filename": "BoundingSphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/bounds"
    },
    "order": 1789
  },
  {
    "id": "<anonymous>~BoundingSphere#clone",
    "longname": "<anonymous>~BoundingSphere#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this bounding sphere",
    "memberof": "<anonymous>~BoundingSphere",
    "returns": [
      {
        "type": {
          "names": [
            "BoundingSphere"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 351,
      "filename": "BoundingSphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/bounds"
    },
    "order": 1790
  },
  {
    "id": "<anonymous>~BoundingVolume#copy",
    "longname": "<anonymous>~BoundingVolume#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "function",
    "description": "Copies data from another bounding volume",
    "memberof": "<anonymous>~BoundingVolume",
    "params": [
      {
        "type": {
          "names": [
            "BoundingVolume"
          ]
        },
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BoundingVolume"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 31,
      "filename": "BoundingVolume.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/bounds"
    },
    "order": 1793
  },
  {
    "id": "<anonymous>~BufferData#setDataUsage",
    "longname": "<anonymous>~BufferData#setDataUsage",
    "name": "setDataUsage",
    "scope": "instance",
    "kind": "function",
    "description": "Set the usage type of this bufferdata.",
    "memberof": "<anonymous>~BufferData",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Usage Type\n<pre>\nUsage Type:\n \t'StaticDraw' - The data store contents will be speciﬁed once by the application,\n\t  \t\tand used many times as the source for GL drawing commands\n  \t'DynamicDraw' - The data store contents will be respeciﬁed repeatedly by the application, and used many times as the source for GL drawing commands.\n   \t'StreamDraw' - The data store contents will be speciﬁed once by the application,\n\t    \tand used at most a few times as the source of a GL drawing command\n</pre>",
        "name": "dataUsage"
      }
    ],
    "meta": {
      "lineno": 42,
      "filename": "BufferData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1797
  },
  {
    "id": "<anonymous>~BufferData#setDataNeedsRefresh",
    "longname": "<anonymous>~BufferData#setDataNeedsRefresh",
    "name": "setDataNeedsRefresh",
    "scope": "instance",
    "kind": "function",
    "description": "Tell the engine that a buffer has been updated and needs to be refreshed.",
    "memberof": "<anonymous>~BufferData",
    "meta": {
      "lineno": 49,
      "filename": "BufferData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1798
  },
  {
    "id": "<anonymous>~BufferData#destroy",
    "longname": "<anonymous>~BufferData#destroy",
    "name": "destroy",
    "scope": "instance",
    "kind": "function",
    "description": "Releases the allocated buffer",
    "memberof": "<anonymous>~BufferData",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderingContext"
          ]
        },
        "name": "context"
      }
    ],
    "meta": {
      "lineno": 57,
      "filename": "BufferData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1799
  },
  {
    "id": "<anonymous>~Camera#normalize",
    "longname": "<anonymous>~Camera#normalize",
    "name": "normalize",
    "scope": "instance",
    "kind": "function",
    "description": "Ensure our up, left and direction are unit-length vectors.",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 156,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1811
  },
  {
    "id": "<anonymous>~Camera#setProjectionMode",
    "longname": "<anonymous>~Camera#setProjectionMode",
    "name": "setProjectionMode",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the projection mode of the camera. (Camera.Perspective / Camera.Parallel)",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "ProjectionMode"
          ]
        },
        "description": "The new projection mode - Camera.Perspective or Camera.Parallel",
        "name": "projectionMode"
      }
    ],
    "meta": {
      "lineno": 168,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1812
  },
  {
    "id": "<anonymous>~Camera#setFrustumPerspective",
    "longname": "<anonymous>~Camera#setFrustumPerspective",
    "name": "setFrustumPerspective",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the frustum plane values of this camera using the given perspective values.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The full angle of view on the Y axis, in degrees.",
        "name": "fov"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The aspect ratio of our view (generally in [0, 1]). Often this is canvas width / canvas height.",
        "name": "aspect"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Near plane value",
        "name": "near"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Far plane value",
        "name": "far"
      }
    ],
    "meta": {
      "lineno": 181,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1813
  },
  {
    "id": "<anonymous>~Camera#setFrustum",
    "longname": "<anonymous>~Camera#setFrustum",
    "name": "setFrustum",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the frustum plane values of this camera using the given values.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "near"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "far"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "left"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "right"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "top"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "bottom"
      }
    ],
    "meta": {
      "lineno": 224,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1814
  },
  {
    "id": "<anonymous>~Camera#copy",
    "longname": "<anonymous>~Camera#copy",
    "name": "copy",
    "scope": "instance",
    "kind": "function",
    "description": "Copy the settings of a source camera to this camera.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "Camera"
          ]
        },
        "name": "source"
      }
    ],
    "meta": {
      "lineno": 268,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1815
  },
  {
    "id": "<anonymous>~Camera#setFrame",
    "longname": "<anonymous>~Camera#setFrame",
    "name": "setFrame",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the location and the left, up and direction axes of the camera.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "location"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "left"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "up"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "direction"
      }
    ],
    "meta": {
      "lineno": 307,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1816
  },
  {
    "id": "<anonymous>~Camera#lookAt",
    "longname": "<anonymous>~Camera#lookAt",
    "name": "lookAt",
    "scope": "instance",
    "kind": "function",
    "description": "A convenience method for auto-setting the frame based on a world position the user desires the camera to look at. It points the camera towards\nthe given position using the difference between that position and the current camera location as a direction vector and the general\nworldUpVector to compute up and left camera vectors.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Where to look at in terms of world coordinates.",
        "name": "pos"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "A vector indicating the up direction of the world. (often Vector3.UNIT_Y or Vector3.UNIT_Z).",
        "name": "worldUpVector"
      }
    ],
    "meta": {
      "lineno": 324,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1817
  },
  {
    "id": "<anonymous>~Camera#update",
    "longname": "<anonymous>~Camera#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Forces all aspect of the camera to be updated from internal values, and sets all dirty flags to true so that the next apply() call will fully\nset this camera to the render context.",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 355,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1818
  },
  {
    "id": "<anonymous>~Camera#contains",
    "longname": "<anonymous>~Camera#contains",
    "name": "contains",
    "scope": "instance",
    "kind": "function",
    "description": "Checks a bounding volume against the planes of this camera's frustum and returns if it is completely inside of, outside of, or intersecting.\nExample returns are Camera.Inside, Camera.Outside or Camera.Intersects.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "BoundingVolume"
          ]
        },
        "description": "The BoundingVolume to check for culling.",
        "name": "bound"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Intersection type."
      }
    ],
    "meta": {
      "lineno": 367,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1819
  },
  {
    "id": "<anonymous>~Camera#onFrustumChange",
    "longname": "<anonymous>~Camera#onFrustumChange",
    "name": "onFrustumChange",
    "scope": "instance",
    "kind": "function",
    "description": "Updates internal frustum coefficient values to reflect the current frustum plane values.\nThis is an optimization to move normalization/rotation of plane normals out to be done\nonly when the frustum values change.",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 394,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1820
  },
  {
    "id": "<anonymous>~Camera#onFrameChange",
    "longname": "<anonymous>~Camera#onFrameChange",
    "name": "onFrameChange",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the values of the world planes associated with this camera.",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 429,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1821
  },
  {
    "id": "<anonymous>~Camera#updateProjectionMatrix",
    "longname": "<anonymous>~Camera#updateProjectionMatrix",
    "name": "updateProjectionMatrix",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the value of our projection matrix.",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 504,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1822
  },
  {
    "id": "<anonymous>~Camera#updateModelViewMatrix",
    "longname": "<anonymous>~Camera#updateModelViewMatrix",
    "name": "updateModelViewMatrix",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the value of our model view matrix.",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 533,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1823
  },
  {
    "id": "<anonymous>~Camera#getPickRay",
    "longname": "<anonymous>~Camera#getPickRay",
    "name": "getPickRay",
    "scope": "instance",
    "kind": "function",
    "description": "Calculate a Pick Ray using the given screen position at the near plane of this camera and the camera's position in space.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen x position.",
        "name": "screenX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen y position.",
        "name": "screenY"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen width.",
        "name": "screenWidth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen height.",
        "name": "screenHeight"
      },
      {
        "type": {
          "names": [
            "Ray"
          ]
        },
        "optional": true,
        "description": "The Ray to store the result in. If null, a new Ray is created and returned.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Ray"
          ]
        },
        "description": "The resulting Ray."
      }
    ],
    "meta": {
      "lineno": 565,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1824
  },
  {
    "id": "<anonymous>~Camera#getWorldPosition",
    "longname": "<anonymous>~Camera#getWorldPosition",
    "name": "getWorldPosition",
    "scope": "instance",
    "kind": "function",
    "description": "Converts a local x, y screen position and depth value to world coordinates based on the current settings of this camera.\nThis function calls getWorldCoordinates after converting zDepth to screen space.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen x position.",
        "name": "screenX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen y position.",
        "name": "screenY"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen width.",
        "name": "screenWidth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen height.",
        "name": "screenHeight"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The depth into the camera view in world distance.",
        "name": "zDepth"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "Use to avoid object creation. if not null, the results are stored in the given vector and returned. Otherwise, a new vector is\n           created.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Vector containing the world coordinates."
      }
    ],
    "meta": {
      "lineno": 587,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1825
  },
  {
    "id": "<anonymous>~Camera#getWorldCoordinates",
    "longname": "<anonymous>~Camera#getWorldCoordinates",
    "name": "getWorldCoordinates",
    "scope": "instance",
    "kind": "function",
    "description": "Converts a local x, y screen position and depth value to world coordinates based on the current settings of this camera.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen x position (x=0 is the leftmost coordinate of the screen).",
        "name": "screenX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen y position (y=0 is the top of the screen).",
        "name": "screenY"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen width.",
        "name": "screenWidth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen height.",
        "name": "screenHeight"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The {@link http://www.sjbaker.org/steve/omniv/love_your_z_buffer.html non linear depth} between 0 and 1 into the camera view. 0 indicates the near plane of the camera and 1 indicates the far plane.",
        "name": "zDepth"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "Use to avoid object creation. If not null, the results are stored in the given vector and returned. Otherwise, a new vector is\n           created.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Vector containing the world coordinates."
      }
    ],
    "meta": {
      "lineno": 609,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1826
  },
  {
    "id": "<anonymous>~Camera#getScreenCoordinates",
    "longname": "<anonymous>~Camera#getScreenCoordinates",
    "name": "getScreenCoordinates",
    "scope": "instance",
    "kind": "function",
    "description": "Converts a position in world coordinate space to an x, y screen position and non linear depth value using the current settings of this camera.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The position in world space to retrieve screen coordinates for.",
        "name": "worldPos"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen width.",
        "name": "screenWidth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The screen height.",
        "name": "screenHeight"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "Use to avoid object creation. if not null, the results are stored in the given vector and returned. Otherwise, a new vector is\n           created.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Vector containing the screen coordinates as x and y and the distance as a non linear value between the near (0) and far (1) planes."
      }
    ],
    "meta": {
      "lineno": 650,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1827
  },
  {
    "id": "<anonymous>~Camera#getFrustumCoordinates",
    "longname": "<anonymous>~Camera#getFrustumCoordinates",
    "name": "getFrustumCoordinates",
    "scope": "instance",
    "kind": "function",
    "description": "Converts a position in world coordinate space to a x, y, z frustum position using the current settings of this camera.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "the position in space to retrieve frustum coordinates for.",
        "name": "worldPos"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "Use to avoid object creation. if not null, the results are stored in the given vector and returned.\n       Otherwise, a new vector is created.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Vector containing the x, y and z frustum position."
      }
    ],
    "meta": {
      "lineno": 677,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1828
  },
  {
    "id": "<anonymous>~Camera#getNormalizedDeviceCoordinates",
    "longname": "<anonymous>~Camera#getNormalizedDeviceCoordinates",
    "name": "getNormalizedDeviceCoordinates",
    "scope": "instance",
    "kind": "function",
    "description": "Converts a position in world coordinate space to normalized device coordinates by applying the modelViewProjection from this camera.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The position in space to retrieve coordinates for.",
        "name": "worldPos"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "Use to avoid object creation. If not null, the results are stored in the given vector and returned.\n       Otherwise, a new vector is created.",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Vector containing the x, y and z normalized device coordinates."
      }
    ],
    "meta": {
      "lineno": 695,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1829
  },
  {
    "id": "<anonymous>~Camera#checkModelView",
    "longname": "<anonymous>~Camera#checkModelView",
    "name": "checkModelView",
    "scope": "instance",
    "kind": "function",
    "description": "Update the modelView matrix if necessary.",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 716,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1830
  },
  {
    "id": "<anonymous>~Camera#checkProjection",
    "longname": "<anonymous>~Camera#checkProjection",
    "name": "checkProjection",
    "scope": "instance",
    "kind": "function",
    "description": "Update the projection matrix if necessary.",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 726,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1831
  },
  {
    "id": "<anonymous>~Camera#checkModelViewProjection",
    "longname": "<anonymous>~Camera#checkModelViewProjection",
    "name": "checkModelViewProjection",
    "scope": "instance",
    "kind": "function",
    "description": "Update the modelViewProjection matrix if necessary.",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 736,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1832
  },
  {
    "id": "<anonymous>~Camera#checkInverseModelView",
    "longname": "<anonymous>~Camera#checkInverseModelView",
    "name": "checkInverseModelView",
    "scope": "instance",
    "kind": "function",
    "description": "Update the inverse modelView matrix if necessary.",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 749,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1833
  },
  {
    "id": "<anonymous>~Camera#checkInverseModelViewProjection",
    "longname": "<anonymous>~Camera#checkInverseModelViewProjection",
    "name": "checkInverseModelViewProjection",
    "scope": "instance",
    "kind": "function",
    "description": "Update the inverse modelViewProjection matrix if necessary.",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 761,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1834
  },
  {
    "id": "<anonymous>~Camera#getViewMatrix",
    "longname": "<anonymous>~Camera#getViewMatrix",
    "name": "getViewMatrix",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Camera",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "The modelView matrix."
      }
    ],
    "meta": {
      "lineno": 773,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1835
  },
  {
    "id": "<anonymous>~Camera#getProjectionMatrix",
    "longname": "<anonymous>~Camera#getProjectionMatrix",
    "name": "getProjectionMatrix",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Camera",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "The projection matrix."
      }
    ],
    "meta": {
      "lineno": 781,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1836
  },
  {
    "id": "<anonymous>~Camera#getViewProjectionMatrix",
    "longname": "<anonymous>~Camera#getViewProjectionMatrix",
    "name": "getViewProjectionMatrix",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Camera",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "The modelViewProjection matrix."
      }
    ],
    "meta": {
      "lineno": 789,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1837
  },
  {
    "id": "<anonymous>~Camera#getViewInverseMatrix",
    "longname": "<anonymous>~Camera#getViewInverseMatrix",
    "name": "getViewInverseMatrix",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Camera",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "The modelViewInverse matrix."
      }
    ],
    "meta": {
      "lineno": 797,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1838
  },
  {
    "id": "<anonymous>~Camera#getViewProjectionInverseMatrix",
    "longname": "<anonymous>~Camera#getViewProjectionInverseMatrix",
    "name": "getViewProjectionInverseMatrix",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~Camera",
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "The modelViewProjectionInverse matrix."
      }
    ],
    "meta": {
      "lineno": 805,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1839
  },
  {
    "id": "<anonymous>~Camera#pack",
    "longname": "<anonymous>~Camera#pack",
    "name": "pack",
    "scope": "instance",
    "kind": "function",
    "description": "Compress this camera's near and far frustum planes to be smaller if possible,\nusing the given bounds as a measure.",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "BoundingVolume"
          ]
        },
        "description": "The scene bounds.",
        "name": "sceneBounds"
      }
    ],
    "meta": {
      "lineno": 815,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1840
  },
  {
    "id": "<anonymous>~Camera#setToObliqueMatrix",
    "longname": "<anonymous>~Camera#setToObliqueMatrix",
    "name": "setToObliqueMatrix",
    "scope": "instance",
    "kind": "function",
    "description": "Clip using an oblique frustum different from the the view frustum",
    "memberof": "<anonymous>~Camera",
    "params": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        },
        "description": "Clipping plane. (nx, ny, nz, constant)",
        "name": "clipPlane"
      }
    ],
    "meta": {
      "lineno": 916,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1841
  },
  {
    "id": "<anonymous>~DirectionalLight#update",
    "longname": "<anonymous>~DirectionalLight#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the light's translation and orientation",
    "memberof": "<anonymous>~DirectionalLight",
    "params": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "name": "transform"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 40,
      "filename": "DirectionalLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1849
  },
  {
    "id": "<anonymous>~SpotLight#update",
    "longname": "<anonymous>~SpotLight#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the light's translation and orientation",
    "memberof": "<anonymous>~SpotLight",
    "params": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "name": "transform"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 65,
      "filename": "SpotLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1870
  },
  {
    "id": "<anonymous>~Material#setTexture",
    "longname": "<anonymous>~Material#setTexture",
    "name": "setTexture",
    "scope": "instance",
    "kind": "function",
    "description": "Sets a texture in a specific slot",
    "memberof": "<anonymous>~Material",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of texture slot",
        "name": "name"
      },
      {
        "type": {
          "names": [
            "Texture"
          ]
        },
        "description": "Texture to set",
        "name": "texture"
      }
    ],
    "meta": {
      "lineno": 163,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1883
  },
  {
    "id": "<anonymous>~Material#getTexture",
    "longname": "<anonymous>~Material#getTexture",
    "name": "getTexture",
    "scope": "instance",
    "kind": "function",
    "description": "Gets a texture in a specific slot",
    "memberof": "<anonymous>~Material",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of texture slot to retrieve texture from",
        "name": "name"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Texture"
          ]
        },
        "description": "Texture if found, or undefined if not in slot"
      }
    ],
    "meta": {
      "lineno": 173,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1884
  },
  {
    "id": "<anonymous>~Material#removeTexture",
    "longname": "<anonymous>~Material#removeTexture",
    "name": "removeTexture",
    "scope": "instance",
    "kind": "function",
    "description": "Removes a texture in a specific slot",
    "memberof": "<anonymous>~Material",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of texture slot to remove",
        "name": "name"
      }
    ],
    "meta": {
      "lineno": 182,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1885
  },
  {
    "id": "<anonymous>~Material#getTextures",
    "longname": "<anonymous>~Material#getTextures",
    "name": "getTextures",
    "scope": "instance",
    "kind": "function",
    "description": "Get all textures as an array",
    "memberof": "<anonymous>~Material",
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Texture>"
          ]
        },
        "description": "Array containing all set textures"
      }
    ],
    "meta": {
      "lineno": 191,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1886
  },
  {
    "id": "<anonymous>~Material#getTextureEntries",
    "longname": "<anonymous>~Material#getTextureEntries",
    "name": "getTextureEntries",
    "scope": "instance",
    "kind": "function",
    "description": "Get the map of [slot_name]: [Texture]",
    "memberof": "<anonymous>~Material",
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Mapping of slot - textures"
      }
    ],
    "meta": {
      "lineno": 204,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1887
  },
  {
    "id": "<anonymous>~Material#getRenderQueue",
    "longname": "<anonymous>~Material#getRenderQueue",
    "name": "getRenderQueue",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the render queue of this material",
    "memberof": "<anonymous>~Material",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 212,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1888
  },
  {
    "id": "<anonymous>~Material#setRenderQueue",
    "longname": "<anonymous>~Material#setRenderQueue",
    "name": "setRenderQueue",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the render queue of this material",
    "memberof": "<anonymous>~Material",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "See {@link RenderQueue} for options",
        "name": "queue"
      }
    ],
    "meta": {
      "lineno": 225,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1889
  },
  {
    "id": "<anonymous>~Material#clone",
    "longname": "<anonymous>~Material#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this material",
    "memberof": "<anonymous>~Material",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Cloning this material clones the uniforms by default",
        "name": "options.shareUniforms"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Cloning this material clones the textures by default",
        "name": "options.shareTextures"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Material"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 236,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1890
  },
  {
    "id": "<anonymous>~MeshData#rebuildData",
    "longname": "<anonymous>~MeshData#rebuildData",
    "name": "rebuildData",
    "scope": "instance",
    "kind": "function",
    "description": "Rebuilds the mesh vertex and index data",
    "memberof": "<anonymous>~MeshData",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "vertexCount"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "indexCount"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "saveOldData"
      }
    ],
    "meta": {
      "lineno": 89,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1901
  },
  {
    "id": "<anonymous>~MeshData#setVertexDataUpdated",
    "longname": "<anonymous>~MeshData#setVertexDataUpdated",
    "name": "setVertexDataUpdated",
    "scope": "instance",
    "kind": "function",
    "description": "Requests a refresh on the vertex data",
    "memberof": "<anonymous>~MeshData",
    "meta": {
      "lineno": 172,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1904
  },
  {
    "id": "<anonymous>~MeshData#applyTransform",
    "longname": "<anonymous>~MeshData#applyTransform",
    "name": "applyTransform",
    "scope": "instance",
    "kind": "function",
    "description": "Applies a transformation on a specified attribute buffer",
    "memberof": "<anonymous>~MeshData",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attributeName"
      },
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "name": "transform"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 490,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1905
  },
  {
    "id": "<anonymous>~MeshData#applyFunction",
    "longname": "<anonymous>~MeshData#applyFunction",
    "name": "applyFunction",
    "scope": "instance",
    "kind": "function",
    "description": "Applies a function on the vertices of a specified attribute buffer",
    "memberof": "<anonymous>~MeshData",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attributeName"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "fun"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 530,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1906
  },
  {
    "id": "<anonymous>~MeshData#getNormalsMeshData",
    "longname": "<anonymous>~MeshData#getNormalsMeshData",
    "name": "getNormalsMeshData",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a new MeshData object representing the normals of the current MeshData object",
    "memberof": "<anonymous>~MeshData",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "The size of the normals",
        "name": "size"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 591,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1907
  },
  {
    "id": "<anonymous>~MeshData#buildWireframeData",
    "longname": "<anonymous>~MeshData#buildWireframeData",
    "name": "buildWireframeData",
    "scope": "instance",
    "kind": "function",
    "description": "Builds the wireframe MeshData from an existing mesh",
    "memberof": "<anonymous>~MeshData",
    "returns": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 633,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1908
  },
  {
    "id": "<anonymous>~MeshData#buildFlatMeshData",
    "longname": "<anonymous>~MeshData#buildFlatMeshData",
    "name": "buildFlatMeshData",
    "scope": "instance",
    "kind": "function",
    "description": "Builds flat meshdata from mesh",
    "memberof": "<anonymous>~MeshData",
    "returns": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 726,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1909
  },
  {
    "id": "<anonymous>~MeshData#destroy",
    "longname": "<anonymous>~MeshData#destroy",
    "name": "destroy",
    "scope": "instance",
    "kind": "function",
    "description": "Destroys all attached vertex and index data.",
    "memberof": "<anonymous>~MeshData",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderingContext"
          ]
        },
        "name": "context"
      }
    ],
    "meta": {
      "lineno": 832,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1910
  },
  {
    "id": "<anonymous>~MeshData#clone",
    "longname": "<anonymous>~MeshData#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this mesh data",
    "memberof": "<anonymous>~MeshData",
    "returns": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 845,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1911
  },
  {
    "id": "<anonymous>~Composer#destroy",
    "longname": "<anonymous>~Composer#destroy",
    "name": "destroy",
    "scope": "instance",
    "kind": "function",
    "description": "Deallocate all allocated WebGL buffers, listeners, and passes.",
    "memberof": "<anonymous>~Composer",
    "params": [
      {
        "type": {
          "names": [
            "Renderer"
          ]
        },
        "name": "renderer"
      }
    ],
    "meta": {
      "lineno": 52,
      "filename": "Composer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/pass"
    },
    "order": 1926
  },
  {
    "id": "<anonymous>~Composer#deallocateBuffers",
    "longname": "<anonymous>~Composer#deallocateBuffers",
    "name": "deallocateBuffers",
    "scope": "instance",
    "kind": "function",
    "description": "Deallocate the read and write buffers.",
    "memberof": "<anonymous>~Composer",
    "params": [
      {
        "type": {
          "names": [
            "Renderer"
          ]
        },
        "name": "renderer"
      }
    ],
    "meta": {
      "lineno": 65,
      "filename": "Composer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/pass"
    },
    "order": 1927
  },
  {
    "id": "<anonymous>~RenderTarget#getSizeInMemory",
    "longname": "<anonymous>~RenderTarget#getSizeInMemory",
    "name": "getSizeInMemory",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the number of bytes this render target occupies in memory",
    "memberof": "<anonymous>~RenderTarget",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 84,
      "filename": "RenderTarget.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/pass"
    },
    "order": 1936
  },
  {
    "id": "<anonymous>~RenderTarget#destroy",
    "longname": "<anonymous>~RenderTarget#destroy",
    "name": "destroy",
    "scope": "instance",
    "kind": "function",
    "description": "Deallocates all allocated resources from the WebGL context.",
    "memberof": "<anonymous>~RenderTarget",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderingContext"
          ]
        },
        "name": "context"
      }
    ],
    "meta": {
      "lineno": 98,
      "filename": "RenderTarget.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/pass"
    },
    "order": 1937
  },
  {
    "id": "<anonymous>~Renderer#setupDebugging",
    "longname": "<anonymous>~Renderer#setupDebugging",
    "name": "setupDebugging",
    "scope": "instance",
    "kind": "function",
    "description": "Enables debug mode on the webgl context for easier development.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "parameters"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "parameters.validate"
      }
    ],
    "meta": {
      "lineno": 204,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1950
  },
  {
    "id": "<anonymous>~Renderer#establishContext",
    "longname": "<anonymous>~Renderer#establishContext",
    "name": "establishContext",
    "scope": "instance",
    "kind": "function",
    "description": "Fetches a working webgl context element and sets it to the Renderer.",
    "memberof": "<anonymous>~Renderer",
    "meta": {
      "lineno": 236,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1951
  },
  {
    "id": "<anonymous>~Renderer#onDebugError",
    "longname": "<anonymous>~Renderer#onDebugError",
    "name": "onDebugError",
    "scope": "instance",
    "kind": "function",
    "description": "Outputs the webgl errors with the respective erroring function name and arguments using console.error.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "err"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "functionName"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "name": "args"
      }
    ],
    "meta": {
      "lineno": 320,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1954
  },
  {
    "id": "<anonymous>~Renderer#checkResize",
    "longname": "<anonymous>~Renderer#checkResize",
    "name": "checkResize",
    "scope": "instance",
    "kind": "function",
    "description": "Checks if this.domElement.offsetWidth or Height / this.downScale is unequal to this.domElement.width or height.\nIf that is the case it will call this.setSize.\nAlso checks if the camera aspect changed and updates it by calling camera.setFrustumPerspective().",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Camera"
          ]
        },
        "optional": true,
        "description": "optional camera argument.",
        "name": "camera"
      }
    ],
    "meta": {
      "lineno": 344,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1955
  },
  {
    "id": "<anonymous>~Renderer#setSize",
    "longname": "<anonymous>~Renderer#setSize",
    "name": "setSize",
    "scope": "instance",
    "kind": "function",
    "description": "Sets this.domElement.width and height using the parameters.\nThen it calls this.setViewport(0, 0, width, height);\nFinally it resets the hardwarePicking.pickingTarget.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Aspect ratio corrected width.",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Aspect ratio corrected height.",
        "name": "height"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Full viewport width.",
        "name": "fullWidth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Full viewport height.",
        "name": "fullHeight"
      }
    ],
    "meta": {
      "lineno": 389,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1956
  },
  {
    "id": "<anonymous>~Renderer#setViewport",
    "longname": "<anonymous>~Renderer#setViewport",
    "name": "setViewport",
    "scope": "instance",
    "kind": "function",
    "description": "Sets this.viewportX and viewportY to the parameters or to 0.\nSets this.viewportWidth and viewportHeight to the parameters or to this.domElement.width and height.\nFinally it calls this.context.viewport(x, y, w, h) with the resulting values.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "optional x coordinate.",
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "optional y coordinate.",
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "optional width coordinate.",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "optional height coordinate.",
        "name": "height"
      }
    ],
    "meta": {
      "lineno": 428,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1957
  },
  {
    "id": "<anonymous>~Renderer#setClearColor",
    "longname": "<anonymous>~Renderer#setClearColor",
    "name": "setClearColor",
    "scope": "instance",
    "kind": "function",
    "description": "Set the background color of the 3D view. All colors are defined in the range 0.0 - 1.0.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Red value.",
        "name": "r"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Green value.",
        "name": "g"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Blue value.",
        "name": "b"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Alpha value.",
        "name": "a"
      }
    ],
    "meta": {
      "lineno": 453,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1958
  },
  {
    "id": "<anonymous>~Renderer#bindData",
    "longname": "<anonymous>~Renderer#bindData",
    "name": "bindData",
    "scope": "instance",
    "kind": "function",
    "description": "Binds the given BufferData's buffer, or creates a buffer and bind it if none exist.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "BufferData"
          ]
        },
        "description": "BufferData to bind.",
        "name": "bufferData"
      }
    ],
    "meta": {
      "lineno": 476,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1959
  },
  {
    "id": "<anonymous>~Renderer#updateAttributeData",
    "longname": "<anonymous>~Renderer#updateAttributeData",
    "name": "updateAttributeData",
    "scope": "instance",
    "kind": "function",
    "description": "Update the data buffer of an attribute at it's offset location.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "ArrayBuffer"
          ]
        },
        "description": "New attribute data buffer.",
        "name": "attributeData"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The starting location offset to the attribute buffer.",
        "name": "offset"
      }
    ],
    "meta": {
      "lineno": 502,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1960
  },
  {
    "id": "<anonymous>~Renderer#updateShadows",
    "longname": "<anonymous>~Renderer#updateShadows",
    "name": "updateShadows",
    "scope": "instance",
    "kind": "function",
    "description": "Update the shadowHandler for the provided entities and lights.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "SimplePartitioner"
          ]
        },
        "description": "The partitioner used to determine what gets to be shadowed.",
        "name": "partitioner"
      },
      {
        "type": {
          "names": [
            "Array.<Entity>"
          ]
        },
        "description": "Array of all the entities to cast shadows.",
        "name": "entities"
      },
      {
        "type": {
          "names": [
            "Array.<Light>"
          ]
        },
        "description": "Array of all the lights to cast shadows for.",
        "name": "lights"
      }
    ],
    "meta": {
      "lineno": 517,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1961
  },
  {
    "id": "<anonymous>~Renderer#preloadTexture",
    "longname": "<anonymous>~Renderer#preloadTexture",
    "name": "preloadTexture",
    "scope": "instance",
    "kind": "function",
    "description": "Preloads a texture.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderingContext"
          ]
        },
        "name": "context"
      },
      {
        "type": {
          "names": [
            "Texture"
          ]
        },
        "name": "texture"
      }
    ],
    "meta": {
      "lineno": 527,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1962
  },
  {
    "id": "<anonymous>~Renderer#preloadMaterials",
    "longname": "<anonymous>~Renderer#preloadMaterials",
    "name": "preloadMaterials",
    "scope": "instance",
    "kind": "function",
    "description": "Preloads textures that come with the materials on the supplied \"renderables\".",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "An array of all the \"renderables\".",
        "name": "renderList"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 681,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1964
  },
  {
    "id": "<anonymous>~Renderer#clearShaderCache",
    "longname": "<anonymous>~Renderer#clearShaderCache",
    "name": "clearShaderCache",
    "scope": "instance",
    "kind": "function",
    "description": "Remove all shaders from cache.",
    "memberof": "<anonymous>~Renderer",
    "meta": {
      "lineno": 730,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1966
  },
  {
    "id": "<anonymous>~Renderer#precompileShaders",
    "longname": "<anonymous>~Renderer#precompileShaders",
    "name": "precompileShaders",
    "scope": "instance",
    "kind": "function",
    "description": "Precompiles shaders of the supplied \"renderables\".",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "An array of all the \"renderables\".",
        "name": "renderList"
      },
      {
        "type": {
          "names": [
            "Array.<Light>"
          ]
        },
        "name": "lights"
      }
    ],
    "meta": {
      "lineno": 740,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1967
  },
  {
    "id": "<anonymous>~Renderer#preloadBuffers",
    "longname": "<anonymous>~Renderer#preloadBuffers",
    "name": "preloadBuffers",
    "scope": "instance",
    "kind": "function",
    "description": "Creates buffers of the supplied renderList.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "An array of \"renderables\".",
        "name": "renderList"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 780,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1968
  },
  {
    "id": "<anonymous>~Renderer#preloadBuffer",
    "longname": "<anonymous>~Renderer#preloadBuffer",
    "name": "preloadBuffer",
    "scope": "instance",
    "kind": "function",
    "description": "Creates buffers of the supplied \"renderables\".",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "name": "renderables"
      },
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "material"
      },
      {
        "type": {
          "names": [
            "RenderInfo"
          ]
        },
        "name": "renderInfo"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 812,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1969
  },
  {
    "id": "<anonymous>~Renderer#render",
    "longname": "<anonymous>~Renderer#render",
    "name": "render",
    "scope": "instance",
    "kind": "function",
    "description": "Renders a \"renderable\" or a list of renderables. Handles all setup and updates of materials/shaders and states.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Array.<Entity>"
          ]
        },
        "description": "A list of \"renderables\". Eg Entities with the right components or objects with mesh data, material and transform.",
        "name": "renderList"
      },
      {
        "type": {
          "names": [
            "Camera"
          ]
        },
        "description": "Main camera for rendering.",
        "name": "camera"
      },
      {
        "type": {
          "names": [
            "Array.<Light>"
          ]
        },
        "description": "Lights used in the rendering.",
        "name": "lights"
      },
      {
        "type": {
          "names": [
            "RenderTarget"
          ]
        },
        "optional": true,
        "defaultvalue": null,
        "description": "Optional rendertarget to use as target for rendering, or null to render to the screen.",
        "name": "renderTarget"
      },
      {
        "type": {
          "names": [
            "boolean",
            "Object"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "true/false to clear or not clear all types, or an object in the form <code>{color:true/false, depth:true/false, stencil:true/false}</code>",
        "name": "clear"
      },
      {
        "type": {
          "names": [
            "Array.<Material>"
          ]
        },
        "optional": true,
        "description": "Optional list of materials to override the renderList materials.",
        "name": "overrideMaterials"
      }
    ],
    "meta": {
      "lineno": 898,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1970
  },
  {
    "id": "<anonymous>~Renderer#_override",
    "longname": "<anonymous>~Renderer#_override",
    "name": "_override",
    "scope": "instance",
    "kind": "function",
    "description": "Fills the store parameter with the combined properties of mat1 and mat2.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "mat1"
      },
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "mat2"
      },
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 968,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1971
  },
  {
    "id": "<anonymous>~Renderer#renderMesh",
    "longname": "<anonymous>~Renderer#renderMesh",
    "name": "renderMesh",
    "scope": "instance",
    "kind": "function",
    "description": "Renders a mesh from a RenderInfo.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "RenderInfo"
          ]
        },
        "name": "renderInfo"
      }
    ],
    "meta": {
      "lineno": 1005,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1972
  },
  {
    "id": "<anonymous>~Renderer#callShaderProcessors",
    "longname": "<anonymous>~Renderer#callShaderProcessors",
    "name": "callShaderProcessors",
    "scope": "instance",
    "kind": "function",
    "description": "Call the shader processors of the given material and update material cache.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "material"
      },
      {
        "type": {
          "names": [
            "RenderInfo"
          ]
        },
        "name": "renderInfo"
      }
    ],
    "meta": {
      "lineno": 1051,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1973
  },
  {
    "id": "<anonymous>~Renderer#renderMeshMaterial",
    "longname": "<anonymous>~Renderer#renderMeshMaterial",
    "name": "renderMeshMaterial",
    "scope": "instance",
    "kind": "function",
    "description": "Render a material with the given parameters.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "materialIndex"
      },
      {
        "type": {
          "names": [
            "Array.<Material>"
          ]
        },
        "name": "materials"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "flatOrWire"
      },
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "name": "originalData"
      },
      {
        "type": {
          "names": [
            "RenderInfo"
          ]
        },
        "name": "renderInfo"
      }
    ],
    "meta": {
      "lineno": 1066,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1974
  },
  {
    "id": "<anonymous>~Renderer#_drawBuffers",
    "longname": "<anonymous>~Renderer#_drawBuffers",
    "name": "_drawBuffers",
    "scope": "instance",
    "kind": "function",
    "description": "Draw the buffers of a MeshData using the specified index-mode.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "name": "meshData"
      }
    ],
    "meta": {
      "lineno": 1106,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1975
  },
  {
    "id": "<anonymous>~Renderer#configureRenderInfo",
    "longname": "<anonymous>~Renderer#configureRenderInfo",
    "name": "configureRenderInfo",
    "scope": "instance",
    "kind": "function",
    "description": "Decides which MeshData and Material to set on the renderInfo parameter object, also returns the specified material.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "RenderInfo"
          ]
        },
        "name": "renderInfo"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "materialIndex"
      },
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "material"
      },
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "orMaterial"
      },
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "name": "originalData"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Can be one of 'flat' or 'wire'",
        "name": "flatOrWire"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Material"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 1134,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1976
  },
  {
    "id": "<anonymous>~Renderer#findOrCacheMaterialShader",
    "longname": "<anonymous>~Renderer#findOrCacheMaterialShader",
    "name": "findOrCacheMaterialShader",
    "scope": "instance",
    "kind": "function",
    "description": "Finds shader of the material in the cache, or add it to the cache if not added yet. Then update the uniforms to the cached shader.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "material"
      },
      {
        "type": {
          "names": [
            "RenderInfo"
          ]
        },
        "name": "renderInfo"
      }
    ],
    "meta": {
      "lineno": 1189,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1977
  },
  {
    "id": "<anonymous>~Renderer#_checkDualTransparency",
    "longname": "<anonymous>~Renderer#_checkDualTransparency",
    "name": "_checkDualTransparency",
    "scope": "instance",
    "kind": "function",
    "description": "Checks a material for dualTransparency and if enabled, draws the MeshData buffers again with inverse cullFace.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "material"
      },
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "name": "meshData"
      }
    ],
    "meta": {
      "lineno": 1235,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1978
  },
  {
    "id": "<anonymous>~Renderer#readPixels",
    "longname": "<anonymous>~Renderer#readPixels",
    "name": "readPixels",
    "scope": "instance",
    "kind": "function",
    "description": "Read pixels from current framebuffer to a typed array (ArrayBufferView).",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "x offset of rectangle to read from.",
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "y offset of rectangle to read from.",
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "width of rectangle to read from.",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "height of rectangle to read from.",
        "name": "height"
      },
      {
        "type": {
          "names": [
            "ArrayBufferView"
          ]
        },
        "description": "ArrayBufferView to store data in (Uint8Array).",
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 1257,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1979
  },
  {
    "id": "<anonymous>~Renderer#readTexturePixels",
    "longname": "<anonymous>~Renderer#readTexturePixels",
    "name": "readTexturePixels",
    "scope": "instance",
    "kind": "function",
    "description": "Read pixels from a texture to a typed array (ArrayBufferView).",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Texture"
          ]
        },
        "description": "texture to read pixels from.",
        "name": "texture"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "x offset of rectangle to read from.",
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "y offset of rectangle to read from.",
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "width of rectangle to read from.",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "height of rectangle to read from.",
        "name": "height"
      },
      {
        "type": {
          "names": [
            "ArrayBufferView"
          ]
        },
        "description": "ArrayBufferView to store data in (Uint8Array).",
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 1274,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1980
  },
  {
    "id": "<anonymous>~Renderer#drawElementsVBO",
    "longname": "<anonymous>~Renderer#drawElementsVBO",
    "name": "drawElementsVBO",
    "scope": "instance",
    "kind": "function",
    "description": "Draws a vertex buffer object (VBO) using drawElements.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "BufferData"
          ]
        },
        "description": "The index-buffer.",
        "name": "indices"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "Array of index-modes.",
        "name": "indexModes"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "Array of index-counts per index-mode.",
        "name": "indexLengths"
      }
    ],
    "meta": {
      "lineno": 1294,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1981
  },
  {
    "id": "<anonymous>~Renderer#drawArraysVBO",
    "longname": "<anonymous>~Renderer#drawArraysVBO",
    "name": "drawArraysVBO",
    "scope": "instance",
    "kind": "function",
    "description": "Draws a vertex buffer object (VBO) using drawArrays.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "Array of index-modes.",
        "name": "indexModes"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "Array of index-counts per index-mode.",
        "name": "indexLengths"
      }
    ],
    "meta": {
      "lineno": 1320,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1982
  },
  {
    "id": "<anonymous>~Renderer#renderToPick",
    "longname": "<anonymous>~Renderer#renderToPick",
    "name": "renderToPick",
    "scope": "instance",
    "kind": "function",
    "description": "Render entities to be used with the Renderer.pick.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Array.<Entity>"
          ]
        },
        "description": "A list of \"renderables\". Eg Entities with the right components or objects with mesh data, material and transform.",
        "name": "renderList"
      },
      {
        "type": {
          "names": [
            "Camera"
          ]
        },
        "description": "Main camera for rendering to pick.",
        "name": "camera"
      },
      {
        "type": {
          "names": [
            "boolean",
            "Object"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "true/false to clear or not clear all types, or an object in the form <code>{color:true/false, depth:true/false, stencil:true/false}</code>",
        "name": "clear"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "skipUpdateBuffer"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "doScissor"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "scissor position X.",
        "name": "clientX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "scissor position Y.",
        "name": "clientY"
      },
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "description": "Custom picking material.",
        "name": "customPickingMaterial"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "skipOverride"
      }
    ],
    "meta": {
      "lineno": 1351,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1983
  },
  {
    "id": "<anonymous>~Renderer#pick",
    "longname": "<anonymous>~Renderer#pick",
    "name": "pick",
    "scope": "instance",
    "kind": "function",
    "description": "Determine what entity ID is at a specific pixel of the camera.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "pixel position X to pick at.",
        "name": "clientX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "pixel position Y to pick at.",
        "name": "clientY"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "An object with variables 'id' and 'depth' to be populated by the function.",
        "name": "pickingStore"
      },
      {
        "type": {
          "names": [
            "Camera"
          ]
        },
        "description": "Same camera that was used with Renderer.renderToPick.",
        "name": "camera"
      }
    ],
    "meta": {
      "lineno": 1425,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1984
  },
  {
    "id": "<anonymous>~Renderer#updateLineAndPointSettings",
    "longname": "<anonymous>~Renderer#updateLineAndPointSettings",
    "name": "updateLineAndPointSettings",
    "scope": "instance",
    "kind": "function",
    "description": "Update the webgl contexts line and point settings.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "material"
      }
    ],
    "meta": {
      "lineno": 1450,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1985
  },
  {
    "id": "<anonymous>~Renderer#updateDepthTest",
    "longname": "<anonymous>~Renderer#updateDepthTest",
    "name": "updateDepthTest",
    "scope": "instance",
    "kind": "function",
    "description": "Update the webgl contexts depth test settings.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "material"
      }
    ],
    "meta": {
      "lineno": 1465,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1986
  },
  {
    "id": "<anonymous>~Renderer#updateCulling",
    "longname": "<anonymous>~Renderer#updateCulling",
    "name": "updateCulling",
    "scope": "instance",
    "kind": "function",
    "description": "Update the webgl contexts culling settings.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "material"
      }
    ],
    "meta": {
      "lineno": 1493,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1987
  },
  {
    "id": "<anonymous>~Renderer#updateTextures",
    "longname": "<anonymous>~Renderer#updateTextures",
    "name": "updateTextures",
    "scope": "instance",
    "kind": "function",
    "description": "Update the webgl contexts settings concerning textures.\nupdates the material textures if necessary.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "material"
      }
    ],
    "meta": {
      "lineno": 1534,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1988
  },
  {
    "id": "<anonymous>~Renderer#updateTextureParameters",
    "longname": "<anonymous>~Renderer#updateTextureParameters",
    "name": "updateTextureParameters",
    "scope": "instance",
    "kind": "function",
    "description": "Update the webgl contexts settings of a single texture, such as filtering and wrapping.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Texture"
          ]
        },
        "name": "texture"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "isImagePowerOfTwo"
      }
    ],
    "meta": {
      "lineno": 1595,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1989
  },
  {
    "id": "<anonymous>~Renderer#bindTexture",
    "longname": "<anonymous>~Renderer#bindTexture",
    "name": "bindTexture",
    "scope": "instance",
    "kind": "function",
    "description": "Binds a texture to webgl.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderingContext"
          ]
        },
        "name": "context"
      },
      {
        "type": {
          "names": [
            "Texture"
          ]
        },
        "name": "texture"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The index for the textureRecord.",
        "name": "unit"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "record"
      }
    ],
    "meta": {
      "lineno": 1641,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1990
  },
  {
    "id": "<anonymous>~Renderer#unbindTexture",
    "longname": "<anonymous>~Renderer#unbindTexture",
    "name": "unbindTexture",
    "scope": "instance",
    "kind": "function",
    "description": "Unbinds a texture from webgl.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderingContext"
          ]
        },
        "name": "context"
      },
      {
        "type": {
          "names": [
            "Texture"
          ]
        },
        "name": "texture"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The index for the textureRecord.",
        "name": "unit"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "record"
      }
    ],
    "meta": {
      "lineno": 1657,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1991
  },
  {
    "id": "<anonymous>~Renderer#loadCompressedTexture",
    "longname": "<anonymous>~Renderer#loadCompressedTexture",
    "name": "loadCompressedTexture",
    "scope": "instance",
    "kind": "function",
    "description": "Loads a compressed texture into webgl and optionally generates mipmaps.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderingContext"
          ]
        },
        "name": "context"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "For example context.TEXTURE_2D.",
        "name": "target"
      },
      {
        "type": {
          "names": [
            "Texture"
          ]
        },
        "name": "texture"
      },
      {
        "type": {
          "names": [
            "Uint8Array",
            "ArrayBufferView"
          ]
        },
        "description": "The image data object.",
        "name": "imageData"
      }
    ],
    "meta": {
      "lineno": 1671,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1992
  },
  {
    "id": "<anonymous>~Renderer#updateTexture",
    "longname": "<anonymous>~Renderer#updateTexture",
    "name": "updateTexture",
    "scope": "instance",
    "kind": "function",
    "description": "Updates a texture in webgl with the Texture objects settings.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderingContext"
          ]
        },
        "name": "context"
      },
      {
        "type": {
          "names": [
            "Texture"
          ]
        },
        "name": "texture"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "unit"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "record"
      }
    ],
    "meta": {
      "lineno": 1745,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1993
  },
  {
    "id": "<anonymous>~Renderer#checkRescale",
    "longname": "<anonymous>~Renderer#checkRescale",
    "name": "checkRescale",
    "scope": "instance",
    "kind": "function",
    "description": "Updates a texture in webgl with the Texture objects settings.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Texture"
          ]
        },
        "name": "texture"
      },
      {
        "type": {
          "names": [
            "Image"
          ]
        },
        "description": "Can be an Image, TypedArray or an array of Images (for cubemaps).",
        "name": "image"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The new image width.",
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The new image height.",
        "name": "height"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "maxSize"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "index"
      }
    ],
    "meta": {
      "lineno": 1841,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1994
  },
  {
    "id": "<anonymous>~Renderer#updateBlending",
    "longname": "<anonymous>~Renderer#updateBlending",
    "name": "updateBlending",
    "scope": "instance",
    "kind": "function",
    "description": "Update the blend settings on the webgl context.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "material"
      }
    ],
    "meta": {
      "lineno": 1850,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1995
  },
  {
    "id": "<anonymous>~Renderer#updateOffset",
    "longname": "<anonymous>~Renderer#updateOffset",
    "name": "updateOffset",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the polygon offset settings on the webgl context.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Material"
          ]
        },
        "name": "material"
      }
    ],
    "meta": {
      "lineno": 1938,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1996
  },
  {
    "id": "<anonymous>~Renderer#setBoundBuffer",
    "longname": "<anonymous>~Renderer#setBoundBuffer",
    "name": "setBoundBuffer",
    "scope": "instance",
    "kind": "function",
    "description": "Binds a buffer to the webgl context.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "WebGLBuffer"
          ]
        },
        "name": "buffer"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "for example 'ArrayBuffer'.",
        "name": "target"
      }
    ],
    "meta": {
      "lineno": 1970,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1997
  },
  {
    "id": "<anonymous>~Renderer#bindVertexAttribute",
    "longname": "<anonymous>~Renderer#bindVertexAttribute",
    "name": "bindVertexAttribute",
    "scope": "instance",
    "kind": "function",
    "description": "Binds vertex attributes to the webgl context.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "attribIndex"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "See MeshData.createAttribute for definition.",
        "name": "attribute"
      }
    ],
    "meta": {
      "lineno": 1988,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1998
  },
  {
    "id": "<anonymous>~Renderer#clear",
    "longname": "<anonymous>~Renderer#clear",
    "name": "clear",
    "scope": "instance",
    "kind": "function",
    "description": "Clears the webgl context with the specified options.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "color"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "depth"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "stencil"
      }
    ],
    "meta": {
      "lineno": 2003,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1999
  },
  {
    "id": "<anonymous>~Renderer#flush",
    "longname": "<anonymous>~Renderer#flush",
    "name": "flush",
    "scope": "instance",
    "kind": "function",
    "description": "Flushes the webgl context.",
    "memberof": "<anonymous>~Renderer",
    "meta": {
      "lineno": 2031,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2000
  },
  {
    "id": "<anonymous>~Renderer#finish",
    "longname": "<anonymous>~Renderer#finish",
    "name": "finish",
    "scope": "instance",
    "kind": "function",
    "description": "calls finish on the webgl context.",
    "memberof": "<anonymous>~Renderer",
    "meta": {
      "lineno": 2039,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2001
  },
  {
    "id": "<anonymous>~Renderer#setupFrameBuffer",
    "longname": "<anonymous>~Renderer#setupFrameBuffer",
    "name": "setupFrameBuffer",
    "scope": "instance",
    "kind": "function",
    "description": "Setup a Frame Buffer Object with the supplied render target.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "WebGLFramebuffer"
          ]
        },
        "name": "framebuffer"
      },
      {
        "type": {
          "names": [
            "RenderTarget"
          ]
        },
        "name": "renderTarget"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "For instance context.TEXTURE_2D.",
        "name": "textureTarget"
      }
    ],
    "meta": {
      "lineno": 2052,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2002
  },
  {
    "id": "<anonymous>~Renderer#setupRenderBuffer",
    "longname": "<anonymous>~Renderer#setupRenderBuffer",
    "name": "setupRenderBuffer",
    "scope": "instance",
    "kind": "function",
    "description": "Setup an Render Buffer Object with the supplied render target.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderbuffer"
          ]
        },
        "name": "renderbuffer"
      },
      {
        "type": {
          "names": [
            "RenderTarget"
          ]
        },
        "name": "renderTarget"
      }
    ],
    "meta": {
      "lineno": 2064,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2003
  },
  {
    "id": "<anonymous>~Renderer#setRenderTarget",
    "longname": "<anonymous>~Renderer#setRenderTarget",
    "name": "setRenderTarget",
    "scope": "instance",
    "kind": "function",
    "description": "Binds the supplied render target's FBO to the webgl context.\nCreates FBO and RBO for the render target if not set already.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "RenderTarget"
          ]
        },
        "name": "renderTarget"
      }
    ],
    "meta": {
      "lineno": 2090,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2004
  },
  {
    "id": "<anonymous>~Renderer#updateRenderTargetMipmap",
    "longname": "<anonymous>~Renderer#updateRenderTargetMipmap",
    "name": "updateRenderTargetMipmap",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the render targets mipmaps.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "RenderTarget"
          ]
        },
        "name": "renderTarget"
      }
    ],
    "meta": {
      "lineno": 2168,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2005
  },
  {
    "id": "<anonymous>~Renderer#_deallocateMeshData",
    "longname": "<anonymous>~Renderer#_deallocateMeshData",
    "name": "_deallocateMeshData",
    "scope": "instance",
    "kind": "function",
    "description": "Deallocates a meshdata with the Renderer's webgl context.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "name": "meshData"
      }
    ],
    "meta": {
      "lineno": 2180,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2006
  },
  {
    "id": "<anonymous>~Renderer#_deallocateTexture",
    "longname": "<anonymous>~Renderer#_deallocateTexture",
    "name": "_deallocateTexture",
    "scope": "instance",
    "kind": "function",
    "description": "Deallocates a texture with the Renderer's webgl context.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Texture"
          ]
        },
        "name": "texture"
      }
    ],
    "meta": {
      "lineno": 2189,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2007
  },
  {
    "id": "<anonymous>~Renderer#_deallocateRenderTarget",
    "longname": "<anonymous>~Renderer#_deallocateRenderTarget",
    "name": "_deallocateRenderTarget",
    "scope": "instance",
    "kind": "function",
    "description": "Deallocates a render target with the Renderer's webgl context.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "RenderTarget"
          ]
        },
        "name": "renderTarget"
      }
    ],
    "meta": {
      "lineno": 2198,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2008
  },
  {
    "id": "<anonymous>~Renderer#_deallocateShader",
    "longname": "<anonymous>~Renderer#_deallocateShader",
    "name": "_deallocateShader",
    "scope": "instance",
    "kind": "function",
    "description": "Deallocates a shader.",
    "memberof": "<anonymous>~Renderer",
    "params": [
      {
        "type": {
          "names": [
            "Shader"
          ]
        },
        "name": "shader"
      }
    ],
    "meta": {
      "lineno": 2207,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2009
  },
  {
    "id": "<anonymous>~RenderInfo#reset",
    "longname": "<anonymous>~RenderInfo#reset",
    "name": "reset",
    "scope": "instance",
    "kind": "function",
    "description": "Reset for switching renderable",
    "memberof": "<anonymous>~RenderInfo",
    "meta": {
      "lineno": 28,
      "filename": "RenderInfo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2018
  },
  {
    "id": "<anonymous>~RenderInfo#fill",
    "longname": "<anonymous>~RenderInfo#fill",
    "name": "fill",
    "scope": "instance",
    "kind": "function",
    "description": "Populates data from renderable",
    "memberof": "<anonymous>~RenderInfo",
    "meta": {
      "lineno": 47,
      "filename": "RenderInfo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2019
  },
  {
    "id": "<anonymous>~RenderQueue#sort",
    "longname": "<anonymous>~RenderQueue#sort",
    "name": "sort",
    "scope": "instance",
    "kind": "function",
    "memberof": "<anonymous>~RenderQueue",
    "params": [
      {
        "type": {
          "names": [
            "Array.<Entity>"
          ]
        },
        "name": "renderList"
      },
      {
        "type": {
          "names": [
            "Camera"
          ]
        },
        "name": "camera"
      }
    ],
    "meta": {
      "lineno": 47,
      "filename": "RenderQueue.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2021
  },
  {
    "id": "<anonymous>~Texture#checkDataReady",
    "longname": "<anonymous>~Texture#checkDataReady",
    "name": "checkDataReady",
    "scope": "instance",
    "kind": "function",
    "description": "Checks if the texture's data is ready.",
    "memberof": "<anonymous>~Texture",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if ready."
      }
    ],
    "meta": {
      "lineno": 133,
      "filename": "Texture.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2052
  },
  {
    "id": "<anonymous>~Texture#checkNeedsUpdate",
    "longname": "<anonymous>~Texture#checkNeedsUpdate",
    "name": "checkNeedsUpdate",
    "scope": "instance",
    "kind": "function",
    "description": "Checks if the texture needs an update.",
    "memberof": "<anonymous>~Texture",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if needed."
      }
    ],
    "meta": {
      "lineno": 141,
      "filename": "Texture.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2053
  },
  {
    "id": "<anonymous>~Texture#setNeedsUpdate",
    "longname": "<anonymous>~Texture#setNeedsUpdate",
    "name": "setNeedsUpdate",
    "scope": "instance",
    "kind": "function",
    "description": "Marks the texture as needing to be updated by the engine.",
    "memberof": "<anonymous>~Texture",
    "meta": {
      "lineno": 149,
      "filename": "Texture.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2054
  },
  {
    "id": "<anonymous>~Texture#setImage",
    "longname": "<anonymous>~Texture#setImage",
    "name": "setImage",
    "scope": "instance",
    "kind": "function",
    "description": "Sets an image on the texture object.",
    "memberof": "<anonymous>~Texture",
    "params": [
      {
        "type": {
          "names": [
            "Image"
          ]
        },
        "description": "The image to set. Can be an Image, TypedArray or an array of Images (for cubemaps)",
        "name": "image"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "name": "width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "name": "height"
      }
    ],
    "meta": {
      "lineno": 161,
      "filename": "Texture.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2055
  },
  {
    "id": "<anonymous>~Texture#destroy",
    "longname": "<anonymous>~Texture#destroy",
    "name": "destroy",
    "scope": "instance",
    "kind": "function",
    "description": "Releases the allocated texture",
    "memberof": "<anonymous>~Texture",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderingContext"
          ]
        },
        "name": "context"
      }
    ],
    "meta": {
      "lineno": 214,
      "filename": "Texture.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2056
  },
  {
    "id": "<anonymous>~Texture#getSizeInMemory",
    "longname": "<anonymous>~Texture#getSizeInMemory",
    "name": "getSizeInMemory",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the number of bytes this texture occupies in memory",
    "memberof": "<anonymous>~Texture",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 223,
      "filename": "Texture.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2057
  },
  {
    "id": "<anonymous>~Texture#clone",
    "longname": "<anonymous>~Texture#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this plane",
    "memberof": "<anonymous>~Texture",
    "returns": [
      {
        "type": {
          "names": [
            "Texture"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 260,
      "filename": "Texture.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2058
  },
  {
    "id": "<anonymous>~TextureCreator#clear",
    "longname": "<anonymous>~TextureCreator#clear",
    "name": "clear",
    "scope": "instance",
    "kind": "function",
    "description": "Releases any references to cached objects",
    "memberof": "<anonymous>~TextureCreator",
    "meta": {
      "lineno": 48,
      "filename": "TextureCreator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2061
  },
  {
    "id": "<anonymous>~TextureCreator#loadTexture2D",
    "longname": "<anonymous>~TextureCreator#loadTexture2D",
    "name": "loadTexture2D",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a texture and loads an image into it.",
    "memberof": "<anonymous>~TextureCreator",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "imageUrl"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "passed to the {Texture} constructor",
        "name": "settings"
      }
    ],
    "examples": [
      "new TextureCreator().loadTexture2D('goo.jpg').then(function (texture) {\n    material.setTexture('DIFFUSE_MAP', texture);\n}, function () {\n    console.error('Error loading image.');\n});"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Returns a promise that will resolve with the created Texture."
      }
    ],
    "meta": {
      "lineno": 65,
      "filename": "TextureCreator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2062
  },
  {
    "id": "<anonymous>~TextureCreator#loadTextureVideo",
    "longname": "<anonymous>~TextureCreator#loadTextureVideo",
    "name": "loadTextureVideo",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a texture and loads a video into it",
    "memberof": "<anonymous>~TextureCreator",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "videoURL"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "options.loop"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "options.autoPlay"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": "'EdgeClamp'",
        "name": "options.wrapS"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": "'EdgeClamp'",
        "name": "options.wrapT"
      }
    ],
    "examples": [
      "new TextureCreator().loadTexture2D('goo.mp4').then(function (texture) {\n    material.setTexture('DIFFUSE_MAP', texture);\n}, function () {\n    console.error('Error loading video texture.');\n});"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Returns a promise that will resolve with the created Texture."
      }
    ],
    "meta": {
      "lineno": 91,
      "filename": "TextureCreator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2063
  },
  {
    "id": "<anonymous>~TextureCreator#loadTextureWebCam",
    "longname": "<anonymous>~TextureCreator#loadTextureWebCam",
    "name": "loadTextureWebCam",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a video texture streamed from the webcam.",
    "memberof": "<anonymous>~TextureCreator",
    "examples": [
      "new TextureCreator().loadTextureWebCam().then(function (texture) {\n    material.setTexture('DIFFUSE_MAP', texture);\n}, function () {\n    console.error('Error loading webcam texture.');\n});"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "A promise that will resolve with the created Texture."
      }
    ],
    "meta": {
      "lineno": 117,
      "filename": "TextureCreator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2064
  },
  {
    "id": "<anonymous>~TextureCreator#loadTextureCube",
    "longname": "<anonymous>~TextureCreator#loadTextureCube",
    "name": "loadTextureCube",
    "scope": "instance",
    "kind": "function",
    "description": "Loads an array of six images into a Texture.",
    "memberof": "<anonymous>~TextureCreator",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "Array containing images, image elements or image urls. [left, right, bottom, top, back, front]",
        "name": "imageDataArray"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Settings object to pass to the Texture constructor",
        "name": "settings"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "A promise that will resolve with the resulting Texture"
      }
    ],
    "meta": {
      "lineno": 174,
      "filename": "TextureCreator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2065
  },
  {
    "id": "<anonymous>~GroundBoundMovementScript#setTerrainSystem",
    "longname": "<anonymous>~GroundBoundMovementScript#setTerrainSystem",
    "name": "setTerrainSystem",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the terrain script. This class requires that the terrain system can provide\nheight and normal for a given position when applicable. Without a terrain system the\nscript will fallback to the worldFloor height. (Defaults to -Infinity).",
    "memberof": "<anonymous>~GroundBoundMovementScript",
    "params": [
      {
        "type": {
          "names": [
            "WorldFittedTerrainScript"
          ]
        },
        "name": "terrainScript"
      }
    ],
    "meta": {
      "lineno": 62,
      "filename": "GroundBoundMovementScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2075
  },
  {
    "id": "<anonymous>~GroundBoundMovementScript#getTerrainSystem",
    "longname": "<anonymous>~GroundBoundMovementScript#getTerrainSystem",
    "name": "getTerrainSystem",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the terrain system.",
    "memberof": "<anonymous>~GroundBoundMovementScript",
    "returns": [
      {
        "type": {
          "names": [
            "WorldFittedTerrainScript"
          ]
        },
        "description": "terrainScript"
      }
    ],
    "meta": {
      "lineno": 71,
      "filename": "GroundBoundMovementScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2076
  },
  {
    "id": "<anonymous>~GroundBoundMovementScript#applyForward",
    "longname": "<anonymous>~GroundBoundMovementScript#applyForward",
    "name": "applyForward",
    "scope": "instance",
    "kind": "function",
    "description": "Request script to move along its forward axis. Becomes\nbackwards with negative amount.",
    "memberof": "<anonymous>~GroundBoundMovementScript",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "amount"
      }
    ],
    "meta": {
      "lineno": 106,
      "filename": "GroundBoundMovementScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2079
  },
  {
    "id": "<anonymous>~GroundBoundMovementScript#applyStrafe",
    "longname": "<anonymous>~GroundBoundMovementScript#applyStrafe",
    "name": "applyStrafe",
    "scope": "instance",
    "kind": "function",
    "description": "Applies strafe amount for sideways input.",
    "memberof": "<anonymous>~GroundBoundMovementScript",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "amount"
      }
    ],
    "meta": {
      "lineno": 114,
      "filename": "GroundBoundMovementScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2080
  },
  {
    "id": "<anonymous>~GroundBoundMovementScript#applyJump",
    "longname": "<anonymous>~GroundBoundMovementScript#applyJump",
    "name": "applyJump",
    "scope": "instance",
    "kind": "function",
    "description": "Applies jump input.",
    "memberof": "<anonymous>~GroundBoundMovementScript",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "amount"
      }
    ],
    "meta": {
      "lineno": 122,
      "filename": "GroundBoundMovementScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2081
  },
  {
    "id": "<anonymous>~GroundBoundMovementScript#applyTurn",
    "longname": "<anonymous>~GroundBoundMovementScript#applyTurn",
    "name": "applyTurn",
    "scope": "instance",
    "kind": "function",
    "description": "Applies turn input for rotation around the y-axis.",
    "memberof": "<anonymous>~GroundBoundMovementScript",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "amount"
      }
    ],
    "meta": {
      "lineno": 131,
      "filename": "GroundBoundMovementScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2082
  },
  {
    "id": "<anonymous>~HeightMapBoundingScript#getMatrixData",
    "longname": "<anonymous>~HeightMapBoundingScript#getMatrixData",
    "name": "getMatrixData",
    "scope": "instance",
    "kind": "function",
    "description": "Gets the terrain matrix data",
    "memberof": "<anonymous>~HeightMapBoundingScript",
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "the height data matrix"
      }
    ],
    "meta": {
      "lineno": 23,
      "filename": "HeightMapBoundingScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2098
  },
  {
    "id": "<anonymous>~PolyBoundingScript#addCollidable",
    "longname": "<anonymous>~PolyBoundingScript#addCollidable",
    "name": "addCollidable",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a `collidable`",
    "memberof": "<anonymous>~PolyBoundingScript",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "`Collidable` to add",
        "name": "collidable"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "An array of XZ coordinates representing the bounding polygon of the `collidable`",
        "name": "collidables[].poly"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The bottom Y coordinate of the collidable",
        "name": "collidables[].bottom"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The top Y coordinate of the collidable",
        "name": "collidables[].top"
      }
    ],
    "meta": {
      "lineno": 25,
      "filename": "PolyBoundingScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2103
  },
  {
    "id": "<anonymous>~PolyBoundingScript#removeAllAt",
    "longname": "<anonymous>~PolyBoundingScript#removeAllAt",
    "name": "removeAllAt",
    "scope": "instance",
    "kind": "function",
    "description": "Removes all `collidables` that contain the given point (x, y, z)",
    "memberof": "<anonymous>~PolyBoundingScript",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "meta": {
      "lineno": 35,
      "filename": "PolyBoundingScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2104
  },
  {
    "id": "<anonymous>~PolyBoundingScript#inside",
    "longname": "<anonymous>~PolyBoundingScript#inside",
    "name": "inside",
    "scope": "instance",
    "kind": "function",
    "description": "Checks if a point is inside any collidable",
    "memberof": "<anonymous>~PolyBoundingScript",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      }
    ],
    "meta": {
      "lineno": 49,
      "filename": "PolyBoundingScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2105
  },
  {
    "id": "<anonymous>~PolyBoundingScript#run",
    "longname": "<anonymous>~PolyBoundingScript#run",
    "name": "run",
    "scope": "instance",
    "kind": "function",
    "description": "The standard `run` routine of the script. Checks for collisions and repositions the host entity accordingly.\nThe entity's coordinates are obtained from the translation of its transformComponent. All collisions are performed against these coordinates only.",
    "memberof": "<anonymous>~PolyBoundingScript",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "name": "entity"
      }
    ],
    "meta": {
      "lineno": 66,
      "filename": "PolyBoundingScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2106
  },
  {
    "id": "<anonymous>~ScriptHandler#_create",
    "longname": "<anonymous>~ScriptHandler#_create",
    "name": "_create",
    "scope": "instance",
    "kind": "function",
    "description": "Creates a script data wrapper object to be used in the engine",
    "memberof": "<anonymous>~ScriptHandler",
    "meta": {
      "lineno": 55,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2113
  },
  {
    "id": "<anonymous>~ScriptHandler#_remove",
    "longname": "<anonymous>~ScriptHandler#_remove",
    "name": "_remove",
    "scope": "instance",
    "kind": "function",
    "description": "Remove this script from the cache, and runs the cleanup method of the script.",
    "memberof": "<anonymous>~ScriptHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the script guid",
        "name": "ref"
      }
    ],
    "meta": {
      "lineno": 72,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2114
  },
  {
    "id": "<anonymous>~ScriptHandler#_updateFromCustom",
    "longname": "<anonymous>~ScriptHandler#_updateFromCustom",
    "name": "_updateFromCustom",
    "scope": "instance",
    "kind": "function",
    "description": "Update a user-defined script (not a script available in the engine).\nIf the new body (in the data model config) differs from the cached body,\nthe script will be reloaded (by means of a script tag).",
    "memberof": "<anonymous>~ScriptHandler",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "the cached engine script object",
        "name": "script"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "the data model config",
        "name": "config"
      }
    ],
    "meta": {
      "lineno": 95,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2115
  },
  {
    "id": "<anonymous>~ScriptHandler#_updateFromClass",
    "longname": "<anonymous>~ScriptHandler#_updateFromClass",
    "name": "_updateFromClass",
    "scope": "instance",
    "kind": "function",
    "description": "Update a script that is from the engine. Checks if the class name has changed\nand if so, creates a new script object from the new class.",
    "memberof": "<anonymous>~ScriptHandler",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "needs to have a className property",
        "name": "script"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "data model config",
        "name": "config"
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 291,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2121
  },
  {
    "id": "<anonymous>~ScriptHandler#_addDependency",
    "longname": "<anonymous>~ScriptHandler#_addDependency",
    "name": "_addDependency",
    "scope": "instance",
    "kind": "function",
    "description": "Loads an external javascript lib as a dependency to this script (if it's\nnot already loaded). If the dependency fails to load, an error is set\non the script.",
    "memberof": "<anonymous>~ScriptHandler",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "config",
        "name": "script"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "location of the javascript lib",
        "name": "url"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the guid of the script",
        "name": "scriptId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "a promise that resolves when the dependency is loaded"
      }
    ],
    "meta": {
      "lineno": 322,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2122
  },
  {
    "id": "<anonymous>~SparseHeightMapBoundingScript#getClosest",
    "longname": "<anonymous>~SparseHeightMapBoundingScript#getClosest",
    "name": "getClosest",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the height of the closest terrain point to the given coordinates",
    "memberof": "<anonymous>~SparseHeightMapBoundingScript",
    "params": [
      {
        "name": "x"
      },
      {
        "name": "z"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The height of the closest terrain point"
      }
    ],
    "meta": {
      "lineno": 19,
      "filename": "SparseHeightMapBoundingScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2133
  },
  {
    "id": "<anonymous>~WorldFittedTerrainScript#addHeightData",
    "longname": "<anonymous>~WorldFittedTerrainScript#addHeightData",
    "name": "addHeightData",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a block of height data from an image at given dimensions and stores the script in an array.",
    "memberof": "<anonymous>~WorldFittedTerrainScript",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "description": "file to load height data from",
        "name": "heightMatrix"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "dimensions to fit the data within",
        "name": "dimensions"
      }
    ],
    "meta": {
      "lineno": 67,
      "filename": "WorldFittedTerrainScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2135
  },
  {
    "id": "<anonymous>~WorldFittedTerrainScript#getHeightDataForPosition",
    "longname": "<anonymous>~WorldFittedTerrainScript#getHeightDataForPosition",
    "name": "getHeightDataForPosition",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the script relevant to a given position",
    "memberof": "<anonymous>~WorldFittedTerrainScript",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "data, typically use entity transform",
        "name": "pos"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "container object with script and its world dimensions"
      }
    ],
    "meta": {
      "lineno": 78,
      "filename": "WorldFittedTerrainScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2136
  },
  {
    "id": "<anonymous>~WorldFittedTerrainScript#displaceAxisDimensions",
    "longname": "<anonymous>~WorldFittedTerrainScript#displaceAxisDimensions",
    "name": "displaceAxisDimensions",
    "scope": "instance",
    "kind": "function",
    "description": "Adjusts coordinates to from heightMap to fit the dimensions of raw displacement data.",
    "memberof": "<anonymous>~WorldFittedTerrainScript",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "axPos"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "axMin"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "axMax"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "quadCount"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 100,
      "filename": "WorldFittedTerrainScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2137
  },
  {
    "id": "<anonymous>~WorldFittedTerrainScript#returnToWorldDimensions",
    "longname": "<anonymous>~WorldFittedTerrainScript#returnToWorldDimensions",
    "name": "returnToWorldDimensions",
    "scope": "instance",
    "kind": "function",
    "description": "Returns coordinates from raw displacement space to fit the dimensions of a registered heightMap.",
    "memberof": "<anonymous>~WorldFittedTerrainScript",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "axPos"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "axMin"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "axMax"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "quadCount"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 113,
      "filename": "WorldFittedTerrainScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2138
  },
  {
    "id": "<anonymous>~WorldFittedTerrainScript#getTerrainHeightAt",
    "longname": "<anonymous>~WorldFittedTerrainScript#getTerrainHeightAt",
    "name": "getTerrainHeightAt",
    "scope": "instance",
    "kind": "function",
    "description": "Looks through height data and returns the elevation of the ground at a given position",
    "memberof": "<anonymous>~WorldFittedTerrainScript",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Position",
        "name": "pos"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "height in units"
      }
    ],
    "meta": {
      "lineno": 124,
      "filename": "WorldFittedTerrainScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2139
  },
  {
    "id": "<anonymous>~WorldFittedTerrainScript#getTerrainNormalAt",
    "longname": "<anonymous>~WorldFittedTerrainScript#getTerrainNormalAt",
    "name": "getTerrainNormalAt",
    "scope": "instance",
    "kind": "function",
    "description": "Returns the a normalized terrain normal for the provided position",
    "memberof": "<anonymous>~WorldFittedTerrainScript",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "optional": true,
        "description": "the position",
        "name": "pos"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "the normal vector"
      }
    ],
    "meta": {
      "lineno": 142,
      "filename": "WorldFittedTerrainScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2140
  },
  {
    "id": "<anonymous>~Box#rebuild",
    "longname": "<anonymous>~Box#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~Box",
    "returns": [
      {
        "type": {
          "names": [
            "Box"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 88,
      "filename": "Box.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2152
  },
  {
    "id": "<anonymous>~Box#clone",
    "longname": "<anonymous>~Box#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this box",
    "memberof": "<anonymous>~Box",
    "returns": [
      {
        "type": {
          "names": [
            "Box"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 193,
      "filename": "Box.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2153
  },
  {
    "id": "<anonymous>~Cone#rebuild",
    "longname": "<anonymous>~Cone#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~Cone",
    "returns": [
      {
        "type": {
          "names": [
            "Cone"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 45,
      "filename": "Cone.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2157
  },
  {
    "id": "<anonymous>~Cone#clone",
    "longname": "<anonymous>~Cone#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this cone",
    "memberof": "<anonymous>~Cone",
    "returns": [
      {
        "type": {
          "names": [
            "Cone"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 111,
      "filename": "Cone.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2158
  },
  {
    "id": "<anonymous>~Cylinder#rebuild",
    "longname": "<anonymous>~Cylinder#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~Cylinder",
    "returns": [
      {
        "type": {
          "names": [
            "Cylinder"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 50,
      "filename": "Cylinder.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2161
  },
  {
    "id": "<anonymous>~Cylinder#clone",
    "longname": "<anonymous>~Cylinder#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this cylinder",
    "memberof": "<anonymous>~Cylinder",
    "returns": [
      {
        "type": {
          "names": [
            "Cylinder"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 165,
      "filename": "Cylinder.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2162
  },
  {
    "id": "<anonymous>~Disk#rebuild",
    "longname": "<anonymous>~Disk#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~Disk",
    "returns": [
      {
        "type": {
          "names": [
            "Disk"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 46,
      "filename": "Disk.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2165
  },
  {
    "id": "<anonymous>~Disk#clone",
    "longname": "<anonymous>~Disk#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this disk",
    "memberof": "<anonymous>~Disk",
    "returns": [
      {
        "type": {
          "names": [
            "Disk"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 89,
      "filename": "Disk.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2166
  },
  {
    "id": "<anonymous>~Grid#clone",
    "longname": "<anonymous>~Grid#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this grid",
    "memberof": "<anonymous>~Grid",
    "returns": [
      {
        "type": {
          "names": [
            "Grid"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 97,
      "filename": "Grid.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2169
  },
  {
    "id": "<anonymous>~Quad#rebuild",
    "longname": "<anonymous>~Quad#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~Quad",
    "returns": [
      {
        "type": {
          "names": [
            "Quad"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 66,
      "filename": "Quad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2176
  },
  {
    "id": "<anonymous>~Quad#clone",
    "longname": "<anonymous>~Quad#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this quad",
    "memberof": "<anonymous>~Quad",
    "returns": [
      {
        "type": {
          "names": [
            "Quad"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 85,
      "filename": "Quad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2177
  },
  {
    "id": "<anonymous>~SimpleBox#rebuild",
    "longname": "<anonymous>~SimpleBox#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~SimpleBox",
    "returns": [
      {
        "type": {
          "names": [
            "SimpleBox"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 41,
      "filename": "SimpleBox.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2180
  },
  {
    "id": "<anonymous>~SimpleBox#clone",
    "longname": "<anonymous>~SimpleBox#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this quad",
    "memberof": "<anonymous>~SimpleBox",
    "returns": [
      {
        "type": {
          "names": [
            "SimpleBox"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 80,
      "filename": "SimpleBox.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2181
  },
  {
    "id": "<anonymous>~Sphere#rebuild",
    "longname": "<anonymous>~Sphere#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~Sphere",
    "returns": [
      {
        "type": {
          "names": [
            "Sphere"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 88,
      "filename": "Sphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2189
  },
  {
    "id": "<anonymous>~Sphere#clone",
    "longname": "<anonymous>~Sphere#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this sphere",
    "memberof": "<anonymous>~Sphere",
    "returns": [
      {
        "type": {
          "names": [
            "Sphere"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 409,
      "filename": "Sphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2190
  },
  {
    "id": "<anonymous>~TextureGrid#rebuild",
    "longname": "<anonymous>~TextureGrid#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~TextureGrid",
    "returns": [
      {
        "type": {
          "names": [
            "TextureGrid"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 43,
      "filename": "TextureGrid.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2194
  },
  {
    "id": "<anonymous>~TextureGrid#clone",
    "longname": "<anonymous>~TextureGrid#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this texture grid",
    "memberof": "<anonymous>~TextureGrid",
    "returns": [
      {
        "type": {
          "names": [
            "TextureGrid"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 99,
      "filename": "TextureGrid.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2195
  },
  {
    "id": "<anonymous>~Torus#rebuild",
    "longname": "<anonymous>~Torus#rebuild",
    "name": "rebuild",
    "scope": "instance",
    "kind": "function",
    "description": "Builds or rebuilds the mesh data.",
    "memberof": "<anonymous>~Torus",
    "returns": [
      {
        "type": {
          "names": [
            "Torus"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 57,
      "filename": "Torus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2199
  },
  {
    "id": "<anonymous>~Torus#clone",
    "longname": "<anonymous>~Torus#clone",
    "name": "clone",
    "scope": "instance",
    "kind": "function",
    "description": "Returns a clone of this texture torus",
    "memberof": "<anonymous>~Torus",
    "returns": [
      {
        "type": {
          "names": [
            "Torus"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 177,
      "filename": "Torus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2200
  },
  {
    "id": "<anonymous>~OscillatorSound#connectTo",
    "longname": "<anonymous>~OscillatorSound#connectTo",
    "name": "connectTo",
    "scope": "instance",
    "kind": "function",
    "description": "Connect output of sound to audionodes",
    "memberof": "<anonymous>~OscillatorSound",
    "params": [
      {
        "type": {
          "names": [
            "Array.<AudioNode>",
            "AudioNode"
          ]
        },
        "name": "nodes"
      }
    ],
    "meta": {
      "lineno": 60,
      "filename": "OscillatorSound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2201
  },
  {
    "id": "<anonymous>~Sound#play",
    "longname": "<anonymous>~Sound#play",
    "name": "play",
    "scope": "instance",
    "kind": "function",
    "description": "Plays the sound if it's not playing",
    "memberof": "<anonymous>~Sound",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Time in seconds according to [AudioContext.currentTime]{@link https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/currentTime} when sound should start to play.",
        "name": "when"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Resolves when sound has played through or when it's stopped.\nLooping sounds will never resolve"
      }
    ],
    "meta": {
      "lineno": 71,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2208
  },
  {
    "id": "<anonymous>~Sound#pause",
    "longname": "<anonymous>~Sound#pause",
    "name": "pause",
    "scope": "instance",
    "kind": "function",
    "description": "Pauses the sound if it's playing",
    "memberof": "<anonymous>~Sound",
    "meta": {
      "lineno": 114,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2209
  },
  {
    "id": "<anonymous>~Sound#stop",
    "longname": "<anonymous>~Sound#stop",
    "name": "stop",
    "scope": "instance",
    "kind": "function",
    "description": "Stops the sound if it's playing",
    "memberof": "<anonymous>~Sound",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Time in seconds according to [AudioContext.currentTime]{@link https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/currentTime} when sound should stop.",
        "name": "when"
      }
    ],
    "meta": {
      "lineno": 130,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2210
  },
  {
    "id": "<anonymous>~Sound#update",
    "longname": "<anonymous>~Sound#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the sound according to config",
    "memberof": "<anonymous>~Sound",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "config"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "name": "config.loop"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "name": "config.volume"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The sound name",
        "name": "config.name"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Start offset in seconds.\nWill be clamped to be in actual soundclip duration",
        "name": "config.start"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Duration of the sound.\nWill be clamped to be in actual soundclip duration",
        "name": "config.duration"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Playback rate of the sound",
        "name": "config.timeScale"
      }
    ],
    "meta": {
      "lineno": 187,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2212
  },
  {
    "id": "<anonymous>~Sound#connectTo",
    "longname": "<anonymous>~Sound#connectTo",
    "name": "connectTo",
    "scope": "instance",
    "kind": "function",
    "description": "Connect output of sound to audionodes",
    "memberof": "<anonymous>~Sound",
    "params": [
      {
        "type": {
          "names": [
            "Array.<AudioNode>",
            "AudioNode"
          ]
        },
        "name": "nodes"
      }
    ],
    "meta": {
      "lineno": 250,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2214
  },
  {
    "id": "<anonymous>~Sound#disconnectFrom",
    "longname": "<anonymous>~Sound#disconnectFrom",
    "name": "disconnectFrom",
    "scope": "instance",
    "kind": "function",
    "description": "Disconnect output of sound from audionodes",
    "memberof": "<anonymous>~Sound",
    "params": [
      {
        "type": {
          "names": [
            "Array.<AudioNode>",
            "AudioNode"
          ]
        },
        "name": "nodes"
      }
    ],
    "meta": {
      "lineno": 266,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2215
  },
  {
    "id": "<anonymous>~Sound#setAudioBuffer",
    "longname": "<anonymous>~Sound#setAudioBuffer",
    "name": "setAudioBuffer",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the audio buffer which will be the sound source",
    "memberof": "<anonymous>~Sound",
    "params": [
      {
        "type": {
          "names": [
            "AudioBuffer"
          ]
        },
        "name": "buffer"
      }
    ],
    "meta": {
      "lineno": 282,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2216
  },
  {
    "id": "<anonymous>~EventChannel#addCallback",
    "longname": "<anonymous>~EventChannel#addCallback",
    "name": "addCallback",
    "scope": "instance",
    "kind": "function",
    "description": "Add a callback to be called at a specific point in time",
    "memberof": "<anonymous>~EventChannel",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "id"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "time"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "meta": {
      "lineno": 27,
      "filename": "EventChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2220
  },
  {
    "id": "<anonymous>~EventChannel#update",
    "longname": "<anonymous>~EventChannel#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update the channel",
    "memberof": "<anonymous>~EventChannel",
    "params": [
      {
        "name": "time"
      }
    ],
    "meta": {
      "lineno": 51,
      "filename": "EventChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2221
  },
  {
    "id": "<anonymous>~TimelineComponent#addChannel",
    "longname": "<anonymous>~TimelineComponent#addChannel",
    "name": "addChannel",
    "scope": "instance",
    "kind": "function",
    "description": "Adds a channel",
    "memberof": "<anonymous>~TimelineComponent",
    "params": [
      {
        "type": {
          "names": [
            "Channel"
          ]
        },
        "name": "channel"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TimelineComponent"
          ]
        },
        "description": "Returns self to allow chaining"
      }
    ],
    "meta": {
      "lineno": 35,
      "filename": "TimelineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2224
  },
  {
    "id": "<anonymous>~TimelineComponent#update",
    "longname": "<anonymous>~TimelineComponent#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Updates all channels with the time per last frame",
    "memberof": "<anonymous>~TimelineComponent",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "tpf"
      }
    ],
    "meta": {
      "lineno": 44,
      "filename": "TimelineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2225
  },
  {
    "id": "<anonymous>~TimelineComponent#start",
    "longname": "<anonymous>~TimelineComponent#start",
    "name": "start",
    "scope": "instance",
    "kind": "function",
    "description": "Resumes updating the entities",
    "memberof": "<anonymous>~TimelineComponent",
    "meta": {
      "lineno": 70,
      "filename": "TimelineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2226
  },
  {
    "id": "<anonymous>~TimelineComponent#pause",
    "longname": "<anonymous>~TimelineComponent#pause",
    "name": "pause",
    "scope": "instance",
    "kind": "function",
    "description": "Stops updating the entities",
    "memberof": "<anonymous>~TimelineComponent",
    "meta": {
      "lineno": 82,
      "filename": "TimelineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2228
  },
  {
    "id": "<anonymous>~TimelineComponent#stop",
    "longname": "<anonymous>~TimelineComponent#stop",
    "name": "stop",
    "scope": "instance",
    "kind": "function",
    "description": "Stop updating entities and resets the state machines to their initial state",
    "memberof": "<anonymous>~TimelineComponent",
    "meta": {
      "lineno": 90,
      "filename": "TimelineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2229
  },
  {
    "id": "<anonymous>~TimelineComponent#setTime",
    "longname": "<anonymous>~TimelineComponent#setTime",
    "name": "setTime",
    "scope": "instance",
    "kind": "function",
    "description": "Sets the time on all channels",
    "memberof": "<anonymous>~TimelineComponent",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "time"
      }
    ],
    "meta": {
      "lineno": 99,
      "filename": "TimelineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2230
  },
  {
    "id": "<anonymous>~TimelineSystem#play",
    "longname": "<anonymous>~TimelineSystem#play",
    "name": "play",
    "scope": "instance",
    "kind": "function",
    "description": "Resumes updating the entities",
    "memberof": "<anonymous>~TimelineSystem",
    "meta": {
      "lineno": 48,
      "filename": "TimelineSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2234
  },
  {
    "id": "<anonymous>~TimelineSystem#pause",
    "longname": "<anonymous>~TimelineSystem#pause",
    "name": "pause",
    "scope": "instance",
    "kind": "function",
    "description": "Stops updating the entities",
    "memberof": "<anonymous>~TimelineSystem",
    "meta": {
      "lineno": 59,
      "filename": "TimelineSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2235
  },
  {
    "id": "<anonymous>~TimelineSystem#stop",
    "longname": "<anonymous>~TimelineSystem#stop",
    "name": "stop",
    "scope": "instance",
    "kind": "function",
    "description": "Stop updating entities and resets the state machines to their initial state",
    "memberof": "<anonymous>~TimelineSystem",
    "meta": {
      "lineno": 72,
      "filename": "TimelineSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2237
  },
  {
    "id": "<anonymous>~ValueChannel#addKeyframe",
    "longname": "<anonymous>~ValueChannel#addKeyframe",
    "name": "addKeyframe",
    "scope": "instance",
    "kind": "function",
    "description": "Schedules a tween",
    "memberof": "<anonymous>~ValueChannel",
    "params": [
      {
        "name": "id"
      },
      {
        "description": "Start time",
        "name": "time"
      },
      {
        "name": "value"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "easingFunction"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "ValueChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2239
  },
  {
    "id": "<anonymous>~ValueChannel#update",
    "longname": "<anonymous>~ValueChannel#update",
    "name": "update",
    "scope": "instance",
    "kind": "function",
    "description": "Update the channel to a given time.",
    "memberof": "<anonymous>~ValueChannel",
    "params": [
      {
        "name": "time"
      }
    ],
    "meta": {
      "lineno": 58,
      "filename": "ValueChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2240
  },
  {
    "id": "<anonymous>~Ajax#prefill",
    "longname": "<anonymous>~Ajax#prefill",
    "name": "prefill",
    "scope": "instance",
    "kind": "function",
    "description": "Prefill ajax cache with data",
    "memberof": "<anonymous>~Ajax",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Pairs of key-configs",
        "name": "bundle"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If set to true will overwrite cache, otherwise extend it",
        "name": "clear"
      }
    ],
    "meta": {
      "lineno": 38,
      "filename": "Ajax.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2243
  },
  {
    "id": "<anonymous>~Ajax#clear",
    "longname": "<anonymous>~Ajax#clear",
    "name": "clear",
    "scope": "instance",
    "kind": "function",
    "description": "Clears the ajax cache\nIs called by {@link DynamicLoader.clear}",
    "memberof": "<anonymous>~Ajax",
    "meta": {
      "lineno": 50,
      "filename": "Ajax.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2244
  },
  {
    "id": "<anonymous>~Ajax#get",
    "longname": "<anonymous>~Ajax#get",
    "name": "get",
    "scope": "instance",
    "kind": "function",
    "description": "Uses GET to retrieve data at a remote location.",
    "memberof": "<anonymous>~Ajax",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "options.url"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "Returns a promise that is resolved and rejected with the XMLHttpRequest."
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 61,
      "filename": "Ajax.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2245
  },
  {
    "id": "<anonymous>~Ajax#load",
    "longname": "<anonymous>~Ajax#load",
    "name": "load",
    "scope": "instance",
    "kind": "function",
    "description": "Loads data at specified path which is returned in a Promise object.",
    "memberof": "<anonymous>~Ajax",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Path to whatever shall be loaded.",
        "name": "path"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If set to true, reloads even if url is cached",
        "name": "reload"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "The promise is resolved with the data loaded. If a parser is specified\nthe data will be of the type resolved by the parser promise."
      }
    ],
    "meta": {
      "lineno": 111,
      "filename": "Ajax.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2246
  },
  {
    "id": "<anonymous>~Ajax#_loadImage",
    "longname": "<anonymous>~Ajax#_loadImage",
    "name": "_loadImage",
    "scope": "instance",
    "kind": "function",
    "description": "Loads image data at specified path which is returned in a Promise object.",
    "memberof": "<anonymous>~Ajax",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Path to whatever shall be loaded.",
        "name": "url"
      }
    ],
    "examples": [
      "loader.loadImage('resources/image.png').then(function (image) {\n  // handle {@link Image} image\n});"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "The promise is resolved with an Image object."
      }
    ],
    "meta": {
      "lineno": 192,
      "filename": "Ajax.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2247
  },
  {
    "id": "<anonymous>~EntityCombiner#combine",
    "longname": "<anonymous>~EntityCombiner#combine",
    "name": "combine",
    "scope": "instance",
    "kind": "function",
    "description": "Runs the combiner",
    "memberof": "<anonymous>~EntityCombiner",
    "meta": {
      "lineno": 41,
      "filename": "EntityCombiner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/combine"
    },
    "order": 2264
  },
  {
    "id": "<anonymous>~EventTarget#fire",
    "longname": "<anonymous>~EventTarget#fire",
    "name": "fire",
    "scope": "instance",
    "kind": "function",
    "description": "Sends an event to all listeners",
    "memberof": "<anonymous>~EventTarget",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Event passed to the listeners",
        "name": "event"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the event",
        "name": "event.type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "EventTarget"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 24,
      "filename": "EventTarget.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2268
  },
  {
    "id": "<anonymous>~EventTarget#on",
    "longname": "<anonymous>~EventTarget#on",
    "name": "on",
    "scope": "instance",
    "kind": "function",
    "description": "Registers a new listener for a certain event type",
    "memberof": "<anonymous>~EventTarget",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of event listener to add",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Listener to add",
        "name": "listener"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "EventTarget"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 50,
      "filename": "EventTarget.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2269
  },
  {
    "id": "<anonymous>~EventTarget#off",
    "longname": "<anonymous>~EventTarget#off",
    "name": "off",
    "scope": "instance",
    "kind": "function",
    "description": "Removes a listener for a certain event type",
    "memberof": "<anonymous>~EventTarget",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of event listener to remove",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Listener to remove",
        "name": "listener"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "EventTarget"
          ]
        },
        "description": "Self for chaining."
      }
    ],
    "meta": {
      "lineno": 68,
      "filename": "EventTarget.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2270
  },
  {
    "id": "<anonymous>~EventTarget#has",
    "longname": "<anonymous>~EventTarget#has",
    "name": "has",
    "scope": "instance",
    "kind": "function",
    "description": "Test if there are any listeners bound to a certain event type",
    "memberof": "<anonymous>~EventTarget",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of event to test for",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "If there are any listeners of specified type on this target"
      }
    ],
    "meta": {
      "lineno": 91,
      "filename": "EventTarget.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2271
  },
  {
    "id": "<anonymous>~Gizmo#setSnap",
    "longname": "<anonymous>~Gizmo#setSnap",
    "name": "setSnap",
    "scope": "instance",
    "kind": "function",
    "description": "Turns snapping on or off",
    "memberof": "<anonymous>~Gizmo",
    "params": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "snap"
      }
    ],
    "meta": {
      "lineno": 77,
      "filename": "Gizmo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/gizmopack"
    },
    "order": 2288
  },
  {
    "id": "<anonymous>~Gizmo#updateRenderableTransform",
    "longname": "<anonymous>~Gizmo#updateRenderableTransform",
    "name": "updateRenderableTransform",
    "scope": "instance",
    "kind": "function",
    "description": "Update the transform of the provided renderable.",
    "memberof": "<anonymous>~Gizmo",
    "params": [
      {
        "name": "renderable"
      }
    ],
    "meta": {
      "lineno": 117,
      "filename": "Gizmo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/gizmopack"
    },
    "order": 2289
  },
  {
    "id": "<anonymous>~Gizmo#updateTransforms",
    "longname": "<anonymous>~Gizmo#updateTransforms",
    "name": "updateTransforms",
    "scope": "instance",
    "kind": "function",
    "description": "Updates the transforms of the renderables of this gizmo.\nScale adjustment is also performed.",
    "memberof": "<anonymous>~Gizmo",
    "meta": {
      "lineno": 130,
      "filename": "Gizmo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/gizmopack"
    },
    "order": 2290
  },
  {
    "id": "<anonymous>~GlobalRotationGizmo#updateRenderableTransform",
    "longname": "<anonymous>~GlobalRotationGizmo#updateRenderableTransform",
    "name": "updateRenderableTransform",
    "scope": "instance",
    "kind": "function",
    "description": "Update the transform of the provided renderable.",
    "memberof": "<anonymous>~GlobalRotationGizmo",
    "params": [
      {
        "name": "renderable"
      }
    ],
    "meta": {
      "lineno": 120,
      "filename": "GlobalRotationGizmo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/gizmopack"
    },
    "order": 2293
  },
  {
    "id": "<anonymous>~MeshBuilder#addEntity",
    "longname": "<anonymous>~MeshBuilder#addEntity",
    "name": "addEntity",
    "scope": "instance",
    "kind": "function",
    "description": "add the MeshData of an entity to this MeshBuilder",
    "memberof": "<anonymous>~MeshBuilder",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "name": "entity"
      }
    ],
    "meta": {
      "lineno": 54,
      "filename": "MeshBuilder.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2303
  },
  {
    "id": "<anonymous>~MeshBuilder#addMeshData",
    "longname": "<anonymous>~MeshBuilder#addMeshData",
    "name": "addMeshData",
    "scope": "instance",
    "kind": "function",
    "description": "add MeshData to this MeshBuilder",
    "memberof": "<anonymous>~MeshBuilder",
    "params": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "name": "meshData"
      }
    ],
    "meta": {
      "lineno": 79,
      "filename": "MeshBuilder.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2304
  },
  {
    "id": "<anonymous>~MeshBuilder#build",
    "longname": "<anonymous>~MeshBuilder#build",
    "name": "build",
    "scope": "instance",
    "kind": "function",
    "description": "build the unified MeshData from all the added MeshData so far and then reset in the internal state.",
    "memberof": "<anonymous>~MeshBuilder",
    "returns": [
      {
        "type": {
          "names": [
            "Array.<MeshData>"
          ]
        },
        "description": "array of meshData, but currently there will only be one entry so you can always use [0].\nIn the future we might create multiple entries if we hit the 65536 vertices limit instead of throwing an error."
      }
    ],
    "meta": {
      "lineno": 222,
      "filename": "MeshBuilder.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2305
  },
  {
    "id": "<anonymous>~MeshBuilder#reset",
    "longname": "<anonymous>~MeshBuilder#reset",
    "name": "reset",
    "scope": "instance",
    "kind": "function",
    "description": "reset in the internal state.",
    "memberof": "<anonymous>~MeshBuilder",
    "meta": {
      "lineno": 233,
      "filename": "MeshBuilder.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2306
  },
  {
    "id": "<anonymous>~SoundCreator#clear",
    "longname": "<anonymous>~SoundCreator#clear",
    "name": "clear",
    "scope": "instance",
    "kind": "function",
    "description": "Releases any references to cached objects",
    "memberof": "<anonymous>~SoundCreator",
    "meta": {
      "lineno": 38,
      "filename": "SoundCreator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2343
  },
  {
    "id": "<anonymous>~SoundCreator#loadSound",
    "longname": "<anonymous>~SoundCreator#loadSound",
    "name": "loadSound",
    "scope": "instance",
    "kind": "function",
    "description": "Load a sound.",
    "memberof": "<anonymous>~SoundCreator",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "url"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "settings"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 49,
      "filename": "SoundCreator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2344
  },
  {
    "id": "<anonymous>~ParticleSystemComponent.SORT_NONE",
    "longname": "<anonymous>~ParticleSystemComponent.SORT_NONE",
    "name": "SORT_NONE",
    "scope": "static",
    "kind": "member",
    "description": "No sorting of particles.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 428,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 66
  },
  {
    "id": "<anonymous>~ParticleSystemComponent.SORT_CAMERA_DISTANCE",
    "longname": "<anonymous>~ParticleSystemComponent.SORT_CAMERA_DISTANCE",
    "name": "SORT_CAMERA_DISTANCE",
    "scope": "static",
    "kind": "member",
    "description": "Sort particles by camera distance.",
    "memberof": "<anonymous>~ParticleSystemComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 435,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 67
  },
  {
    "id": "<anonymous>~RigidBodyComponent.FREEZE_NONE",
    "longname": "<anonymous>~RigidBodyComponent.FREEZE_NONE",
    "name": "FREEZE_NONE",
    "scope": "static",
    "kind": "member",
    "description": "No constraints.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 158,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 282
  },
  {
    "id": "<anonymous>~RigidBodyComponent.FREEZE_POSITION_X",
    "longname": "<anonymous>~RigidBodyComponent.FREEZE_POSITION_X",
    "name": "FREEZE_POSITION_X",
    "scope": "static",
    "kind": "member",
    "description": "Freeze motion along the X-axis.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 164,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 283
  },
  {
    "id": "<anonymous>~RigidBodyComponent.FREEZE_POSITION_Y",
    "longname": "<anonymous>~RigidBodyComponent.FREEZE_POSITION_Y",
    "name": "FREEZE_POSITION_Y",
    "scope": "static",
    "kind": "member",
    "description": "Freeze motion along the Y-axis.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 170,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 284
  },
  {
    "id": "<anonymous>~RigidBodyComponent.FREEZE_POSITION_Z",
    "longname": "<anonymous>~RigidBodyComponent.FREEZE_POSITION_Z",
    "name": "FREEZE_POSITION_Z",
    "scope": "static",
    "kind": "member",
    "description": "Freeze motion along the Z-axis.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 176,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 285
  },
  {
    "id": "<anonymous>~RigidBodyComponent.FREEZE_ROTATION_X",
    "longname": "<anonymous>~RigidBodyComponent.FREEZE_ROTATION_X",
    "name": "FREEZE_ROTATION_X",
    "scope": "static",
    "kind": "member",
    "description": "Freeze rotation along the X-axis.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 182,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 286
  },
  {
    "id": "<anonymous>~RigidBodyComponent.FREEZE_ROTATION_Y",
    "longname": "<anonymous>~RigidBodyComponent.FREEZE_ROTATION_Y",
    "name": "FREEZE_ROTATION_Y",
    "scope": "static",
    "kind": "member",
    "description": "Freeze rotation along the Y-axis.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 188,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 287
  },
  {
    "id": "<anonymous>~RigidBodyComponent.FREEZE_ROTATION_Z",
    "longname": "<anonymous>~RigidBodyComponent.FREEZE_ROTATION_Z",
    "name": "FREEZE_ROTATION_Z",
    "scope": "static",
    "kind": "member",
    "description": "Freeze rotation along the Z-axis.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 194,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 288
  },
  {
    "id": "<anonymous>~RigidBodyComponent.FREEZE_POSITION",
    "longname": "<anonymous>~RigidBodyComponent.FREEZE_POSITION",
    "name": "FREEZE_POSITION",
    "scope": "static",
    "kind": "member",
    "description": "Freeze motion along all axes.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 200,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 289
  },
  {
    "id": "<anonymous>~RigidBodyComponent.FREEZE_ROTATION",
    "longname": "<anonymous>~RigidBodyComponent.FREEZE_ROTATION",
    "name": "FREEZE_ROTATION",
    "scope": "static",
    "kind": "member",
    "description": "Freeze rotation along all axes.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 206,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 290
  },
  {
    "id": "<anonymous>~RigidBodyComponent.FREEZE_ALL",
    "longname": "<anonymous>~RigidBodyComponent.FREEZE_ALL",
    "name": "FREEZE_ALL",
    "scope": "static",
    "kind": "member",
    "description": "Freeze rotation and motion along all axes.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 212,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 291
  },
  {
    "id": "<anonymous>~RigidBodyComponent.NONE",
    "longname": "<anonymous>~RigidBodyComponent.NONE",
    "name": "NONE",
    "scope": "static",
    "kind": "member",
    "description": "No rigid body smoothing.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "meta": {
      "lineno": 217,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 292
  },
  {
    "id": "<anonymous>~RigidBodyComponent.INTERPOLATE",
    "longname": "<anonymous>~RigidBodyComponent.INTERPOLATE",
    "name": "INTERPOLATE",
    "scope": "static",
    "kind": "member",
    "description": "Transform is smoothed based on the Transform of the previous frame.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "meta": {
      "lineno": 222,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 293
  },
  {
    "id": "<anonymous>~RigidBodyComponent.numCylinderSegments",
    "longname": "<anonymous>~RigidBodyComponent.numCylinderSegments",
    "name": "numCylinderSegments",
    "scope": "static",
    "kind": "member",
    "description": "Cannon.js uses ConvexPolyhedron shapes for collision checking sometimes (for example, for cylinders). Therefore it needs a number of segments to use.",
    "memberof": "<anonymous>~RigidBodyComponent",
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 229,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 294
  },
  {
    "id": "<anonymous>~JointChannel.JOINT_CHANNEL_NAME",
    "longname": "<anonymous>~JointChannel.JOINT_CHANNEL_NAME",
    "name": "JOINT_CHANNEL_NAME",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~JointChannel",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "'_jnt'",
    "readonly": true,
    "meta": {
      "lineno": 34,
      "filename": "JointChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 502
  },
  {
    "id": "<anonymous>~Selection.EMPTY",
    "longname": "<anonymous>~Selection.EMPTY",
    "name": "EMPTY",
    "scope": "static",
    "kind": "member",
    "description": "Empty selection",
    "memberof": "<anonymous>~Selection",
    "type": {
      "names": [
        "Selection"
      ]
    },
    "meta": {
      "lineno": 39,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 835
  },
  {
    "id": "<anonymous>~LogicInterface._portID",
    "longname": "<anonymous>~LogicInterface._portID",
    "name": "_portID",
    "scope": "static",
    "kind": "member",
    "description": "Globally unique port id counter",
    "memberof": "<anonymous>~LogicInterface",
    "meta": {
      "lineno": 146,
      "filename": "LogicInterface.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1151
  },
  {
    "id": "<anonymous>~MathUtils.DEG_TO_RAD",
    "longname": "<anonymous>~MathUtils.DEG_TO_RAD",
    "name": "DEG_TO_RAD",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MathUtils",
    "examples": [
      "// converts 75 degrees to radians\nvar rot = 75 * MathUtils.DEG_TO_RAD;"
    ],
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 17,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1201
  },
  {
    "id": "<anonymous>~MathUtils.RAD_TO_DEG",
    "longname": "<anonymous>~MathUtils.RAD_TO_DEG",
    "name": "RAD_TO_DEG",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MathUtils",
    "examples": [
      "// converts Math.PI to 180 degrees\nvar rot = Math.PI  MathUtils.RAD_TO_DEG;"
    ],
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 24,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1202
  },
  {
    "id": "<anonymous>~MathUtils.HALF_PI",
    "longname": "<anonymous>~MathUtils.HALF_PI",
    "name": "HALF_PI",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MathUtils",
    "examples": [
      "// uses HALF_PI and converts it to degress\nvar rot = MathUtils.HALF_PI * MathUtils.RAD_TO_DEG; // rot == 90"
    ],
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 31,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1203
  },
  {
    "id": "<anonymous>~MathUtils.TWO_PI",
    "longname": "<anonymous>~MathUtils.TWO_PI",
    "name": "TWO_PI",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MathUtils",
    "examples": [
      "// uses TWO_PI and converts it to degrees\nvar rot = MathUtils.TWO_PI * RAD_TO_DEG; // rot == 360"
    ],
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 38,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1204
  },
  {
    "id": "<anonymous>~MathUtils.EPSILON",
    "longname": "<anonymous>~MathUtils.EPSILON",
    "name": "EPSILON",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MathUtils",
    "examples": [
      "// uses EPSILON to approximate floating point equality\nif (Math.abs(a - b) > MathUtils.EPSILON) {\n\t\t// not equal\n}"
    ],
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 47,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1205
  },
  {
    "id": "<anonymous>~MathUtils.nearestHigherPowerOfTwo",
    "longname": "<anonymous>~MathUtils.nearestHigherPowerOfTwo",
    "name": "nearestHigherPowerOfTwo",
    "scope": "static",
    "kind": "member",
    "description": "Gets the nearest higher power of two for a value",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Number to get the nearest power of two from",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Nearest power of two"
      }
    ],
    "deprecated": "Deprecated as of v0.14.x and scheduled for removal in v0.16.0;\nConsider using MathUtils.nearestPowerOfTwo instead",
    "meta": {
      "lineno": 270,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1219
  },
  {
    "id": "<anonymous>~MathUtils.randomSeed",
    "longname": "<anonymous>~MathUtils.randomSeed",
    "name": "randomSeed",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MathUtils",
    "examples": [
      "// sets random seed to use with MathUtils.fastRandom()\nMathUtils.randomSeed = 1337;"
    ],
    "type": {
      "names": [
        "number"
      ]
    },
    "meta": {
      "lineno": 352,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1225
  },
  {
    "id": "<anonymous>~MathUtils.floatToHalfFloat",
    "longname": "<anonymous>~MathUtils.floatToHalfFloat",
    "name": "floatToHalfFloat",
    "scope": "static",
    "kind": "member",
    "description": "Converts a float to half-float representation.",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The float value to convert",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "the half-float representation"
      }
    ],
    "meta": {
      "lineno": 368,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1227
  },
  {
    "id": "<anonymous>~Matrix.add",
    "longname": "<anonymous>~Matrix.add",
    "name": "add",
    "scope": "static",
    "kind": "member",
    "description": "Performs a component-wise addition.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Matrix on the left-hand side.",
        "name": "lhs"
      },
      {
        "type": {
          "names": [
            "Matrix",
            "number"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      },
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "optional": true,
        "description": "Target matrix for storage.",
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "A new matrix if the target matrix is omitted, else the target matrix."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 120,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1236
  },
  {
    "id": "<anonymous>~Matrix.sub",
    "longname": "<anonymous>~Matrix.sub",
    "name": "sub",
    "scope": "static",
    "kind": "member",
    "description": "Performs a component-wise subtraction.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Matrix on the left-hand side.",
        "name": "lhs"
      },
      {
        "type": {
          "names": [
            "Matrix",
            "number"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      },
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "optional": true,
        "description": "Target matrix for storage.",
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "A new matrix if the target matrix is omitted, else the target matrix."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 168,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1238
  },
  {
    "id": "<anonymous>~Matrix.mul",
    "longname": "<anonymous>~Matrix.mul",
    "name": "mul",
    "scope": "static",
    "kind": "member",
    "description": "Performs a component-wise multiplication.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Matrix on the left-hand side.",
        "name": "lhs"
      },
      {
        "type": {
          "names": [
            "Matrix",
            "number"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      },
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "optional": true,
        "description": "Target matrix for storage.",
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "A new matrix if the target matrix is omitted, else the target matrix."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 216,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1240
  },
  {
    "id": "<anonymous>~Matrix.div",
    "longname": "<anonymous>~Matrix.div",
    "name": "div",
    "scope": "static",
    "kind": "member",
    "description": "Performs a component-wise division.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Matrix on the left-hand side.",
        "name": "lhs"
      },
      {
        "type": {
          "names": [
            "Matrix",
            "number"
          ]
        },
        "description": "Matrix or scalar on the right-hand side.",
        "name": "rhs"
      },
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "optional": true,
        "description": "Target matrix for storage.",
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "A new matrix if the target matrix is omitted, else the target matrix."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 265,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1242
  },
  {
    "id": "<anonymous>~Matrix.combine",
    "longname": "<anonymous>~Matrix.combine",
    "name": "combine",
    "scope": "static",
    "kind": "member",
    "description": "Combines two matrices (matrix multiplication) and stores the result in a separate matrix.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Matrix on the left-hand side.",
        "name": "lhs"
      },
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Matrix on the right-hand side.",
        "name": "rhs"
      },
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "optional": true,
        "description": "Target matrix for storage.",
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "A new matrix if the target matrix is omitted, else the target matrix."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 315,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1244
  },
  {
    "id": "<anonymous>~Matrix.transpose",
    "longname": "<anonymous>~Matrix.transpose",
    "name": "transpose",
    "scope": "static",
    "kind": "member",
    "description": "Transposes a matrix (exchanges rows and columns) and stores the result in a separate matrix.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Source matrix.",
        "name": "source"
      },
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "optional": true,
        "description": "Target matrix.",
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "A new matrix if the target matrix is omitted, else the target matrix."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 372,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1246
  },
  {
    "id": "<anonymous>~Matrix.copy",
    "longname": "<anonymous>~Matrix.copy",
    "name": "copy",
    "scope": "static",
    "kind": "member",
    "description": "Copies component values and stores them in a separate matrix.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Source matrix.",
        "name": "source"
      },
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "optional": true,
        "description": "Target matrix.",
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "A new matrix if the target matrix is omitted, else the target matrix."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 421,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1248
  },
  {
    "id": "<anonymous>~Matrix.equals",
    "longname": "<anonymous>~Matrix.equals",
    "name": "equals",
    "scope": "static",
    "kind": "member",
    "description": "Compares two matrices for approximate equality.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Matrix on the left-hand side.",
        "name": "lhs"
      },
      {
        "type": {
          "names": [
            "Matrix"
          ]
        },
        "description": "Matrix on the right-hand side.",
        "name": "rhs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if equal."
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 461,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1250
  },
  {
    "id": "<anonymous>~Matrix2.add",
    "longname": "<anonymous>~Matrix2.add",
    "name": "add",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 342,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1278
  },
  {
    "id": "<anonymous>~Matrix2.combine",
    "longname": "<anonymous>~Matrix2.combine",
    "name": "combine",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 369,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1279
  },
  {
    "id": "<anonymous>~Matrix2.div",
    "longname": "<anonymous>~Matrix2.div",
    "name": "div",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 393,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1280
  },
  {
    "id": "<anonymous>~Matrix2.mul",
    "longname": "<anonymous>~Matrix2.mul",
    "name": "mul",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 422,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1281
  },
  {
    "id": "<anonymous>~Matrix2.transpose",
    "longname": "<anonymous>~Matrix2.transpose",
    "name": "transpose",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 449,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1282
  },
  {
    "id": "<anonymous>~Matrix2.sub",
    "longname": "<anonymous>~Matrix2.sub",
    "name": "sub",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 473,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1283
  },
  {
    "id": "<anonymous>~Matrix3.IDENTITY",
    "longname": "<anonymous>~Matrix3.IDENTITY",
    "name": "IDENTITY",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix3",
    "type": {
      "names": [
        "Matrix3"
      ]
    },
    "meta": {
      "lineno": 67,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1288
  },
  {
    "id": "<anonymous>~Matrix3.add",
    "longname": "<anonymous>~Matrix3.add",
    "name": "add",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 778,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1317
  },
  {
    "id": "<anonymous>~Matrix3.sub",
    "longname": "<anonymous>~Matrix3.sub",
    "name": "sub",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 817,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1318
  },
  {
    "id": "<anonymous>~Matrix3.mul",
    "longname": "<anonymous>~Matrix3.mul",
    "name": "mul",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 855,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1319
  },
  {
    "id": "<anonymous>~Matrix3.div",
    "longname": "<anonymous>~Matrix3.div",
    "name": "div",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 894,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1320
  },
  {
    "id": "<anonymous>~Matrix3.combine",
    "longname": "<anonymous>~Matrix3.combine",
    "name": "combine",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 944,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1322
  },
  {
    "id": "<anonymous>~Matrix3.transpose",
    "longname": "<anonymous>~Matrix3.transpose",
    "name": "transpose",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 992,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1324
  },
  {
    "id": "<anonymous>~Matrix4.add",
    "longname": "<anonymous>~Matrix4.add",
    "name": "add",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 713,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1354
  },
  {
    "id": "<anonymous>~Matrix4.sub",
    "longname": "<anonymous>~Matrix4.sub",
    "name": "sub",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 764,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1355
  },
  {
    "id": "<anonymous>~Matrix4.mul",
    "longname": "<anonymous>~Matrix4.mul",
    "name": "mul",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 815,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1356
  },
  {
    "id": "<anonymous>~Matrix4.div",
    "longname": "<anonymous>~Matrix4.div",
    "name": "div",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 866,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1357
  },
  {
    "id": "<anonymous>~Matrix4.combine",
    "longname": "<anonymous>~Matrix4.combine",
    "name": "combine",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 930,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1359
  },
  {
    "id": "<anonymous>~Matrix4.transpose",
    "longname": "<anonymous>~Matrix4.transpose",
    "name": "transpose",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Matrix4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 988,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1361
  },
  {
    "id": "<anonymous>~Quaternion.add",
    "longname": "<anonymous>~Quaternion.add",
    "name": "add",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 532,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1391
  },
  {
    "id": "<anonymous>~Quaternion.div",
    "longname": "<anonymous>~Quaternion.div",
    "name": "div",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 552,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1392
  },
  {
    "id": "<anonymous>~Quaternion.mul",
    "longname": "<anonymous>~Quaternion.mul",
    "name": "mul",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 574,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1393
  },
  {
    "id": "<anonymous>~Quaternion.sub",
    "longname": "<anonymous>~Quaternion.sub",
    "name": "sub",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 592,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1394
  },
  {
    "id": "<anonymous>~Quaternion.scalarAdd",
    "longname": "<anonymous>~Quaternion.scalarAdd",
    "name": "scalarAdd",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 660,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1399
  },
  {
    "id": "<anonymous>~Quaternion.scalarDiv",
    "longname": "<anonymous>~Quaternion.scalarDiv",
    "name": "scalarDiv",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 680,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1400
  },
  {
    "id": "<anonymous>~Quaternion.scalarMul",
    "longname": "<anonymous>~Quaternion.scalarMul",
    "name": "scalarMul",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 704,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1401
  },
  {
    "id": "<anonymous>~Quaternion.scalarSub",
    "longname": "<anonymous>~Quaternion.scalarSub",
    "name": "scalarSub",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Quaternion",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 724,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1402
  },
  {
    "id": "<anonymous>~Vector.add",
    "longname": "<anonymous>~Vector.add",
    "name": "add",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 147,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1449
  },
  {
    "id": "<anonymous>~Vector.sub",
    "longname": "<anonymous>~Vector.sub",
    "name": "sub",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 175,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1451
  },
  {
    "id": "<anonymous>~Vector.mul",
    "longname": "<anonymous>~Vector.mul",
    "name": "mul",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 203,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1453
  },
  {
    "id": "<anonymous>~Vector.div",
    "longname": "<anonymous>~Vector.div",
    "name": "div",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 231,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1455
  },
  {
    "id": "<anonymous>~Vector.copy",
    "longname": "<anonymous>~Vector.copy",
    "name": "copy",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 259,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1457
  },
  {
    "id": "<anonymous>~Vector.dot",
    "longname": "<anonymous>~Vector.dot",
    "name": "dot",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 289,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1459
  },
  {
    "id": "<anonymous>~Vector.apply",
    "longname": "<anonymous>~Vector.apply",
    "name": "apply",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 315,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1461
  },
  {
    "id": "<anonymous>~Vector.equals",
    "longname": "<anonymous>~Vector.equals",
    "name": "equals",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 357,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1463
  },
  {
    "id": "<anonymous>~Vector.distanceSquared",
    "longname": "<anonymous>~Vector.distanceSquared",
    "name": "distanceSquared",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 388,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1465
  },
  {
    "id": "<anonymous>~Vector.distance",
    "longname": "<anonymous>~Vector.distance",
    "name": "distance",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 404,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1467
  },
  {
    "id": "<anonymous>~Vector2.ZERO",
    "longname": "<anonymous>~Vector2.ZERO",
    "name": "ZERO",
    "scope": "static",
    "kind": "member",
    "description": "Zero-vector (0, 0)",
    "memberof": "<anonymous>~Vector2",
    "type": {
      "names": [
        "Vector2"
      ]
    },
    "meta": {
      "lineno": 70,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1479
  },
  {
    "id": "<anonymous>~Vector2.ONE",
    "longname": "<anonymous>~Vector2.ONE",
    "name": "ONE",
    "scope": "static",
    "kind": "member",
    "description": "One-vector (1, 1)",
    "memberof": "<anonymous>~Vector2",
    "type": {
      "names": [
        "Vector2"
      ]
    },
    "meta": {
      "lineno": 76,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1480
  },
  {
    "id": "<anonymous>~Vector2.UNIT_X",
    "longname": "<anonymous>~Vector2.UNIT_X",
    "name": "UNIT_X",
    "scope": "static",
    "kind": "member",
    "description": "Unit-X (1, 0)",
    "memberof": "<anonymous>~Vector2",
    "type": {
      "names": [
        "Vector2"
      ]
    },
    "meta": {
      "lineno": 82,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1481
  },
  {
    "id": "<anonymous>~Vector2.UNIT_Y",
    "longname": "<anonymous>~Vector2.UNIT_Y",
    "name": "UNIT_Y",
    "scope": "static",
    "kind": "member",
    "description": "Unit-Y (0, 1)",
    "memberof": "<anonymous>~Vector2",
    "type": {
      "names": [
        "Vector2"
      ]
    },
    "meta": {
      "lineno": 88,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1482
  },
  {
    "id": "<anonymous>~Vector2.add",
    "longname": "<anonymous>~Vector2.add",
    "name": "add",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 612,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1518
  },
  {
    "id": "<anonymous>~Vector2.sub",
    "longname": "<anonymous>~Vector2.sub",
    "name": "sub",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 638,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1519
  },
  {
    "id": "<anonymous>~Vector2.mul",
    "longname": "<anonymous>~Vector2.mul",
    "name": "mul",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 665,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1520
  },
  {
    "id": "<anonymous>~Vector2.div",
    "longname": "<anonymous>~Vector2.div",
    "name": "div",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 691,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1521
  },
  {
    "id": "<anonymous>~Vector2.dot",
    "longname": "<anonymous>~Vector2.dot",
    "name": "dot",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector2",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 717,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1522
  },
  {
    "id": "<anonymous>~Vector3.ZERO",
    "longname": "<anonymous>~Vector3.ZERO",
    "name": "ZERO",
    "scope": "static",
    "kind": "member",
    "description": "Zero-vector (0, 0, 0)",
    "memberof": "<anonymous>~Vector3",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 73,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1529
  },
  {
    "id": "<anonymous>~Vector3.ONE",
    "longname": "<anonymous>~Vector3.ONE",
    "name": "ONE",
    "scope": "static",
    "kind": "member",
    "description": "One-vector (1, 1, 1)",
    "memberof": "<anonymous>~Vector3",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 79,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1530
  },
  {
    "id": "<anonymous>~Vector3.UNIT_X",
    "longname": "<anonymous>~Vector3.UNIT_X",
    "name": "UNIT_X",
    "scope": "static",
    "kind": "member",
    "description": "Unit-X (1, 0, 0)",
    "memberof": "<anonymous>~Vector3",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 85,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1531
  },
  {
    "id": "<anonymous>~Vector3.UNIT_Y",
    "longname": "<anonymous>~Vector3.UNIT_Y",
    "name": "UNIT_Y",
    "scope": "static",
    "kind": "member",
    "description": "Unit-Y (0, 1, 0)",
    "memberof": "<anonymous>~Vector3",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 91,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1532
  },
  {
    "id": "<anonymous>~Vector3.UNIT_Z",
    "longname": "<anonymous>~Vector3.UNIT_Z",
    "name": "UNIT_Z",
    "scope": "static",
    "kind": "member",
    "description": "Unit-Z (0, 0, 1)",
    "memberof": "<anonymous>~Vector3",
    "type": {
      "names": [
        "Vector3"
      ]
    },
    "meta": {
      "lineno": 97,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1533
  },
  {
    "id": "<anonymous>~Vector3.add",
    "longname": "<anonymous>~Vector3.add",
    "name": "add",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 777,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1574
  },
  {
    "id": "<anonymous>~Vector3.cross",
    "longname": "<anonymous>~Vector3.cross",
    "name": "cross",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 804,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1575
  },
  {
    "id": "<anonymous>~Vector3.distance",
    "longname": "<anonymous>~Vector3.distance",
    "name": "distance",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 827,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1576
  },
  {
    "id": "<anonymous>~Vector3.distanceSquared",
    "longname": "<anonymous>~Vector3.distanceSquared",
    "name": "distanceSquared",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 835,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1577
  },
  {
    "id": "<anonymous>~Vector3.div",
    "longname": "<anonymous>~Vector3.div",
    "name": "div",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 846,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1578
  },
  {
    "id": "<anonymous>~Vector3.dot",
    "longname": "<anonymous>~Vector3.dot",
    "name": "dot",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 880,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1579
  },
  {
    "id": "<anonymous>~Vector3.mul",
    "longname": "<anonymous>~Vector3.mul",
    "name": "mul",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 901,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1580
  },
  {
    "id": "<anonymous>~Vector3.sub",
    "longname": "<anonymous>~Vector3.sub",
    "name": "sub",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector3",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 995,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1586
  },
  {
    "id": "<anonymous>~Vector4.ZERO",
    "longname": "<anonymous>~Vector4.ZERO",
    "name": "ZERO",
    "scope": "static",
    "kind": "member",
    "description": "Zero-vector (0, 0, 0, 0)",
    "memberof": "<anonymous>~Vector4",
    "type": {
      "names": [
        "Vector4"
      ]
    },
    "meta": {
      "lineno": 76,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1589
  },
  {
    "id": "<anonymous>~Vector4.ONE",
    "longname": "<anonymous>~Vector4.ONE",
    "name": "ONE",
    "scope": "static",
    "kind": "member",
    "description": "One-vector (1, 1, 1, 1)",
    "memberof": "<anonymous>~Vector4",
    "type": {
      "names": [
        "Vector4"
      ]
    },
    "meta": {
      "lineno": 82,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1590
  },
  {
    "id": "<anonymous>~Vector4.UNIT_X",
    "longname": "<anonymous>~Vector4.UNIT_X",
    "name": "UNIT_X",
    "scope": "static",
    "kind": "member",
    "description": "Unit-X (1, 0, 0, 0)",
    "memberof": "<anonymous>~Vector4",
    "type": {
      "names": [
        "Vector4"
      ]
    },
    "meta": {
      "lineno": 88,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1591
  },
  {
    "id": "<anonymous>~Vector4.UNIT_Y",
    "longname": "<anonymous>~Vector4.UNIT_Y",
    "name": "UNIT_Y",
    "scope": "static",
    "kind": "member",
    "description": "Unit-Y (0, 1, 0, 0)",
    "memberof": "<anonymous>~Vector4",
    "type": {
      "names": [
        "Vector4"
      ]
    },
    "meta": {
      "lineno": 94,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1592
  },
  {
    "id": "<anonymous>~Vector4.UNIT_Z",
    "longname": "<anonymous>~Vector4.UNIT_Z",
    "name": "UNIT_Z",
    "scope": "static",
    "kind": "member",
    "description": "Unit-Z (0, 0, 1, 0)",
    "memberof": "<anonymous>~Vector4",
    "type": {
      "names": [
        "Vector4"
      ]
    },
    "meta": {
      "lineno": 100,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1593
  },
  {
    "id": "<anonymous>~Vector4.UNIT_W",
    "longname": "<anonymous>~Vector4.UNIT_W",
    "name": "UNIT_W",
    "scope": "static",
    "kind": "member",
    "description": "Unit-W (0, 0, 0, 1)",
    "memberof": "<anonymous>~Vector4",
    "type": {
      "names": [
        "Vector4"
      ]
    },
    "meta": {
      "lineno": 106,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1594
  },
  {
    "id": "<anonymous>~Vector4.add",
    "longname": "<anonymous>~Vector4.add",
    "name": "add",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 723,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1631
  },
  {
    "id": "<anonymous>~Vector4.sub",
    "longname": "<anonymous>~Vector4.sub",
    "name": "sub",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 751,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1632
  },
  {
    "id": "<anonymous>~Vector4.mul",
    "longname": "<anonymous>~Vector4.mul",
    "name": "mul",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 779,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1633
  },
  {
    "id": "<anonymous>~Vector4.div",
    "longname": "<anonymous>~Vector4.div",
    "name": "div",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 807,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1634
  },
  {
    "id": "<anonymous>~Vector4.dot",
    "longname": "<anonymous>~Vector4.dot",
    "name": "dot",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Vector4",
    "deprecated": true,
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 835,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1635
  },
  {
    "id": "<anonymous>~ShaderLibExtra.differenceOfGaussians",
    "longname": "<anonymous>~ShaderLibExtra.differenceOfGaussians",
    "name": "differenceOfGaussians",
    "scope": "static",
    "kind": "member",
    "description": "Outputs the difference as tex0 - tex1, the value is tresholded to create a clearer edge.",
    "memberof": "<anonymous>~ShaderLibExtra",
    "meta": {
      "lineno": 1208,
      "filename": "ShaderLibExtra.js",
      "path": "/Users/schteppe/git/goojs/src/goo/passpack"
    },
    "order": 1750
  },
  {
    "id": "<anonymous>~BoundingVolume.Outside",
    "longname": "<anonymous>~BoundingVolume.Outside",
    "name": "Outside",
    "scope": "static",
    "kind": "member",
    "description": "Intersection type",
    "memberof": "<anonymous>~BoundingVolume",
    "meta": {
      "lineno": 41,
      "filename": "BoundingVolume.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/bounds"
    },
    "order": 1794
  },
  {
    "id": "<anonymous>~Camera.Perspective",
    "longname": "<anonymous>~Camera.Perspective",
    "name": "Perspective",
    "scope": "static",
    "kind": "member",
    "description": "Projection mode for perspective frustum",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 133,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1806
  },
  {
    "id": "<anonymous>~Camera.Parallel",
    "longname": "<anonymous>~Camera.Parallel",
    "name": "Parallel",
    "scope": "static",
    "kind": "member",
    "description": "Projection mode for parallel/ortographic frustum",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 137,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1807
  },
  {
    "id": "<anonymous>~Camera.Outside",
    "longname": "<anonymous>~Camera.Outside",
    "name": "Outside",
    "scope": "static",
    "kind": "member",
    "description": "Intersection response from camera.intersect",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 143,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1808
  },
  {
    "id": "<anonymous>~Camera.Inside",
    "longname": "<anonymous>~Camera.Inside",
    "name": "Inside",
    "scope": "static",
    "kind": "member",
    "description": "Intersection response from camera.intersect",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 147,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1809
  },
  {
    "id": "<anonymous>~Camera.Intersects",
    "longname": "<anonymous>~Camera.Intersects",
    "name": "Intersects",
    "scope": "static",
    "kind": "member",
    "description": "Intersection response from camera.intersect",
    "memberof": "<anonymous>~Camera",
    "meta": {
      "lineno": 151,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1810
  },
  {
    "id": "<anonymous>~MeshData.POSITION",
    "longname": "<anonymous>~MeshData.POSITION",
    "name": "POSITION",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 873,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1912
  },
  {
    "id": "<anonymous>~MeshData.NORMAL",
    "longname": "<anonymous>~MeshData.NORMAL",
    "name": "NORMAL",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 878,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1913
  },
  {
    "id": "<anonymous>~MeshData.COLOR",
    "longname": "<anonymous>~MeshData.COLOR",
    "name": "COLOR",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 883,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1914
  },
  {
    "id": "<anonymous>~MeshData.TANGENT",
    "longname": "<anonymous>~MeshData.TANGENT",
    "name": "TANGENT",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 888,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1915
  },
  {
    "id": "<anonymous>~MeshData.TEXCOORD0",
    "longname": "<anonymous>~MeshData.TEXCOORD0",
    "name": "TEXCOORD0",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 893,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1916
  },
  {
    "id": "<anonymous>~MeshData.TEXCOORD1",
    "longname": "<anonymous>~MeshData.TEXCOORD1",
    "name": "TEXCOORD1",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 898,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1917
  },
  {
    "id": "<anonymous>~MeshData.TEXCOORD2",
    "longname": "<anonymous>~MeshData.TEXCOORD2",
    "name": "TEXCOORD2",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 903,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1918
  },
  {
    "id": "<anonymous>~MeshData.TEXCOORD3",
    "longname": "<anonymous>~MeshData.TEXCOORD3",
    "name": "TEXCOORD3",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 908,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1919
  },
  {
    "id": "<anonymous>~MeshData.WEIGHTS",
    "longname": "<anonymous>~MeshData.WEIGHTS",
    "name": "WEIGHTS",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 913,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1920
  },
  {
    "id": "<anonymous>~MeshData.JOINTIDS",
    "longname": "<anonymous>~MeshData.JOINTIDS",
    "name": "JOINTIDS",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~MeshData",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 918,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1921
  },
  {
    "id": "<anonymous>~RendererUtils.isPowerOfTwo",
    "longname": "<anonymous>~RendererUtils.isPowerOfTwo",
    "name": "isPowerOfTwo",
    "scope": "static",
    "kind": "member",
    "description": "Checks if a value is power of two",
    "memberof": "<anonymous>~RendererUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Number to check for power of two",
        "name": "value"
      }
    ],
    "returns": [
      {
        "description": "true if value is power of two"
      }
    ],
    "deprecated": "Deprecated as of v0.14.x and scheduled for removal in v0.16.0; Consider using\nMathUtils.isPowerOfTwo instead",
    "meta": {
      "lineno": 92,
      "filename": "RendererUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2014
  },
  {
    "id": "<anonymous>~RendererUtils.nearestPowerOfTwo",
    "longname": "<anonymous>~RendererUtils.nearestPowerOfTwo",
    "name": "nearestPowerOfTwo",
    "scope": "static",
    "kind": "member",
    "description": "Converts input number to closest power of two",
    "memberof": "<anonymous>~RendererUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Number to convert to power of two",
        "name": "number"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Nearest power of two of input"
      }
    ],
    "deprecated": "Deprecated as of v0.14.x and scheduled for removal in v0.16.0; Consider using\nMathUtils.nearestPowerOfTwo instead",
    "meta": {
      "lineno": 101,
      "filename": "RendererUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2015
  },
  {
    "id": "<anonymous>~RendererUtils.clone",
    "longname": "<anonymous>~RendererUtils.clone",
    "name": "clone",
    "scope": "static",
    "kind": "member",
    "description": "Clones an object recursively",
    "memberof": "<anonymous>~RendererUtils",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Object to clone",
        "name": "object"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Cloned object"
      }
    ],
    "deprecated": "Deprecated as of 0.12.x and scheduled for removal in 0.14.0; Please use `ObjectUtils.deepClone` instead",
    "meta": {
      "lineno": 109,
      "filename": "RendererUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2016
  },
  {
    "id": "<anonymous>~RenderQueue.BACKGROUND",
    "longname": "<anonymous>~RenderQueue.BACKGROUND",
    "name": "BACKGROUND",
    "scope": "static",
    "kind": "member",
    "description": "Rendered before any other objects. Commonly used for skyboxes and the likes",
    "memberof": "<anonymous>~RenderQueue",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 0,
    "readonly": true,
    "meta": {
      "lineno": 107,
      "filename": "RenderQueue.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2022
  },
  {
    "id": "<anonymous>~RenderQueue.OPAQUE",
    "longname": "<anonymous>~RenderQueue.OPAQUE",
    "name": "OPAQUE",
    "scope": "static",
    "kind": "member",
    "description": "Used for most objects, typically opaque geometry. Rendered front to back",
    "memberof": "<anonymous>~RenderQueue",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 1000,
    "readonly": true,
    "meta": {
      "lineno": 113,
      "filename": "RenderQueue.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2023
  },
  {
    "id": "<anonymous>~RenderQueue.TRANSPARENT",
    "longname": "<anonymous>~RenderQueue.TRANSPARENT",
    "name": "TRANSPARENT",
    "scope": "static",
    "kind": "member",
    "description": "For all alpha-blended objects. Rendered back to front",
    "memberof": "<anonymous>~RenderQueue",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 2000,
    "readonly": true,
    "meta": {
      "lineno": 119,
      "filename": "RenderQueue.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2024
  },
  {
    "id": "<anonymous>~RenderQueue.OVERLAY",
    "longname": "<anonymous>~RenderQueue.OVERLAY",
    "name": "OVERLAY",
    "scope": "static",
    "kind": "member",
    "description": "For overlay effects like lens-flares etc",
    "memberof": "<anonymous>~RenderQueue",
    "type": {
      "names": [
        "number"
      ]
    },
    "defaultvalue": 3000,
    "readonly": true,
    "meta": {
      "lineno": 125,
      "filename": "RenderQueue.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2025
  },
  {
    "id": "<anonymous>~ShaderLib.uber",
    "longname": "<anonymous>~ShaderLib.uber",
    "name": "uber",
    "scope": "static",
    "kind": "member",
    "description": "The uber shader is the default Goo shader supporting the most common realistic render features.\nIt supports lights, animations, reflective materials, normal, diffuse, AO and light textures, transparency, fog and shadows.",
    "memberof": "<anonymous>~ShaderLib",
    "meta": {
      "lineno": 26,
      "filename": "ShaderLib.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/shaders"
    },
    "order": 2044
  },
  {
    "id": "<anonymous>~Box.TextureModes",
    "longname": "<anonymous>~Box.TextureModes",
    "name": "TextureModes",
    "scope": "static",
    "kind": "member",
    "description": "Possible texture wrapping modes: Uniform, Unfolded",
    "memberof": "<anonymous>~Box",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "lineno": 207,
      "filename": "Box.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2154
  },
  {
    "id": "<anonymous>~Sphere.TextureModes",
    "longname": "<anonymous>~Sphere.TextureModes",
    "name": "TextureModes",
    "scope": "static",
    "kind": "member",
    "description": "Possible texture wrapping modes: Linear, Projected, Polar, Chromeball",
    "memberof": "<anonymous>~Sphere",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "lineno": 418,
      "filename": "Sphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2191
  },
  {
    "id": "<anonymous>~GameUtils.supported",
    "longname": "<anonymous>~GameUtils.supported",
    "name": "supported",
    "scope": "static",
    "kind": "member",
    "description": "Supported features. All true by default.",
    "memberof": "<anonymous>~GameUtils",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "fullscreen"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "pointerLock"
      }
    ],
    "meta": {
      "lineno": 18,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2273
  },
  {
    "id": "<anonymous>~Logo.blue",
    "longname": "<anonymous>~Logo.blue",
    "name": "blue",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Logo",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 13,
      "filename": "Logo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2299
  },
  {
    "id": "<anonymous>~Logo.white",
    "longname": "<anonymous>~Logo.white",
    "name": "white",
    "scope": "static",
    "kind": "member",
    "memberof": "<anonymous>~Logo",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 15,
      "filename": "Logo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2300
  },
  {
    "id": "<anonymous>~CannonRigidbodyComponent.getCollider",
    "longname": "<anonymous>~CannonRigidbodyComponent.getCollider",
    "name": "getCollider",
    "scope": "static",
    "kind": "function",
    "description": "Get the collider component from an entity, if one exist.",
    "memberof": "<anonymous>~CannonRigidbodyComponent",
    "returns": [
      {
        "type": {
          "names": [
            "mixed"
          ]
        },
        "description": "Any of the collider types, or NULL if not found"
      }
    ],
    "meta": {
      "lineno": 124,
      "filename": "CannonRigidbodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 22
  },
  {
    "id": "<anonymous>~Curve.numberToGLSL",
    "longname": "<anonymous>~Curve.numberToGLSL",
    "name": "numberToGLSL",
    "scope": "static",
    "kind": "function",
    "description": "Convert a number to GLSL code.",
    "memberof": "<anonymous>~Curve",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "n"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 32,
      "filename": "Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 134
  },
  {
    "id": "<anonymous>~ColliderComponent.getCannonShape",
    "longname": "<anonymous>~ColliderComponent.getCannonShape",
    "name": "getCannonShape",
    "scope": "static",
    "kind": "function",
    "description": "Create a CANNON.Shape given a Collider. A BoxCollider yields a CANNON.Box and so on.",
    "memberof": "<anonymous>~ColliderComponent",
    "params": [
      {
        "type": {
          "names": [
            "Collider"
          ]
        },
        "name": "collider"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CANNON.Shape"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 133,
      "filename": "ColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 264
  },
  {
    "id": "<anonymous>~BinaryLerpSource.combineSourceData",
    "longname": "<anonymous>~BinaryLerpSource.combineSourceData",
    "name": "combineSourceData",
    "scope": "static",
    "kind": "function",
    "description": "Blends two sourceData maps together",
    "memberof": "<anonymous>~BinaryLerpSource",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "sourceAData"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "sourceBData"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "blendWeight"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "If store is supplied, the result is stored there",
        "name": "store"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "The blended result,"
      }
    ],
    "meta": {
      "lineno": 109,
      "filename": "BinaryLerpSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 456
  },
  {
    "id": "<anonymous>~BinaryLerpSource.blendFloatValues",
    "longname": "<anonymous>~BinaryLerpSource.blendFloatValues",
    "name": "blendFloatValues",
    "scope": "static",
    "kind": "function",
    "description": "Blends two float values and stores them in rVal",
    "memberof": "<anonymous>~BinaryLerpSource",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "The object in which to store result",
        "name": "rVal"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key to object rVal, so rVal[key] is the store",
        "name": "key"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "blendWeight"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "The float is wrapped in an array",
        "name": "dataA"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "The float is wrapped in an array",
        "name": "dataB"
      }
    ],
    "meta": {
      "lineno": 159,
      "filename": "BinaryLerpSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 457
  },
  {
    "id": "<anonymous>~TransformComponent#api.setTranslation",
    "longname": "<anonymous>~TransformComponent#api.setTranslation",
    "name": "setTranslation",
    "scope": "static",
    "kind": "function",
    "description": "Sets the translation of this entity. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "params": [
      {
        "type": {
          "names": [
            "Vector3",
            "Array.<number>"
          ]
        },
        "name": "translation"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity setTranslation method"
      }
    ],
    "meta": {
      "lineno": 76,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 720
  },
  {
    "id": "<anonymous>~TransformComponent#api.setRotation",
    "longname": "<anonymous>~TransformComponent#api.setRotation",
    "name": "setRotation",
    "scope": "static",
    "kind": "function",
    "description": "Sets the rotation of this entity. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "params": [
      {
        "type": {
          "names": [
            "Vector3",
            "Array.<number>"
          ]
        },
        "name": "angle"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity setRotation method"
      }
    ],
    "meta": {
      "lineno": 87,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 721
  },
  {
    "id": "<anonymous>~TransformComponent#api.setScale",
    "longname": "<anonymous>~TransformComponent#api.setScale",
    "name": "setScale",
    "scope": "static",
    "kind": "function",
    "description": "Sets the scale of this entity. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "params": [
      {
        "type": {
          "names": [
            "Vector3",
            "Array.<number>"
          ]
        },
        "name": "scale"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity setScale method"
      }
    ],
    "meta": {
      "lineno": 98,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 722
  },
  {
    "id": "<anonymous>~TransformComponent#api.lookAt",
    "longname": "<anonymous>~TransformComponent#api.lookAt",
    "name": "lookAt",
    "scope": "static",
    "kind": "function",
    "description": "Orients the entity so it faces the supplied look at point. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "params": [
      {
        "type": {
          "names": [
            "Vector3",
            "Array.<number>"
          ]
        },
        "name": "lookAtPoint"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity lookAt method"
      }
    ],
    "meta": {
      "lineno": 109,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 723
  },
  {
    "id": "<anonymous>~TransformComponent#api.move",
    "longname": "<anonymous>~TransformComponent#api.move",
    "name": "move",
    "scope": "static",
    "kind": "function",
    "description": "Translates the entity with the supplied amount multipled by the entity's orientation. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "params": [
      {
        "type": {
          "names": [
            "Vector3",
            "Array.<number>"
          ]
        },
        "name": "translation"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity move method"
      }
    ],
    "meta": {
      "lineno": 120,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 724
  },
  {
    "id": "<anonymous>~TransformComponent#api.getTranslation",
    "longname": "<anonymous>~TransformComponent#api.getTranslation",
    "name": "getTranslation",
    "scope": "static",
    "kind": "function",
    "description": "Returns the local translation of the entity. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Translation"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity getTranslation method"
      }
    ],
    "meta": {
      "lineno": 130,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 725
  },
  {
    "id": "<anonymous>~TransformComponent#api.getRotation",
    "longname": "<anonymous>~TransformComponent#api.getRotation",
    "name": "getRotation",
    "scope": "static",
    "kind": "function",
    "description": "Returns the local rotation of the entity. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Rotation"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity getRotation method"
      }
    ],
    "meta": {
      "lineno": 139,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 726
  },
  {
    "id": "<anonymous>~TransformComponent#api.getScale",
    "longname": "<anonymous>~TransformComponent#api.getScale",
    "name": "getScale",
    "scope": "static",
    "kind": "function",
    "description": "Returns the local scale of the entity. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Scale"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity getScale method"
      }
    ],
    "meta": {
      "lineno": 148,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 727
  },
  {
    "id": "<anonymous>~TransformComponent#api.addTranslation",
    "longname": "<anonymous>~TransformComponent#api.addTranslation",
    "name": "addTranslation",
    "scope": "static",
    "kind": "function",
    "description": "Translates the entity with the given amount. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "params": [
      {
        "type": {
          "names": [
            "Vector3",
            "Array.<number>"
          ]
        },
        "name": "translation"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity addTranslation method"
      }
    ],
    "meta": {
      "lineno": 158,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 728
  },
  {
    "id": "<anonymous>~TransformComponent#api.addRotation",
    "longname": "<anonymous>~TransformComponent#api.addRotation",
    "name": "addRotation",
    "scope": "static",
    "kind": "function",
    "description": "Rotates the entity with the given amount. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "params": [
      {
        "type": {
          "names": [
            "Vector3",
            "Array.<number>"
          ]
        },
        "name": "rotation"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity addRotation method"
      }
    ],
    "meta": {
      "lineno": 169,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 729
  },
  {
    "id": "<anonymous>~TransformComponent#api.attachChild",
    "longname": "<anonymous>~TransformComponent#api.attachChild",
    "name": "attachChild",
    "scope": "static",
    "kind": "function",
    "description": "Attaches the supplied entity to this entity as a child. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "name": "childEntity"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "If enabled will preserve the world transform of the child entity",
        "name": "keepTransform"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity attachChild method"
      }
    ],
    "meta": {
      "lineno": 183,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 730
  },
  {
    "id": "<anonymous>~TransformComponent#api.detachChild",
    "longname": "<anonymous>~TransformComponent#api.detachChild",
    "name": "detachChild",
    "scope": "static",
    "kind": "function",
    "description": "Detaches the supplied entity from this entity. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "name": "childEntity"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "If enabled will preserve the world transform of the child entity",
        "name": "keepTransform"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity detachChild method"
      }
    ],
    "meta": {
      "lineno": 195,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 731
  },
  {
    "id": "<anonymous>~TransformComponent#api.children",
    "longname": "<anonymous>~TransformComponent#api.children",
    "name": "children",
    "scope": "static",
    "kind": "function",
    "description": "Returns an {@link EntitySelection} of the children of this entity. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "returns": [
      {
        "type": {
          "names": [
            "EntitySelection"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity children method"
      }
    ],
    "meta": {
      "lineno": 205,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 732
  },
  {
    "id": "<anonymous>~TransformComponent#api.parent",
    "longname": "<anonymous>~TransformComponent#api.parent",
    "name": "parent",
    "scope": "static",
    "kind": "function",
    "description": "Returns an {@link EntitySelection} of the parent of this entity. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "returns": [
      {
        "type": {
          "names": [
            "EntitySelection"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity parent method"
      }
    ],
    "meta": {
      "lineno": 214,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 733
  },
  {
    "id": "<anonymous>~TransformComponent#api.traverse",
    "longname": "<anonymous>~TransformComponent#api.traverse",
    "name": "traverse",
    "scope": "static",
    "kind": "function",
    "description": "Traverses the entity hierarchy downwards starting from this entity and applies a function to all entities traversed.\nTraversal can be stopped if the function returns 'false'.\nInjected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The function to be applied to traversed entities. Takes an entity and the current deph level and returns a boolean.",
        "name": "callback"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "name": "level"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity traverse method"
      }
    ],
    "meta": {
      "lineno": 227,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 734
  },
  {
    "id": "<anonymous>~TransformComponent#api.traverseUp",
    "longname": "<anonymous>~TransformComponent#api.traverseUp",
    "name": "traverseUp",
    "scope": "static",
    "kind": "function",
    "description": "Traverses the entity hierarchy upwards starting from this entity and applies a function to all entities traversed.\nTraversal can be stopped if the function returns 'false'.\nInjected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The function to be applied to traversed entities. Takes an entity and returns a boolean.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity traverseUp method"
      }
    ],
    "meta": {
      "lineno": 248,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 735
  },
  {
    "id": "<anonymous>~TransformComponent#api.hide",
    "longname": "<anonymous>~TransformComponent#api.hide",
    "name": "hide",
    "scope": "static",
    "kind": "function",
    "description": "Hides the entity and its children. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity hide method"
      }
    ],
    "meta": {
      "lineno": 262,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 736
  },
  {
    "id": "<anonymous>~TransformComponent#api.show",
    "longname": "<anonymous>~TransformComponent#api.show",
    "name": "show",
    "scope": "static",
    "kind": "function",
    "description": "Clears the hidden flag on this entity. The entity may still not show if it has a hidden ancestor. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "Self to allow chaining"
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity show method"
      }
    ],
    "meta": {
      "lineno": 285,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 737
  },
  {
    "id": "<anonymous>~TransformComponent#api.isVisiblyHidden",
    "longname": "<anonymous>~TransformComponent#api.isVisiblyHidden",
    "name": "isVisiblyHidden",
    "scope": "static",
    "kind": "function",
    "description": "Returns whether the entity or any of its ancestors are hidden. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity isVisiblyHidden method"
      }
    ],
    "meta": {
      "lineno": 322,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 738
  },
  {
    "id": "<anonymous>~TransformComponent#api.isHidden",
    "longname": "<anonymous>~TransformComponent#api.isHidden",
    "name": "isHidden",
    "scope": "static",
    "kind": "function",
    "description": "Returns the 'hidden' status of this entity. The entity may still be hidden if one of its ancestors is hidden. Injected on entities with a transformComponent",
    "memberof": "<anonymous>~TransformComponent#api",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "target-class",
        "value": "Entity isHidden method"
      }
    ],
    "meta": {
      "lineno": 344,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 739
  },
  {
    "id": "<anonymous>~EntitySelection.installMethod",
    "longname": "<anonymous>~EntitySelection.installMethod",
    "name": "installMethod",
    "scope": "static",
    "kind": "function",
    "description": "Installs a method that acts upon entities on the prototype of EntitySelection",
    "memberof": "<anonymous>~EntitySelection",
    "params": [
      {
        "name": "method"
      },
      {
        "name": "name"
      },
      {
        "name": "dependentComponent"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 213,
      "filename": "EntitySelection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 787
  },
  {
    "id": "<anonymous>~EntityUtils.clone",
    "longname": "<anonymous>~EntityUtils.clone",
    "name": "clone",
    "scope": "static",
    "kind": "function",
    "description": "Clone entity hierarchy with optional settings for sharing data and callbacks.",
    "memberof": "<anonymous>~EntityUtils",
    "params": [
      {
        "type": {
          "names": [
            "World"
          ]
        },
        "name": "world"
      },
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity to clone",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "settings"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Cloning entities clones their mesh data by default",
        "name": "settings.shareMeshData"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Cloning entities clones their materials by default",
        "name": "settings.shareMaterials"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Cloning entities clones their materials' uniforms by default",
        "name": "settings.shareUniforms"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Cloning entities clones their materials' textures by default",
        "name": "settings.shareTextures"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "Callback to be run on every new entity. Takes entity as argument. Runs bottom to top in the cloned hierarchy.",
        "name": "settings.callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The cloned entity."
      }
    ],
    "meta": {
      "lineno": 127,
      "filename": "EntityUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 791
  },
  {
    "id": "<anonymous>~EntityUtils.getRoot",
    "longname": "<anonymous>~EntityUtils.getRoot",
    "name": "getRoot",
    "scope": "static",
    "kind": "function",
    "description": "Traverse the entity hierarchy upwards, returning the root entity",
    "memberof": "<anonymous>~EntityUtils",
    "params": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The entity to begin traversing from",
        "name": "entity"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        },
        "description": "The root entity"
      }
    ],
    "meta": {
      "lineno": 151,
      "filename": "EntityUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 792
  },
  {
    "id": "<anonymous>~EntityUtils.getTotalBoundingBox",
    "longname": "<anonymous>~EntityUtils.getTotalBoundingBox",
    "name": "getTotalBoundingBox",
    "scope": "static",
    "kind": "function",
    "description": "Returns the merged bounding box of the entity and its children",
    "memberof": "<anonymous>~EntityUtils",
    "params": [
      {
        "name": "entity"
      }
    ],
    "meta": {
      "lineno": 171,
      "filename": "EntityUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 793
  },
  {
    "id": "<anonymous>~PolyLine.fromCubicBezier",
    "longname": "<anonymous>~PolyLine.fromCubicBezier",
    "name": "fromCubicBezier",
    "scope": "static",
    "kind": "function",
    "description": "Creates a polyLine that approximates a given cubic Bezier curve",
    "memberof": "<anonymous>~PolyLine",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "optional": true,
        "description": "The Bezier curve control vertices. This array must contain exactly 12 elements (4 control points with 3 coordinates each)",
        "name": "verts"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 16,
        "description": "The number of segments (higher values result in smoother curves)",
        "name": "nSegments"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "PolyLine"
          ]
        },
        "description": "The resulting polyLine"
      }
    ],
    "meta": {
      "lineno": 210,
      "filename": "PolyLine.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 972
  },
  {
    "id": "<anonymous>~PolyLine.fromCubicSpline",
    "longname": "<anonymous>~PolyLine.fromCubicSpline",
    "name": "fromCubicSpline",
    "scope": "static",
    "kind": "function",
    "description": "Creates a polyLine that approximates a given cubic spline",
    "memberof": "<anonymous>~PolyLine",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "optional": true,
        "description": "The spline control vertices. This array must contain exactly 3 * number_of_control_points (+ 1 if the spline is open) elements",
        "name": "verts"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 16,
        "description": "The number of segments for each Bezier curve that forms the spline (higher values result in smoother curves)",
        "name": "nSegments"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "True if the spline should be closed or not",
        "name": "closed"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "PolyLine"
          ]
        },
        "description": "The resulting polyLine"
      }
    ],
    "meta": {
      "lineno": 296,
      "filename": "PolyLine.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 973
  },
  {
    "id": "<anonymous>~Surface.createFromHeightMap",
    "longname": "<anonymous>~Surface.createFromHeightMap",
    "name": "createFromHeightMap",
    "scope": "static",
    "kind": "function",
    "description": "Create a Surface from a supplied height map in the form of a matrix",
    "memberof": "<anonymous>~Surface",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "optional": true,
        "description": "The height map",
        "name": "heightMap"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "xScale"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "yScale"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "name": "zScale"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Surface"
          ]
        },
        "description": "The created surface"
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/geometrypack/Surface/HeightMap-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 172,
      "filename": "Surface.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 978
  },
  {
    "id": "<anonymous>~Surface.createTessellatedFlat",
    "longname": "<anonymous>~Surface.createTessellatedFlat",
    "name": "createTessellatedFlat",
    "scope": "static",
    "kind": "function",
    "description": "Create a tessellated Surface typically useful for a waterplane to reduce z-fighting",
    "memberof": "<anonymous>~Surface",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "x axis size in units",
        "name": "xSize"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "z axis size in numbers",
        "name": "zSize"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "x axis vertex count",
        "name": "xCount"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "z axis vertex count",
        "name": "zCount"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Surface"
          ]
        },
        "description": "The surface mesh"
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/geometrypack/Surface/HeightMap-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 201,
      "filename": "Surface.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 979
  },
  {
    "id": "<anonymous>~DdsUtils.shiftCount",
    "longname": "<anonymous>~DdsUtils.shiftCount",
    "name": "shiftCount",
    "scope": "static",
    "kind": "function",
    "description": "Get the necessary bit shifts needed to align mask with 0.",
    "memberof": "<anonymous>~DdsUtils",
    "params": [
      {
        "description": "the bit mask to test",
        "name": "mask"
      }
    ],
    "returns": [
      {
        "description": "number of bits to shift to the right to align mask with 0."
      }
    ],
    "meta": {
      "lineno": 20,
      "filename": "DdsUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/dds"
    },
    "order": 1008
  },
  {
    "id": "<anonymous>~DdsUtils.isSet",
    "longname": "<anonymous>~DdsUtils.isSet",
    "name": "isSet",
    "scope": "static",
    "kind": "function",
    "description": "Check a value against a bit mask to see if it is set.",
    "memberof": "<anonymous>~DdsUtils",
    "params": [
      {
        "description": "the value to check",
        "name": "value"
      },
      {
        "description": "our mask",
        "name": "bitMask"
      }
    ],
    "returns": [
      {
        "description": "true if the mask passes"
      }
    ],
    "meta": {
      "lineno": 43,
      "filename": "DdsUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/dds"
    },
    "order": 1009
  },
  {
    "id": "<anonymous>~DdsUtils.getIntFromString",
    "longname": "<anonymous>~DdsUtils.getIntFromString",
    "name": "getIntFromString",
    "scope": "static",
    "kind": "function",
    "description": "Get the string as a dword int value.",
    "memberof": "<anonymous>~DdsUtils",
    "params": [
      {
        "description": "our string... should only be 1-4 chars long. Expected to be 1 byte chars.",
        "name": "string"
      }
    ],
    "returns": [
      {
        "description": "the int value"
      }
    ],
    "meta": {
      "lineno": 52,
      "filename": "DdsUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/dds"
    },
    "order": 1010
  },
  {
    "id": "<anonymous>~DdsUtils.getIntFromBytes",
    "longname": "<anonymous>~DdsUtils.getIntFromBytes",
    "name": "getIntFromBytes",
    "scope": "static",
    "kind": "function",
    "description": "Get the byte array as a dword int value.",
    "memberof": "<anonymous>~DdsUtils",
    "params": [
      {
        "description": "our array... should only be 1-4 bytes long.",
        "name": "bytes"
      }
    ],
    "returns": [
      {
        "description": "the int value"
      }
    ],
    "meta": {
      "lineno": 65,
      "filename": "DdsUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/dds"
    },
    "order": 1011
  },
  {
    "id": "<anonymous>~DdsUtils.flipDXT",
    "longname": "<anonymous>~DdsUtils.flipDXT",
    "name": "flipDXT",
    "scope": "static",
    "kind": "function",
    "description": "Flip a dxt mipmap/image. Inspired by similar code in opentk and the nvidia sdk.",
    "memberof": "<anonymous>~DdsUtils",
    "params": [
      {
        "description": "our unflipped image as raw bytes",
        "name": "rawData"
      },
      {
        "description": "our image's width",
        "name": "width"
      },
      {
        "description": "our image's height",
        "name": "height"
      },
      {
        "description": "our image's format",
        "name": "format"
      }
    ],
    "returns": [
      {
        "description": "the flipped image as raw bytes."
      }
    ],
    "meta": {
      "lineno": 112,
      "filename": "DdsUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/dds"
    },
    "order": 1012
  },
  {
    "id": "<anonymous>~DynamicLoader._getRefsFromConfig",
    "longname": "<anonymous>~DynamicLoader._getRefsFromConfig",
    "name": "_getRefsFromConfig",
    "scope": "static",
    "kind": "function",
    "description": "Traverses a json-like structure and collects refs in an array",
    "memberof": "<anonymous>~DynamicLoader",
    "params": [
      {
        "name": "config"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 341,
      "filename": "DynamicLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders"
    },
    "order": 1025
  },
  {
    "id": "<anonymous>~DynamicLoader.getTypeForRef",
    "longname": "<anonymous>~DynamicLoader.getTypeForRef",
    "name": "getTypeForRef",
    "scope": "static",
    "kind": "function",
    "description": "Gets the type of a reference.",
    "memberof": "<anonymous>~DynamicLoader",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Reference.",
        "name": "ref"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of reference."
      }
    ],
    "meta": {
      "lineno": 392,
      "filename": "DynamicLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders"
    },
    "order": 1026
  },
  {
    "id": "<anonymous>~ComponentHandler.getHandler",
    "longname": "<anonymous>~ComponentHandler.getHandler",
    "name": "getHandler",
    "scope": "static",
    "kind": "function",
    "description": "Get a handler class for the specified type of component. The type can be e.g. 'camera', 'transform', etc.\nThe type name should not end with \"Component\".",
    "memberof": "<anonymous>~ComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Class"
          ]
        },
        "description": "A subclass of {ComponentHandler}, or null if no registered handler for the given type was found."
      }
    ],
    "meta": {
      "lineno": 102,
      "filename": "ComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1040
  },
  {
    "id": "<anonymous>~ComponentHandler._registerClass",
    "longname": "<anonymous>~ComponentHandler._registerClass",
    "name": "_registerClass",
    "scope": "static",
    "kind": "function",
    "description": "Register a handler for a component type. Called in the class body of subclasses.",
    "memberof": "<anonymous>~ComponentHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "type"
      },
      {
        "type": {
          "names": [
            "Class"
          ]
        },
        "description": "the class to register for this component type",
        "name": "klass"
      }
    ],
    "meta": {
      "lineno": 111,
      "filename": "ComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1041
  },
  {
    "id": "<anonymous>~ConfigHandler.getHandler",
    "longname": "<anonymous>~ConfigHandler.getHandler",
    "name": "getHandler",
    "scope": "static",
    "kind": "function",
    "description": "Get a handler class for the specified type of resource. The resource can be e.g. 'texture', 'mesh', etc.",
    "memberof": "<anonymous>~ConfigHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Class"
          ]
        },
        "description": "A subclass of {ConfigHandler}, or null if no registered handler for the given type was found."
      }
    ],
    "meta": {
      "lineno": 160,
      "filename": "ConfigHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1049
  },
  {
    "id": "<anonymous>~ConfigHandler._registerClass",
    "longname": "<anonymous>~ConfigHandler._registerClass",
    "name": "_registerClass",
    "scope": "static",
    "kind": "function",
    "description": "Register a handler for a component type. Called in the class body of subclasses.",
    "memberof": "<anonymous>~ConfigHandler",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "type"
      },
      {
        "type": {
          "names": [
            "Class"
          ]
        },
        "description": "the class to register for this component type",
        "name": "klass"
      }
    ],
    "meta": {
      "lineno": 169,
      "filename": "ConfigHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1050
  },
  {
    "id": "<anonymous>~LogicInterface.makePortDataName",
    "longname": "<anonymous>~LogicInterface.makePortDataName",
    "name": "makePortDataName",
    "scope": "static",
    "kind": "function",
    "description": "Computes a name for the port that can be saved in the data model without having it confused when (other) ports are added/removed",
    "memberof": "<anonymous>~LogicInterface",
    "params": [
      {
        "description": "Port description object as returned by createDynamicInput/Output or from the getPorts() array.",
        "name": "port"
      }
    ],
    "meta": {
      "lineno": 120,
      "filename": "LogicInterface.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1150
  },
  {
    "id": "<anonymous>~LogicLayer.doConnections",
    "longname": "<anonymous>~LogicLayer.doConnections",
    "name": "doConnections",
    "scope": "static",
    "kind": "function",
    "description": "Resolve all outgoing connections from the logic instance instDesc and\ncall the provided callback function on each connected target.",
    "memberof": "<anonymous>~LogicLayer",
    "meta": {
      "lineno": 192,
      "filename": "LogicLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1154
  },
  {
    "id": "<anonymous>~LogicLayer.writeValue",
    "longname": "<anonymous>~LogicLayer.writeValue",
    "name": "writeValue",
    "scope": "static",
    "kind": "function",
    "description": "Writes a value using an instance descriptor and a portID (which must be registered through the interface the instance\nwas created with). All connected objects get the onPropertyWrite call.",
    "memberof": "<anonymous>~LogicLayer",
    "meta": {
      "lineno": 233,
      "filename": "LogicLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1155
  },
  {
    "id": "<anonymous>~LogicLayer.writeValueToLayerOutput",
    "longname": "<anonymous>~LogicLayer.writeValueToLayerOutput",
    "name": "writeValueToLayerOutput",
    "scope": "static",
    "kind": "function",
    "description": "Use this to write a layer to an output node, they need to be treated specially.",
    "memberof": "<anonymous>~LogicLayer",
    "params": [
      {
        "description": "instDesc of the output node",
        "name": "outNodeDesc"
      },
      {
        "description": "Port id of the output port",
        "name": "outPortDesc"
      },
      {
        "description": "Value to write",
        "name": "value"
      }
    ],
    "meta": {
      "lineno": 266,
      "filename": "LogicLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1156
  },
  {
    "id": "<anonymous>~LogicLayer.readPort",
    "longname": "<anonymous>~LogicLayer.readPort",
    "name": "readPort",
    "scope": "static",
    "kind": "function",
    "description": "Read a (possibly cached) value from an input port on a particular node.",
    "memberof": "<anonymous>~LogicLayer",
    "params": [
      {
        "description": "instDesc of the node to read from",
        "name": "instDesc"
      },
      {
        "description": "portID of interest",
        "name": "portID"
      }
    ],
    "returns": [
      {
        "description": "Returns the value at the port"
      }
    ],
    "meta": {
      "lineno": 278,
      "filename": "LogicLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1157
  },
  {
    "id": "<anonymous>~LogicLayer.fireEvent",
    "longname": "<anonymous>~LogicLayer.fireEvent",
    "name": "fireEvent",
    "scope": "static",
    "kind": "function",
    "description": "Fire an event.",
    "memberof": "<anonymous>~LogicLayer",
    "params": [
      {
        "description": "The port connecting the event. (Returned when registering the event port)",
        "name": "portId"
      }
    ],
    "meta": {
      "lineno": 310,
      "filename": "LogicLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack/logic"
    },
    "order": 1158
  },
  {
    "id": "<anonymous>~MathUtils.radFromDeg",
    "longname": "<anonymous>~MathUtils.radFromDeg",
    "name": "radFromDeg",
    "scope": "static",
    "kind": "function",
    "description": "Converts an angle from degrees to radians.",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Angle in degrees.",
        "name": "degrees"
      }
    ],
    "examples": [
      "// converts 70 degrees to a radian\nvar a = MathUtils.radFromDeg(70);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Angle in radians."
      }
    ],
    "meta": {
      "lineno": 59,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1206
  },
  {
    "id": "<anonymous>~MathUtils.degFromRad",
    "longname": "<anonymous>~MathUtils.degFromRad",
    "name": "degFromRad",
    "scope": "static",
    "kind": "function",
    "description": "Converts an angle from radians to degrees.",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Angle in radians.",
        "name": "radians"
      }
    ],
    "examples": [
      "// converts Math.PI to 180 degrees\nvar a = MathUtils.degFromRad(Math.PI);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Angle in degrees."
      }
    ],
    "meta": {
      "lineno": 71,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1207
  },
  {
    "id": "<anonymous>~MathUtils.lerp",
    "longname": "<anonymous>~MathUtils.lerp",
    "name": "lerp",
    "scope": "static",
    "kind": "function",
    "description": "Linearly interpolates between two values. Extrapolates if factor is smaller than zero or greater than one.",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Factor of interpolation.",
        "name": "factor"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Start value.",
        "name": "start"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "End value.",
        "name": "end"
      }
    ],
    "examples": [
      "// earlier in code (outside of the update loop)\nvar x = 0;\n// inside the update loop\nx = MathUtils.lerp(tpf, x, 5);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Interpolated value."
      }
    ],
    "meta": {
      "lineno": 87,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1208
  },
  {
    "id": "<anonymous>~MathUtils.clamp",
    "longname": "<anonymous>~MathUtils.clamp",
    "name": "clamp",
    "scope": "static",
    "kind": "function",
    "description": "Clamps a value to a given interval. The interval is defined by min and max where min should be smaller than max. If min is greater\nthan max, the two parameters are reversed.",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Input value.",
        "name": "value"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Lower bound of interval (inclusive).",
        "name": "min"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Upper bound of interval (inclusive).",
        "name": "max"
      }
    ],
    "examples": [
      "var a = -1;\na = Math.clamp(a, 0, 9); // a == 0"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Clamped value."
      }
    ],
    "meta": {
      "lineno": 106,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1209
  },
  {
    "id": "<anonymous>~MathUtils.radialClamp",
    "longname": "<anonymous>~MathUtils.radialClamp",
    "name": "radialClamp",
    "scope": "static",
    "kind": "function",
    "description": "Clamps an angle to a given interval. The interval is defined by min and max. If min is larger than max, the clamp will wrap around.",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Input value.",
        "name": "value"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Lower bound of interval (inclusive).",
        "name": "min"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Upper bound of interval (inclusive).",
        "name": "max"
      }
    ],
    "examples": [
      "var a = -1;\na = Math.radialClamp(a, 0, 9); // a == 0"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Clamped value."
      }
    ],
    "meta": {
      "lineno": 124,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1210
  },
  {
    "id": "<anonymous>~MathUtils.moduloPositive",
    "longname": "<anonymous>~MathUtils.moduloPositive",
    "name": "moduloPositive",
    "scope": "static",
    "kind": "function",
    "description": "Calculates the positive modulo",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "size"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Wrapped value"
      }
    ],
    "meta": {
      "lineno": 146,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1211
  },
  {
    "id": "<anonymous>~MathUtils.scurve3",
    "longname": "<anonymous>~MathUtils.scurve3",
    "name": "scurve3",
    "scope": "static",
    "kind": "function",
    "description": "Computes a value on the c1-continuous cubic s-curve \"y = -2x^3 + 3x^2\".",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Input value in the range between zero and one.",
        "name": "x"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Value on curve."
      }
    ],
    "meta": {
      "lineno": 157,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1212
  },
  {
    "id": "<anonymous>~MathUtils.scurve5",
    "longname": "<anonymous>~MathUtils.scurve5",
    "name": "scurve5",
    "scope": "static",
    "kind": "function",
    "description": "Computes a value on the c2-continuous quintic s-curve \"y = 6x^5 - 15x^4 + 10x^3\".",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Input value in the range between zero and one.",
        "name": "x"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Value on curve."
      }
    ],
    "meta": {
      "lineno": 166,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1213
  },
  {
    "id": "<anonymous>~MathUtils.sphericalToCartesian",
    "longname": "<anonymous>~MathUtils.sphericalToCartesian",
    "name": "sphericalToCartesian",
    "scope": "static",
    "kind": "function",
    "description": "Converts Spherical coordinates in radians to a Vector3 Cartesian point (using positive Y as up) and stores the results in the store var.",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "(distance)",
        "name": "radius"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "(heading)",
        "name": "azimuth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "(elevation)",
        "name": "polar"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "store"
      }
    ],
    "examples": [
      "var distance = 5;\nvar heading = 180;\nvar elevation = 30;\nvar position = new Vector3();\nMathUtils.sphericalToCartesian(distance, heading, elevation, position);"
    ],
    "meta": {
      "lineno": 183,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1214
  },
  {
    "id": "<anonymous>~MathUtils.cartesianToSpherical",
    "longname": "<anonymous>~MathUtils.cartesianToSpherical",
    "name": "cartesianToSpherical",
    "scope": "static",
    "kind": "function",
    "description": "Converts a point from Cartesian coordinates to Spherical radian coordinates (using positive Y as up) and stores the results in the store var.",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "z"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "name": "store"
      }
    ],
    "examples": [
      "var sphericalCoord = new Vector3();\nvar pos = entity.transformComponent.transform.translation.\nMathUtils.cartesianToSpherical(pos.x, pos.y, pos.z, sphericalCoord);"
    ],
    "meta": {
      "lineno": 202,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1215
  },
  {
    "id": "<anonymous>~MathUtils.getTriangleNormal",
    "longname": "<anonymous>~MathUtils.getTriangleNormal",
    "name": "getTriangleNormal",
    "scope": "static",
    "kind": "function",
    "description": "Computes the normal of a given triangle",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "P.x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "P.y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "P.z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "Q.x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "Q.y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "Q.z"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "R.x"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "R.y"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "R.z"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "The triangle's normal"
      }
    ],
    "meta": {
      "lineno": 222,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1216
  },
  {
    "id": "<anonymous>~MathUtils.isPowerOfTwo",
    "longname": "<anonymous>~MathUtils.isPowerOfTwo",
    "name": "isPowerOfTwo",
    "scope": "static",
    "kind": "function",
    "description": "Checks if a value is power of two",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Number to check for power of two",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "true if value is power of two"
      }
    ],
    "meta": {
      "lineno": 243,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1217
  },
  {
    "id": "<anonymous>~MathUtils.nearestPowerOfTwo",
    "longname": "<anonymous>~MathUtils.nearestPowerOfTwo",
    "name": "nearestPowerOfTwo",
    "scope": "static",
    "kind": "function",
    "description": "Gets the nearest higher power of two for a value",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Number to get the nearest power of two from",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Nearest power of two"
      }
    ],
    "meta": {
      "lineno": 252,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1218
  },
  {
    "id": "<anonymous>~MathUtils.closeTo",
    "longname": "<anonymous>~MathUtils.closeTo",
    "name": "closeTo",
    "scope": "static",
    "kind": "function",
    "description": "Returns true if the 2 values supplied are approximately the same",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "name": "v1"
      },
      {
        "name": "v2"
      },
      {
        "name": "tolerance"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 279,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1220
  },
  {
    "id": "<anonymous>~MathUtils.sign",
    "longname": "<anonymous>~MathUtils.sign",
    "name": "sign",
    "scope": "static",
    "kind": "function",
    "description": "Returns the sign of the supplied parameter",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 289,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1221
  },
  {
    "id": "<anonymous>~MathUtils.triangleArea",
    "longname": "<anonymous>~MathUtils.triangleArea",
    "name": "triangleArea",
    "scope": "static",
    "kind": "function",
    "description": "Computes the area of a 2D triangle",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "First point of the triangle",
        "name": "t1"
      },
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Second point of the triangle",
        "name": "t2"
      },
      {
        "type": {
          "names": [
            "Vector2"
          ]
        },
        "description": "Third point of the triangle",
        "name": "t3"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 300,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1222
  },
  {
    "id": "<anonymous>~MathUtils.barycentricInterpolation",
    "longname": "<anonymous>~MathUtils.barycentricInterpolation",
    "name": "barycentricInterpolation",
    "scope": "static",
    "kind": "function",
    "description": "Computes the height of a point located inside a triangle. Height is assumed to bound to the Z axis.",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "First point of the triangle",
        "name": "t1"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Second point of the triangle",
        "name": "t2"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "Third point of the triangle",
        "name": "t3"
      },
      {
        "type": {
          "names": [
            "Vector3"
          ]
        },
        "description": "The point for which to compute the height",
        "name": "p"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 313,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1223
  },
  {
    "id": "<anonymous>~MathUtils.smoothstep",
    "longname": "<anonymous>~MathUtils.smoothstep",
    "name": "smoothstep",
    "scope": "static",
    "kind": "function",
    "description": "Performs smooth Hermite interpolation between 0 and 1 when edge0 < x < edge1.\nThis is useful in cases where a threshold function with a smooth transition is desired.",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Specifies the value of the lower edge of the Hermite function.",
        "name": "edge0"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Specifies the value of the upper edge of the Hermite function.",
        "name": "edge1"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Specifies the source value for interpolation.",
        "name": "x"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 342,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1224
  },
  {
    "id": "<anonymous>~MathUtils.fastRandom",
    "longname": "<anonymous>~MathUtils.fastRandom",
    "name": "fastRandom",
    "scope": "static",
    "kind": "function",
    "description": "Rough random generation with seeding. Set random seed through MathUtils.randomSeed = {new seed value}",
    "memberof": "<anonymous>~MathUtils",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Random number between 0 and 1."
      }
    ],
    "meta": {
      "lineno": 358,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1226
  },
  {
    "id": "<anonymous>~MathUtils.warnNaN",
    "longname": "<anonymous>~MathUtils.warnNaN",
    "name": "warnNaN",
    "scope": "static",
    "kind": "function",
    "description": "Defines a property on an object that throws an exception when NaN is being assigned to it.\nUseful for debugging.",
    "memberof": "<anonymous>~MathUtils",
    "params": [
      {
        "name": "object"
      },
      {
        "name": "property"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 405,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1228
  },
  {
    "id": "<anonymous>~Matrix.setupAliases",
    "longname": "<anonymous>~Matrix.setupAliases",
    "name": "setupAliases",
    "scope": "static",
    "kind": "function",
    "description": "Binds aliases to the different matrix components.",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "The prototype to bind to.",
        "name": "prototype"
      },
      {
        "type": {
          "names": [
            "Array.<Array.<string>>"
          ]
        },
        "description": "Array of component aliases for each component index.",
        "name": "aliases"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 31,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1232
  },
  {
    "id": "<anonymous>~Matrix.addPostCheck",
    "longname": "<anonymous>~Matrix.addPostCheck",
    "name": "addPostCheck",
    "scope": "static",
    "kind": "function",
    "description": "Replaces the supplied method of object and wraps it in a integrity check",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "The object to attach the post-check to",
        "name": "object"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the original method the check is attached to",
        "name": "methodName"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 84,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1234
  },
  {
    "id": "<anonymous>~Matrix.addPostChecks",
    "longname": "<anonymous>~Matrix.addPostChecks",
    "name": "addPostChecks",
    "scope": "static",
    "kind": "function",
    "description": "Adds more validators at once",
    "memberof": "<anonymous>~Matrix",
    "params": [
      {
        "name": "object"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "name": "methodNames"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 105,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1235
  },
  {
    "id": "<anonymous>~Matrix2.invert",
    "longname": "<anonymous>~Matrix2.invert",
    "name": "invert",
    "scope": "static",
    "kind": "function",
    "description": "Computes the analytical inverse and stores the result in a separate matrix.",
    "memberof": "<anonymous>~Matrix2",
    "params": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "Source matrix.",
        "name": "source"
      },
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "optional": true,
        "description": "Target matrix.",
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix2"
          ]
        },
        "description": "A new matrix if the target matrix is omitted, else the target matrix."
      }
    ],
    "meta": {
      "lineno": 169,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1266
  },
  {
    "id": "<anonymous>~Matrix3.invert",
    "longname": "<anonymous>~Matrix3.invert",
    "name": "invert",
    "scope": "static",
    "kind": "function",
    "description": "Computes the analytical inverse and stores the result in a separate matrix.",
    "memberof": "<anonymous>~Matrix3",
    "params": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "Source matrix.",
        "name": "source"
      },
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "optional": true,
        "description": "Target matrix.",
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix3"
          ]
        },
        "description": "A new matrix if the target matrix is omitted, else the target matrix."
      }
    ],
    "meta": {
      "lineno": 226,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1295
  },
  {
    "id": "<anonymous>~Matrix4.invert",
    "longname": "<anonymous>~Matrix4.invert",
    "name": "invert",
    "scope": "static",
    "kind": "function",
    "description": "Computes the analytical inverse and stores the result in a separate matrix.",
    "memberof": "<anonymous>~Matrix4",
    "params": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "Source matrix.",
        "name": "source"
      },
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "optional": true,
        "description": "Target matrix.",
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Matrix4"
          ]
        },
        "description": "A new matrix if the target matrix is omitted, else the target matrix."
      }
    ],
    "meta": {
      "lineno": 256,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1335
  },
  {
    "id": "<anonymous>~Quaternion.slerp",
    "longname": "<anonymous>~Quaternion.slerp",
    "name": "slerp",
    "scope": "static",
    "kind": "function",
    "description": "Computes the spherical linear interpolation between startQuat and endQuat.",
    "memberof": "<anonymous>~Quaternion",
    "params": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Start quaternion.",
        "name": "startQuat"
      },
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "End quaternion.",
        "name": "endQuat"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Interpolation factor between 0.0 and 1.0.",
        "name": "changeAmnt"
      },
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "Work quaternion.",
        "name": "workQuat"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Quaternion"
          ]
        },
        "description": "workQuat The interpolated work quaternion."
      }
    ],
    "meta": {
      "lineno": 114,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1376
  },
  {
    "id": "<anonymous>~Spline.quadraticInterpolation",
    "longname": "<anonymous>~Spline.quadraticInterpolation",
    "name": "quadraticInterpolation",
    "scope": "static",
    "kind": "function",
    "description": "Interpolate on a quadratic Bezier curve",
    "memberof": "<anonymous>~Spline",
    "params": [
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "First control point",
        "name": "p0"
      },
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "Second control point",
        "name": "p1"
      },
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "Third control point",
        "name": "p2"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Takes values between 0 and 1",
        "name": "t"
      },
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "Vector to store the result to",
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 45,
      "filename": "Spline.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math/splines"
    },
    "order": 1418
  },
  {
    "id": "<anonymous>~Spline.cubicInterpolation",
    "longname": "<anonymous>~Spline.cubicInterpolation",
    "name": "cubicInterpolation",
    "scope": "static",
    "kind": "function",
    "description": "Interpolate on a quadratic Bezier curve",
    "memberof": "<anonymous>~Spline",
    "params": [
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "First control point",
        "name": "p0"
      },
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "Second control point",
        "name": "p1"
      },
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "Third control point",
        "name": "p2"
      },
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "Fourth control point",
        "name": "p3"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Takes values between 0 and 1",
        "name": "t"
      },
      {
        "type": {
          "names": [
            "Vector"
          ]
        },
        "description": "Vector to store the result to",
        "name": "store"
      }
    ],
    "meta": {
      "lineno": 119,
      "filename": "Spline.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math/splines"
    },
    "order": 1419
  },
  {
    "id": "<anonymous>~Transform.combine",
    "longname": "<anonymous>~Transform.combine",
    "name": "combine",
    "scope": "static",
    "kind": "function",
    "description": "Combines two transforms into one. This will only work if scaling in the left hand transform is uniform",
    "memberof": "<anonymous>~Transform",
    "params": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "left hand side transform",
        "name": "lhs"
      },
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "right hand side transform",
        "name": "rhs"
      },
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "name": "target"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Transform"
          ]
        },
        "description": "target"
      }
    ],
    "meta": {
      "lineno": 50,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1432
  },
  {
    "id": "<anonymous>~Vector.setupAliases",
    "longname": "<anonymous>~Vector.setupAliases",
    "name": "setupAliases",
    "scope": "static",
    "kind": "function",
    "description": "Binds aliases to the different vector components.",
    "memberof": "<anonymous>~Vector",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "The prototype to bind to.",
        "name": "prototype"
      },
      {
        "type": {
          "names": [
            "Array.<Array.<string>>"
          ]
        },
        "description": "Array of component aliases for each component index.",
        "name": "aliases"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 34,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1446
  },
  {
    "id": "<anonymous>~Vector.addReturnCheck",
    "longname": "<anonymous>~Vector.addReturnCheck",
    "name": "addReturnCheck",
    "scope": "static",
    "kind": "function",
    "description": "Replaces the supplied method of object and wraps it in a integrity check",
    "memberof": "<anonymous>~Vector",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "The object to attach the post-check to",
        "name": "object"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the original method the check is attached to",
        "name": "methodName"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 77,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1447
  },
  {
    "id": "<anonymous>~Vector.addReturnChecks",
    "longname": "<anonymous>~Vector.addReturnChecks",
    "name": "addReturnChecks",
    "scope": "static",
    "kind": "function",
    "description": "Adds more validators at once",
    "memberof": "<anonymous>~Vector",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "object"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "name": "methodNames"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 95,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1448
  },
  {
    "id": "<anonymous>~Vector2.fromArray",
    "longname": "<anonymous>~Vector2.fromArray",
    "name": "fromArray",
    "scope": "static",
    "kind": "function",
    "description": "Creates a Vector2 given an array",
    "memberof": "<anonymous>~Vector2",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "name": "array"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 531,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1514
  },
  {
    "id": "<anonymous>~Vector2.fromAny",
    "longname": "<anonymous>~Vector2.fromAny",
    "name": "fromAny",
    "scope": "static",
    "kind": "function",
    "description": "Creates a Vector2 given 3 numbers, an array, an {x, y} object or another Vector2",
    "memberof": "<anonymous>~Vector2",
    "returns": [
      {
        "type": {
          "names": [
            "Vector2"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 539,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1515
  },
  {
    "id": "<anonymous>~Vector3.fromArray",
    "longname": "<anonymous>~Vector3.fromArray",
    "name": "fromArray",
    "scope": "static",
    "kind": "function",
    "description": "Creates a Vector3 given an array",
    "memberof": "<anonymous>~Vector3",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "name": "array"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 699,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1570
  },
  {
    "id": "<anonymous>~Vector3.fromAny",
    "longname": "<anonymous>~Vector3.fromAny",
    "name": "fromAny",
    "scope": "static",
    "kind": "function",
    "description": "Creates a Vector3 given 3 numbers, an array, an {x, y, z} object or another Vector3",
    "memberof": "<anonymous>~Vector3",
    "returns": [
      {
        "type": {
          "names": [
            "Vector3"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 707,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1571
  },
  {
    "id": "<anonymous>~Vector4.fromArray",
    "longname": "<anonymous>~Vector4.fromArray",
    "name": "fromArray",
    "scope": "static",
    "kind": "function",
    "description": "Creates a Vector4 given an array",
    "memberof": "<anonymous>~Vector4",
    "params": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "name": "array"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 621,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1626
  },
  {
    "id": "<anonymous>~Vector4.fromAny",
    "longname": "<anonymous>~Vector4.fromAny",
    "name": "fromAny",
    "scope": "static",
    "kind": "function",
    "description": "Creates a Vector4 given 4 numbers, an array, an {x, y, z, w} object or another Vector4",
    "memberof": "<anonymous>~Vector4",
    "returns": [
      {
        "type": {
          "names": [
            "Vector4"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 629,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1627
  },
  {
    "id": "<anonymous>~Noise.split",
    "longname": "<anonymous>~Noise.split",
    "name": "split",
    "scope": "static",
    "kind": "function",
    "description": "Splits a real-valued number into a record for use in smooth interpolation.",
    "memberof": "<anonymous>~Noise",
    "params": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Input value.",
        "name": "x"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Object containing 'i0', 'i1', 'f0' and 'f1' members. (Integer, Integer, Float, Float)"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 40,
      "filename": "Noise.js",
      "path": "/Users/schteppe/git/goojs/src/goo/noise"
    },
    "order": 1642
  },
  {
    "id": "<anonymous>~Noise.fractal1d",
    "longname": "<anonymous>~Noise.fractal1d",
    "name": "fractal1d",
    "scope": "static",
    "kind": "function",
    "description": "Evaluates a one-dimensional fractal noise function at a specific position.",
    "memberof": "<anonymous>~Noise",
    "params": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position x.",
        "name": "x"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Base scale. Greater scale values will pull the sources (hills and valleys) further apart.",
        "name": "scale"
      },
      {
        "type": {
          "names": [
            "Integer"
          ]
        },
        "description": "Number of octaves.",
        "name": "octaves"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Amplitude persistance between octaves.",
        "name": "persistance"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Frequency scale between octaves.",
        "name": "lacunarity"
      },
      {
        "type": {
          "names": [
            "Noise"
          ]
        },
        "description": "Name of noise class extending from Noise.",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Noise value."
      }
    ],
    "meta": {
      "lineno": 57,
      "filename": "Noise.js",
      "path": "/Users/schteppe/git/goojs/src/goo/noise"
    },
    "order": 1643
  },
  {
    "id": "<anonymous>~Noise.fractal2d",
    "longname": "<anonymous>~Noise.fractal2d",
    "name": "fractal2d",
    "scope": "static",
    "kind": "function",
    "description": "Evaluates a two-dimensional fractal noise function at a specific position.",
    "memberof": "<anonymous>~Noise",
    "params": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position x.",
        "name": "x"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position y.",
        "name": "y"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Base scale. Greater scale values will pull the sources (hills and valleys) further apart.",
        "name": "scale"
      },
      {
        "type": {
          "names": [
            "Integer"
          ]
        },
        "description": "Number of octaves.",
        "name": "octaves"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Amplitude persistance between octaves.",
        "name": "persistance"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Frequency scale between octaves.",
        "name": "lacunarity"
      },
      {
        "type": {
          "names": [
            "Noise"
          ]
        },
        "description": "Name of noise class extending from Noise.",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Noise value."
      }
    ],
    "meta": {
      "lineno": 83,
      "filename": "Noise.js",
      "path": "/Users/schteppe/git/goojs/src/goo/noise"
    },
    "order": 1644
  },
  {
    "id": "<anonymous>~Noise.fractal3d",
    "longname": "<anonymous>~Noise.fractal3d",
    "name": "fractal3d",
    "scope": "static",
    "kind": "function",
    "description": "Evaluates a three-dimensional fractal noise function at a specific position.",
    "memberof": "<anonymous>~Noise",
    "params": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position x.",
        "name": "x"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position y.",
        "name": "y"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position z.",
        "name": "z"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Base scale. Greater scale values will pull the sources (hills and valleys) further apart.",
        "name": "scale"
      },
      {
        "type": {
          "names": [
            "Integer"
          ]
        },
        "description": "Number of octaves.",
        "name": "octaves"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Amplitude persistance between octaves.",
        "name": "persistance"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Frequency scale between octaves.",
        "name": "lacunarity"
      },
      {
        "type": {
          "names": [
            "Noise"
          ]
        },
        "description": "Name of noise class extending from Noise.",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Noise value."
      }
    ],
    "meta": {
      "lineno": 111,
      "filename": "Noise.js",
      "path": "/Users/schteppe/git/goojs/src/goo/noise"
    },
    "order": 1645
  },
  {
    "id": "<anonymous>~Noise.fractal4d",
    "longname": "<anonymous>~Noise.fractal4d",
    "name": "fractal4d",
    "scope": "static",
    "kind": "function",
    "description": "Evaluates a four-dimensional fractal noise function at a specific position.",
    "memberof": "<anonymous>~Noise",
    "params": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position x.",
        "name": "x"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position y.",
        "name": "y"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position z.",
        "name": "z"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position w.",
        "name": "w"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Base scale. Greater scale values will pull the sources (hills and valleys) further apart.",
        "name": "scale"
      },
      {
        "type": {
          "names": [
            "Integer"
          ]
        },
        "description": "Number of octaves.",
        "name": "octaves"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Amplitude persistance between octaves.",
        "name": "persistance"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Frequency scale between octaves.",
        "name": "lacunarity"
      },
      {
        "type": {
          "names": [
            "Noise"
          ]
        },
        "description": "Name of noise class extending from Noise.",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Noise value."
      }
    ],
    "meta": {
      "lineno": 141,
      "filename": "Noise.js",
      "path": "/Users/schteppe/git/goojs/src/goo/noise"
    },
    "order": 1646
  },
  {
    "id": "<anonymous>~ValueNoise.evaluate1d",
    "longname": "<anonymous>~ValueNoise.evaluate1d",
    "name": "evaluate1d",
    "scope": "static",
    "kind": "function",
    "description": "Evaluates the one-dimensional value noise function at a specific position.",
    "memberof": "<anonymous>~ValueNoise",
    "params": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position x.",
        "name": "px"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Base scale. Greater scale values will pull the sources (hills and valleys) further apart.",
        "name": "scale"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Noise value."
      }
    ],
    "meta": {
      "lineno": 34,
      "filename": "ValueNoise.js",
      "path": "/Users/schteppe/git/goojs/src/goo/noise"
    },
    "order": 1648
  },
  {
    "id": "<anonymous>~ValueNoise.evaluate2d",
    "longname": "<anonymous>~ValueNoise.evaluate2d",
    "name": "evaluate2d",
    "scope": "static",
    "kind": "function",
    "description": "Evaluates the two-dimensional value noise function at a specific position.",
    "memberof": "<anonymous>~ValueNoise",
    "params": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position x.",
        "name": "px"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position y.",
        "name": "py"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Base scale. Greater scale values will pull the sources (hills and valleys) further apart.",
        "name": "scale"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Noise value."
      }
    ],
    "meta": {
      "lineno": 55,
      "filename": "ValueNoise.js",
      "path": "/Users/schteppe/git/goojs/src/goo/noise"
    },
    "order": 1649
  },
  {
    "id": "<anonymous>~ValueNoise.evaluate3d",
    "longname": "<anonymous>~ValueNoise.evaluate3d",
    "name": "evaluate3d",
    "scope": "static",
    "kind": "function",
    "description": "Evaluates the three-dimensional value noise function at a specific position.",
    "memberof": "<anonymous>~ValueNoise",
    "params": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position x.",
        "name": "px"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position y.",
        "name": "py"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position z.",
        "name": "pz"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Base scale. Greater scale values will pull the sources (hills and valleys) further apart.",
        "name": "scale"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Noise value."
      }
    ],
    "meta": {
      "lineno": 82,
      "filename": "ValueNoise.js",
      "path": "/Users/schteppe/git/goojs/src/goo/noise"
    },
    "order": 1650
  },
  {
    "id": "<anonymous>~ValueNoise.evaluate4d",
    "longname": "<anonymous>~ValueNoise.evaluate4d",
    "name": "evaluate4d",
    "scope": "static",
    "kind": "function",
    "description": "Evaluates the four-dimensional value noise function at a specific position.",
    "memberof": "<anonymous>~ValueNoise",
    "params": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position x.",
        "name": "px"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position y.",
        "name": "py"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position z.",
        "name": "pz"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Evaluation position w.",
        "name": "pw"
      },
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Base scale. Greater scale values will pull the sources (hills and valleys) further apart.",
        "name": "scale"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Float"
          ]
        },
        "description": "Noise value."
      }
    ],
    "meta": {
      "lineno": 119,
      "filename": "ValueNoise.js",
      "path": "/Users/schteppe/git/goojs/src/goo/noise"
    },
    "order": 1651
  },
  {
    "id": "<anonymous>~ParticleEmitter.CAMERA_BILLBOARD_FUNC",
    "longname": "<anonymous>~ParticleEmitter.CAMERA_BILLBOARD_FUNC",
    "name": "CAMERA_BILLBOARD_FUNC",
    "scope": "static",
    "kind": "function",
    "description": "Sets the billboard coordinates of the particle to face the camera",
    "memberof": "<anonymous>~ParticleEmitter",
    "params": [
      {
        "name": "particle"
      }
    ],
    "meta": {
      "lineno": 57,
      "filename": "ParticleEmitter.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1721
  },
  {
    "id": "<anonymous>~ParticleLib.getSmoke",
    "longname": "<anonymous>~ParticleLib.getSmoke",
    "name": "getSmoke",
    "scope": "static",
    "kind": "function",
    "description": "Returns a set of parameters for a smoke particle emitter",
    "memberof": "<anonymous>~ParticleLib",
    "meta": {
      "lineno": 14,
      "filename": "ParticleLib.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1729
  },
  {
    "id": "<anonymous>~ParticleLib.getFire",
    "longname": "<anonymous>~ParticleLib.getFire",
    "name": "getFire",
    "scope": "static",
    "kind": "function",
    "description": "Returns a set of parameters for a fire particle emitter",
    "memberof": "<anonymous>~ParticleLib",
    "meta": {
      "lineno": 53,
      "filename": "ParticleLib.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1730
  },
  {
    "id": "<anonymous>~ParticleLib.getSnow",
    "longname": "<anonymous>~ParticleLib.getSnow",
    "name": "getSnow",
    "scope": "static",
    "kind": "function",
    "description": "Returns a set of parameters for a snow particle emitter",
    "memberof": "<anonymous>~ParticleLib",
    "meta": {
      "lineno": 97,
      "filename": "ParticleLib.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1731
  },
  {
    "id": "<anonymous>~BufferUtils.createIndexBuffer",
    "longname": "<anonymous>~BufferUtils.createIndexBuffer",
    "name": "createIndexBuffer",
    "scope": "static",
    "kind": "function",
    "description": "Creates an index buffer of a type appropriate to store the supplied number of vertices",
    "memberof": "<anonymous>~BufferUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Number of indices",
        "name": "indexCount"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Number of vertices",
        "name": "vertexCount"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TypedArray"
          ]
        },
        "description": "Index buffer"
      }
    ],
    "meta": {
      "lineno": 20,
      "filename": "BufferUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1802
  },
  {
    "id": "<anonymous>~BufferUtils.cloneTypedArray",
    "longname": "<anonymous>~BufferUtils.cloneTypedArray",
    "name": "cloneTypedArray",
    "scope": "static",
    "kind": "function",
    "description": "Returns a clone of the supplied typed array",
    "memberof": "<anonymous>~BufferUtils",
    "params": [
      {
        "type": {
          "names": [
            "TypedArray"
          ]
        },
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TypedArray"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 55,
      "filename": "BufferUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1803
  },
  {
    "id": "<anonymous>~Capabilities.init",
    "longname": "<anonymous>~Capabilities.init",
    "name": "init",
    "scope": "static",
    "kind": "function",
    "description": "Initialize capabilities from rendering context.",
    "memberof": "<anonymous>~Capabilities",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderingContext"
          ]
        },
        "description": "WebGLRenderingContext",
        "name": "context"
      }
    ],
    "meta": {
      "lineno": 52,
      "filename": "Capabilities.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1844
  },
  {
    "id": "<anonymous>~Capabilities.getCapabilitiesString",
    "longname": "<anonymous>~Capabilities.getCapabilitiesString",
    "name": "getCapabilitiesString",
    "scope": "static",
    "kind": "function",
    "description": "Gets a string representation of the current capabilities",
    "memberof": "<anonymous>~Capabilities",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "string representation of capabilities"
      }
    ],
    "meta": {
      "lineno": 130,
      "filename": "Capabilities.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1845
  },
  {
    "id": "<anonymous>~Material.createShader",
    "longname": "<anonymous>~Material.createShader",
    "name": "createShader",
    "scope": "static",
    "kind": "function",
    "description": "Creates a new or finds an existing, cached Shader object",
    "memberof": "<anonymous>~Material",
    "params": [
      {
        "type": {
          "names": [
            "ShaderDefinition"
          ]
        },
        "description": "see {@link Shader}",
        "name": "shaderDefinition"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "DefaultShader",
        "name": "name"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Shader"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 301,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1891
  },
  {
    "id": "<anonymous>~Material.clearShaderCache",
    "longname": "<anonymous>~Material.clearShaderCache",
    "name": "clearShaderCache",
    "scope": "static",
    "kind": "function",
    "description": "Clears the shader cache.",
    "memberof": "<anonymous>~Material",
    "deprecated": "Deprecated since 0.12.0 and scheduled for removal in 0.14.0",
    "meta": {
      "lineno": 314,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1892
  },
  {
    "id": "<anonymous>~MeshData.createAttribute",
    "longname": "<anonymous>~MeshData.createAttribute",
    "name": "createAttribute",
    "scope": "static",
    "kind": "function",
    "description": "Creates a definition for a vertex attribute",
    "memberof": "<anonymous>~MeshData",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Tuple size of attribute",
        "name": "count"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Data type",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If data should be normalized (true) or converted direction (false)",
        "name": "normalized"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Attribute definition"
      }
    ],
    "meta": {
      "lineno": 928,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1922
  },
  {
    "id": "<anonymous>~MeshData.defaultMap",
    "longname": "<anonymous>~MeshData.defaultMap",
    "name": "defaultMap",
    "scope": "static",
    "kind": "function",
    "description": "Creates an attribute given the types",
    "memberof": "<anonymous>~MeshData",
    "params": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "optional": true,
        "description": "An array of default types. If not provided you get an attributeMap with all default attributes",
        "name": "types"
      }
    ],
    "examples": [
      "var map = MeshData.defaultMap([MeshData.POSITION, MeshData.TEXCOORD0]);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 970,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1923
  },
  {
    "id": "<anonymous>~RendererUtils.getByteSize",
    "longname": "<anonymous>~RendererUtils.getByteSize",
    "name": "getByteSize",
    "scope": "static",
    "kind": "function",
    "description": "Get size in bytes of a specific type.",
    "memberof": "<anonymous>~RendererUtils",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type to retrieve bytesize for",
        "name": "type"
      }
    ],
    "meta": {
      "lineno": 24,
      "filename": "RendererUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2012
  },
  {
    "id": "<anonymous>~RendererUtils.checkGLError",
    "longname": "<anonymous>~RendererUtils.checkGLError",
    "name": "checkGLError",
    "scope": "static",
    "kind": "function",
    "description": "Check if the webgl context contains any errors in the current state",
    "memberof": "<anonymous>~RendererUtils",
    "params": [
      {
        "type": {
          "names": [
            "WebGLRenderingContext"
          ]
        },
        "description": "A valid WebGL context",
        "name": "gl"
      }
    ],
    "meta": {
      "lineno": 57,
      "filename": "RendererUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2013
  },
  {
    "id": "<anonymous>~Shader.investigateShader",
    "longname": "<anonymous>~Shader.investigateShader",
    "name": "investigateShader",
    "scope": "static",
    "kind": "function",
    "description": "Extract shader variable definitions from shader source code.",
    "memberof": "<anonymous>~Shader",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The source code.",
        "name": "source"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "target"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "target.attributeMapping"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "target.uniformMapping"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "name": "target.textureSlots"
      }
    ],
    "meta": {
      "lineno": 433,
      "filename": "Shader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2038
  },
  {
    "id": "<anonymous>~ScriptHandler.validateParameter",
    "longname": "<anonymous>~ScriptHandler.validateParameter",
    "name": "validateParameter",
    "scope": "static",
    "kind": "function",
    "description": "Validates every property of a parameter defined by a user script.\nExposed as a static method only for testing purposes.",
    "memberof": "<anonymous>~ScriptHandler",
    "params": [
      {
        "name": "parameter"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object",
            "undefined"
          ]
        },
        "description": "May return an error"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 659,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2128
  },
  {
    "id": "<anonymous>~ScriptHandler.validateParameters",
    "longname": "<anonymous>~ScriptHandler.validateParameters",
    "name": "validateParameters",
    "scope": "static",
    "kind": "function",
    "description": "Validates every parameter defined in the `externalParameters` collection by a user script.\nExposed as a static method only for testing purposes.",
    "memberof": "<anonymous>~ScriptHandler",
    "params": [
      {
        "name": "script"
      },
      {
        "name": "outScript"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 696,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2129
  },
  {
    "id": "<anonymous>~ScriptUtils.fillDefaultValues",
    "longname": "<anonymous>~ScriptUtils.fillDefaultValues",
    "name": "fillDefaultValues",
    "scope": "static",
    "kind": "function",
    "description": "Fill a passed parameters object with defaults from spec",
    "memberof": "<anonymous>~ScriptUtils",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "The type of object passed as parameters to a script",
        "name": "parameters"
      },
      {
        "type": {
          "names": [
            "Array.<{key, name, default, description}>"
          ]
        },
        "name": "specs"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 89,
      "filename": "ScriptUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scripts"
    },
    "order": 2142
  },
  {
    "id": "<anonymous>~ScriptUtils.fillDefaultNames",
    "longname": "<anonymous>~ScriptUtils.fillDefaultNames",
    "name": "fillDefaultNames",
    "scope": "static",
    "kind": "function",
    "description": "Fills specs' names with their prettyprinted keys (x -> x, maxX -> Max X, myBluePanda -> My Blue Panda)",
    "memberof": "<anonymous>~ScriptUtils",
    "params": [
      {
        "type": {
          "names": [
            "Array.<{key, name, default, description}>"
          ]
        },
        "name": "specs"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 121,
      "filename": "ScriptUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scripts"
    },
    "order": 2143
  },
  {
    "id": "<anonymous>~ArrayUtils.getTypedArray",
    "longname": "<anonymous>~ArrayUtils.getTypedArray",
    "name": "getTypedArray",
    "scope": "static",
    "kind": "function",
    "description": "Create a typed array view on an ArrayBuffer, using the supplied pointer. Notice that this\ndoes not copy any elements, if you make changes to the returned array, the original\nArrayBuffer will be modified.",
    "memberof": "<anonymous>~ArrayUtils",
    "params": [
      {
        "type": {
          "names": [
            "ArrayBuffer"
          ]
        },
        "name": "arrayBuffer"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "Array [start, length, format] where start is the start byte offset\nin the buffer, length is the number of values of the given format, and format is a string\ndenoting the data format:\n'float32' creates a Float32Array\n'uint32'\n'uint16'\n'uint8'",
        "name": "pointer"
      }
    ],
    "returns": [
      {
        "description": "Typed array"
      }
    ],
    "meta": {
      "lineno": 26,
      "filename": "ArrayUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2250
  },
  {
    "id": "<anonymous>~ArrayUtils.find",
    "longname": "<anonymous>~ArrayUtils.find",
    "name": "find",
    "scope": "static",
    "kind": "function",
    "description": "Returns the first element in the supplied array for which the supplied predicate is true",
    "memberof": "<anonymous>~ArrayUtils",
    "params": [
      {
        "name": "array"
      },
      {
        "name": "predicate"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 72,
      "filename": "ArrayUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2251
  },
  {
    "id": "<anonymous>~ArrayUtils.fromKeys",
    "longname": "<anonymous>~ArrayUtils.fromKeys",
    "name": "fromKeys",
    "scope": "static",
    "kind": "function",
    "description": "Returns an array of keys for the given Set or Map",
    "memberof": "<anonymous>~ArrayUtils",
    "params": [
      {
        "type": {
          "names": [
            "Set",
            "Map"
          ]
        },
        "name": "collection"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 86,
      "filename": "ArrayUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2252
  },
  {
    "id": "<anonymous>~ArrayUtils.fromValues",
    "longname": "<anonymous>~ArrayUtils.fromValues",
    "name": "fromValues",
    "scope": "static",
    "kind": "function",
    "description": "Returns an array of values for the given Set or Map",
    "memberof": "<anonymous>~ArrayUtils",
    "params": [
      {
        "type": {
          "names": [
            "Set",
            "Map"
          ]
        },
        "name": "collection"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 106,
      "filename": "ArrayUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2253
  },
  {
    "id": "<anonymous>~CanvasUtils.loadCanvasFromPath",
    "longname": "<anonymous>~CanvasUtils.loadCanvasFromPath",
    "name": "loadCanvasFromPath",
    "scope": "static",
    "kind": "function",
    "description": "Loads an image element from a given URL and returns the image rendered on a canvas within a callback.",
    "memberof": "<anonymous>~CanvasUtils",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The URL to the image to render to the canvas.",
        "name": "canvasPath"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Resulting width of the canvas, falls back to image width.",
        "name": "options.width"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Resulting height of the canvas, falls back to image height.",
        "name": "options.height"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Where to start clipping in x",
        "name": "options.sourceX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Where to start clipping in y",
        "name": "options.sourceY"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The width of the clipped image",
        "name": "options.sourceWidth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The height of the clipped image",
        "name": "options.sourceHeight"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Destination frame offset in x",
        "name": "options.destX"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Destination frame offset in y",
        "name": "options.destY"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Destination frame width",
        "name": "options.destWidth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Destination frame height",
        "name": "options.destHeight"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If true, the image is stretched to fit and centered on the canvas.",
        "name": "options.resizeToFit"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "meta": {
      "lineno": 37,
      "filename": "CanvasUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2256
  },
  {
    "id": "<anonymous>~CanvasUtils.renderSvgToCanvas",
    "longname": "<anonymous>~CanvasUtils.renderSvgToCanvas",
    "name": "renderSvgToCanvas",
    "scope": "static",
    "kind": "function",
    "description": "Renders an SVG to a canvas element.",
    "memberof": "<anonymous>~CanvasUtils",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The SVG XML source code",
        "name": "svgSource"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Will be passed to loadCanvasFromPath.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Will be called when done. The single argument to this function will be the HTMLCanvasElement, or null if an error occurred.",
        "name": "callback"
      }
    ],
    "examples": [
      "var data = '&lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=100 height=100&gt;&lt;rect x=0 y=0 width=100 height=100 fill=\"blue\" /&gt;&lt;/svg&gt;';\nCanvasUtils.renderSvgToCanvas(data, {\n    resizeToFit:true,\n    width:100,\n    height:100\n}, function (canvas){\n    // canvas is an HTMLCanvasElement\n});"
    ],
    "meta": {
      "lineno": 133,
      "filename": "CanvasUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2257
  },
  {
    "id": "<anonymous>~CanvasUtils.getMatrixFromCanvas",
    "longname": "<anonymous>~CanvasUtils.getMatrixFromCanvas",
    "name": "getMatrixFromCanvas",
    "scope": "static",
    "kind": "function",
    "description": "Takes a canvas element and returns it's image data as a matrix.\nUseful for things such as heightmap displacement from image source.",
    "memberof": "<anonymous>~CanvasUtils",
    "params": [
      {
        "name": "canvas"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 146,
      "filename": "CanvasUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2258
  },
  {
    "id": "<anonymous>~CanvasUtils.svgDataToImage",
    "longname": "<anonymous>~CanvasUtils.svgDataToImage",
    "name": "svgDataToImage",
    "scope": "static",
    "kind": "function",
    "description": "Convert SVG XML content to an HTMLImageElement.",
    "memberof": "<anonymous>~CanvasUtils",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "data"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "Promise that resolves with the Image."
      }
    ],
    "meta": {
      "lineno": 173,
      "filename": "CanvasUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2259
  },
  {
    "id": "<anonymous>~GameUtils.requestFullScreen",
    "longname": "<anonymous>~GameUtils.requestFullScreen",
    "name": "requestFullScreen",
    "scope": "static",
    "kind": "function",
    "description": "Attempts to request fullscreen.",
    "memberof": "<anonymous>~GameUtils",
    "meta": {
      "lineno": 26,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2274
  },
  {
    "id": "<anonymous>~GameUtils.exitFullScreen",
    "longname": "<anonymous>~GameUtils.exitFullScreen",
    "name": "exitFullScreen",
    "scope": "static",
    "kind": "function",
    "description": "Attempts to exit fullscreen.",
    "memberof": "<anonymous>~GameUtils",
    "meta": {
      "lineno": 35,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2275
  },
  {
    "id": "<anonymous>~GameUtils.toggleFullScreen",
    "longname": "<anonymous>~GameUtils.toggleFullScreen",
    "name": "toggleFullScreen",
    "scope": "static",
    "kind": "function",
    "description": "Attempts to toggle fullscreen.",
    "memberof": "<anonymous>~GameUtils",
    "meta": {
      "lineno": 44,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2276
  },
  {
    "id": "<anonymous>~GameUtils.requestPointerLock",
    "longname": "<anonymous>~GameUtils.requestPointerLock",
    "name": "requestPointerLock",
    "scope": "static",
    "kind": "function",
    "description": "Attempts to lock the mouse pointer in the window.",
    "memberof": "<anonymous>~GameUtils",
    "meta": {
      "lineno": 59,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2277
  },
  {
    "id": "<anonymous>~GameUtils.exitPointerLock",
    "longname": "<anonymous>~GameUtils.exitPointerLock",
    "name": "exitPointerLock",
    "scope": "static",
    "kind": "function",
    "description": "Attempts to unlock the mouse pointer in the window.",
    "memberof": "<anonymous>~GameUtils",
    "meta": {
      "lineno": 69,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2278
  },
  {
    "id": "<anonymous>~GameUtils.togglePointerLock",
    "longname": "<anonymous>~GameUtils.togglePointerLock",
    "name": "togglePointerLock",
    "scope": "static",
    "kind": "function",
    "description": "Attempts to toggle the lock on the mouse pointer in the window.",
    "memberof": "<anonymous>~GameUtils",
    "meta": {
      "lineno": 78,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2279
  },
  {
    "id": "<anonymous>~GameUtils.addVisibilityChangeListener",
    "longname": "<anonymous>~GameUtils.addVisibilityChangeListener",
    "name": "addVisibilityChangeListener",
    "scope": "static",
    "kind": "function",
    "description": "Add a visibilitychange listener.",
    "memberof": "<anonymous>~GameUtils",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "function called with a boolean (true=hidden, false=visible)",
        "name": "callback"
      }
    ],
    "meta": {
      "lineno": 92,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2280
  },
  {
    "id": "<anonymous>~GameUtils.initAllShims",
    "longname": "<anonymous>~GameUtils.initAllShims",
    "name": "initAllShims",
    "scope": "static",
    "kind": "function",
    "description": "Attempts to initialize all shims (animation, fullscreen, pointer lock).",
    "memberof": "<anonymous>~GameUtils",
    "params": [
      {
        "type": {
          "names": [
            "Element"
          ]
        },
        "optional": true,
        "defaultvalue": "window",
        "description": "The global element (for compatibility checks and patching)",
        "name": "global"
      }
    ],
    "meta": {
      "lineno": 139,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2281
  },
  {
    "id": "<anonymous>~GameUtils.initWebGLShims",
    "longname": "<anonymous>~GameUtils.initWebGLShims",
    "name": "initWebGLShims",
    "scope": "static",
    "kind": "function",
    "description": "Handle missing WebGL features like IE 11 Uint8ClampedArray",
    "memberof": "<anonymous>~GameUtils",
    "meta": {
      "lineno": 149,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2282
  },
  {
    "id": "<anonymous>~GameUtils.initAnimationShims",
    "longname": "<anonymous>~GameUtils.initAnimationShims",
    "name": "initAnimationShims",
    "scope": "static",
    "kind": "function",
    "description": "Attempts to initialize the animation shim, ie. defines requestAnimationFrame and cancelAnimationFrame",
    "memberof": "<anonymous>~GameUtils",
    "meta": {
      "lineno": 156,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2283
  },
  {
    "id": "<anonymous>~GameUtils.initFullscreenShims",
    "longname": "<anonymous>~GameUtils.initFullscreenShims",
    "name": "initFullscreenShims",
    "scope": "static",
    "kind": "function",
    "description": "Attempts to initialize the fullscreen shim, ie. defines requestFullscreen and cancelFullscreen",
    "memberof": "<anonymous>~GameUtils",
    "params": [
      {
        "type": {
          "names": [
            "Element"
          ]
        },
        "optional": true,
        "defaultvalue": "window",
        "description": "The global element (for compatibility checks and patching)",
        "name": "global"
      }
    ],
    "meta": {
      "lineno": 187,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2284
  },
  {
    "id": "<anonymous>~GameUtils.initPointerLockShims",
    "longname": "<anonymous>~GameUtils.initPointerLockShims",
    "name": "initPointerLockShims",
    "scope": "static",
    "kind": "function",
    "description": "Attempts to initialize the pointer lock shim, ie. define requestPointerLock and exitPointerLock",
    "memberof": "<anonymous>~GameUtils",
    "params": [
      {
        "type": {
          "names": [
            "Element"
          ]
        },
        "optional": true,
        "defaultvalue": "window",
        "description": "The global element (for compatibility checks and patching)",
        "name": "global"
      }
    ],
    "meta": {
      "lineno": 294,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2285
  },
  {
    "id": "<anonymous>~Logo.getLogo",
    "longname": "<anonymous>~Logo.getLogo",
    "name": "getLogo",
    "scope": "static",
    "kind": "function",
    "description": "Get svg as string to add to html DOM",
    "memberof": "<anonymous>~Logo",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "properties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "Logo.blue",
        "name": "properties.color"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "properties.shadow"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "properties.width"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "properties.height"
      }
    ],
    "meta": {
      "lineno": 30,
      "filename": "Logo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2301
  },
  {
    "id": "<anonymous>~ObjectUtils.contains",
    "longname": "<anonymous>~ObjectUtils.contains",
    "name": "contains",
    "scope": "static",
    "kind": "function",
    "description": "Gets whether the specified array contains the specified value.",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "The array which is to be checked.",
        "name": "array"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "The value which is to be found.",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if the value exists in the array and false otherwise."
      }
    ],
    "meta": {
      "lineno": 20,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2308
  },
  {
    "id": "<anonymous>~ObjectUtils.defaults",
    "longname": "<anonymous>~ObjectUtils.defaults",
    "name": "defaults",
    "scope": "static",
    "kind": "function",
    "description": "Copies properties from an object onto another object if they're not already present",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Destination object to copy to",
        "name": "destination"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Source object to copy from",
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Returns the destination object"
      }
    ],
    "meta": {
      "lineno": 30,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2309
  },
  {
    "id": "<anonymous>~ObjectUtils.copyOptions",
    "longname": "<anonymous>~ObjectUtils.copyOptions",
    "name": "copyOptions",
    "scope": "static",
    "kind": "function",
    "description": "Merges an options object and a defaults object into another object",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "description": "Object to attach properties to",
        "name": "destination"
      },
      {
        "description": "A list of options; options must eb a subset of defaults",
        "name": "options"
      },
      {
        "description": "Defaults for options; if an option if not present this value is used instead",
        "name": "defaults"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Returns the destination object"
      }
    ],
    "meta": {
      "lineno": 49,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2310
  },
  {
    "id": "<anonymous>~ObjectUtils.extend",
    "longname": "<anonymous>~ObjectUtils.extend",
    "name": "extend",
    "scope": "static",
    "kind": "function",
    "description": "Copies properties from an object onto another object; overwrites existing properties",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Destination object to copy to",
        "name": "destination"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Source object to copy from",
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Returns the destination object"
      }
    ],
    "meta": {
      "lineno": 73,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2311
  },
  {
    "id": "<anonymous>~ObjectUtils.map",
    "longname": "<anonymous>~ObjectUtils.map",
    "name": "map",
    "scope": "static",
    "kind": "function",
    "description": "Creates an array of values by running each element in collection through\niteratee. The iteratee is bound to context and invoked with three\narguments: (value, index|key, collection).",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "Array",
            "Object",
            "string"
          ]
        },
        "name": "collection"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "iteratee"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "name": "context"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "sortProp"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 130,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2312
  },
  {
    "id": "<anonymous>~ObjectUtils.deepClone",
    "longname": "<anonymous>~ObjectUtils.deepClone",
    "name": "deepClone",
    "scope": "static",
    "kind": "function",
    "description": "Performs a deep clone. Can handle primitive types, arrays, generic\nobjects, typed arrays and html nodes. Functions are shared. Does not\nhandle circular references - also does not preserve original\nconstructors/prototypes.",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Object to clone",
        "name": "object"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 149,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2313
  },
  {
    "id": "<anonymous>~ObjectUtils.constant",
    "longname": "<anonymous>~ObjectUtils.constant",
    "name": "constant",
    "scope": "static",
    "kind": "function",
    "description": "Creates a function which returns the provided value.",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Value which is to be returned by the created function.",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 228,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2314
  },
  {
    "id": "<anonymous>~ObjectUtils.property",
    "longname": "<anonymous>~ObjectUtils.property",
    "name": "property",
    "scope": "static",
    "kind": "function",
    "description": "Creates a function which returns the specified property of any object\npassed to it.",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of the property whose value is to be returned by the created\n       function",
        "name": "propName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 242,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2315
  },
  {
    "id": "<anonymous>~ObjectUtils.isObject",
    "longname": "<anonymous>~ObjectUtils.isObject",
    "name": "isObject",
    "scope": "static",
    "kind": "function",
    "description": "Gets whether the specified value is an object.",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Value which is to be tested.",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if the value is an object and false otherwise."
      }
    ],
    "meta": {
      "lineno": 255,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2316
  },
  {
    "id": "<anonymous>~ObjectUtils.isString",
    "longname": "<anonymous>~ObjectUtils.isString",
    "name": "isString",
    "scope": "static",
    "kind": "function",
    "description": "Gets whether the specified value is a string.",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Value which is to be tested.",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if the value is a string and false otherwise."
      }
    ],
    "meta": {
      "lineno": 268,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2317
  },
  {
    "id": "<anonymous>~ObjectUtils.isBoolean",
    "longname": "<anonymous>~ObjectUtils.isBoolean",
    "name": "isBoolean",
    "scope": "static",
    "kind": "function",
    "description": "Gets whether the specified value is an boolean value.",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Value which is to be tested.",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if the value is a boolean and false otherwise."
      }
    ],
    "meta": {
      "lineno": 281,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2318
  },
  {
    "id": "<anonymous>~ObjectUtils.isNumber",
    "longname": "<anonymous>~ObjectUtils.isNumber",
    "name": "isNumber",
    "scope": "static",
    "kind": "function",
    "description": "Gets whether the specified value is a number.",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Value which is to be tested.",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if the value is a number and false otherwise."
      }
    ],
    "meta": {
      "lineno": 294,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2319
  },
  {
    "id": "<anonymous>~ObjectUtils.isInteger",
    "longname": "<anonymous>~ObjectUtils.isInteger",
    "name": "isInteger",
    "scope": "static",
    "kind": "function",
    "description": "Gets whether the specified value is an integer number.",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Value which is to be tested.",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "True if the value is an integer number and false otherwise."
      }
    ],
    "meta": {
      "lineno": 307,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2320
  },
  {
    "id": "<anonymous>~ObjectUtils.getExtension",
    "longname": "<anonymous>~ObjectUtils.getExtension",
    "name": "getExtension",
    "scope": "static",
    "kind": "function",
    "description": "Gets the extension of the specified string. The extension is anything\nafter the last '.'",
    "memberof": "<anonymous>~ObjectUtils",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Value whose extension is to be returned.",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 320,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2321
  },
  {
    "id": "<anonymous>~ParticleSystemUtils.createParticleSystemEntity",
    "longname": "<anonymous>~ParticleSystemUtils.createParticleSystemEntity",
    "name": "createParticleSystemEntity",
    "scope": "static",
    "kind": "function",
    "description": "Creates an Entity based on an object holding particle emitter parameters and a material",
    "memberof": "<anonymous>~ParticleSystemUtils",
    "params": [
      {
        "name": "world"
      },
      {
        "name": "particleParameters"
      },
      {
        "name": "material"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Entity"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      },
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/misc/ParticleLib/ParticleLib-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 31,
      "filename": "ParticleSystemUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2323
  },
  {
    "id": "<anonymous>~ParticleSystemUtils.createFlareTexture",
    "longname": "<anonymous>~ParticleSystemUtils.createFlareTexture",
    "name": "createFlareTexture",
    "scope": "static",
    "kind": "function",
    "description": "Generates a radial gradient with multiple color stops; useful for water simple fire, snowflakes, water ripples and shockwaves",
    "memberof": "<anonymous>~ParticleSystemUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 64,
        "name": "size"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Texture"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 62,
      "filename": "ParticleSystemUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2324
  },
  {
    "id": "<anonymous>~ParticleSystemUtils.createSplashTexture",
    "longname": "<anonymous>~ParticleSystemUtils.createSplashTexture",
    "name": "createSplashTexture",
    "scope": "static",
    "kind": "function",
    "description": "Generates a texture of multiple trailing particles; useful for water splashes and sparks",
    "memberof": "<anonymous>~ParticleSystemUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 64,
        "name": "size"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Texture"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 101,
      "filename": "ParticleSystemUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2325
  },
  {
    "id": "<anonymous>~ParticleSystemUtils.createPlanktonTexture",
    "longname": "<anonymous>~ParticleSystemUtils.createPlanktonTexture",
    "name": "createPlanktonTexture",
    "scope": "static",
    "kind": "function",
    "description": "Generates a texture of random fuzzy dots; useful for dust and plankton",
    "memberof": "<anonymous>~ParticleSystemUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 64,
        "name": "size"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Texture"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 166,
      "filename": "ParticleSystemUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2326
  },
  {
    "id": "<anonymous>~ParticleSystemUtils.createSnowflakeTexture",
    "longname": "<anonymous>~ParticleSystemUtils.createSnowflakeTexture",
    "name": "createSnowflakeTexture",
    "scope": "static",
    "kind": "function",
    "description": "Generates a texture of complex hexagonal snowflakes",
    "memberof": "<anonymous>~ParticleSystemUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 64,
        "name": "size"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Texture"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 212,
      "filename": "ParticleSystemUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2327
  },
  {
    "id": "<anonymous>~PromiseUtils.createPromise",
    "longname": "<anonymous>~PromiseUtils.createPromise",
    "name": "createPromise",
    "scope": "static",
    "kind": "function",
    "description": "Same as ES6 `new Promise`",
    "memberof": "<anonymous>~PromiseUtils",
    "params": [
      {
        "name": "fun"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 20,
      "filename": "PromiseUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2329
  },
  {
    "id": "<anonymous>~PromiseUtils.resolve",
    "longname": "<anonymous>~PromiseUtils.resolve",
    "name": "resolve",
    "scope": "static",
    "kind": "function",
    "description": "Creates a promise that resolves with the given argument.",
    "memberof": "<anonymous>~PromiseUtils",
    "params": [
      {
        "name": "value"
      }
    ],
    "meta": {
      "lineno": 37,
      "filename": "PromiseUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2330
  },
  {
    "id": "<anonymous>~PromiseUtils.reject",
    "longname": "<anonymous>~PromiseUtils.reject",
    "name": "reject",
    "scope": "static",
    "kind": "function",
    "description": "Creates a promise that resolves with the given argument.",
    "memberof": "<anonymous>~PromiseUtils",
    "params": [
      {
        "name": "reason"
      }
    ],
    "meta": {
      "lineno": 48,
      "filename": "PromiseUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2331
  },
  {
    "id": "<anonymous>~PromiseUtils.createDummyPromise",
    "longname": "<anonymous>~PromiseUtils.createDummyPromise",
    "name": "createDummyPromise",
    "scope": "static",
    "kind": "function",
    "description": "Create a promise that resolves or rejects immediately with the given argument.",
    "memberof": "<anonymous>~PromiseUtils",
    "params": [
      {
        "type": {
          "names": [
            "any"
          ]
        },
        "name": "arg"
      },
      {
        "type": {
          "names": [
            "any"
          ]
        },
        "name": "error"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        }
      }
    ],
    "deprecated": "Use PromiseUtils.resolve/reject instead.",
    "meta": {
      "lineno": 63,
      "filename": "PromiseUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2332
  },
  {
    "id": "<anonymous>~PromiseUtils.optimisticAll",
    "longname": "<anonymous>~PromiseUtils.optimisticAll",
    "name": "optimisticAll",
    "scope": "static",
    "kind": "function",
    "description": "Returns a promise that resolves when all given promises are resolved or rejected.\nLike RSVP.all(), except that instead of rejecting, this promise always resolves.",
    "memberof": "<anonymous>~PromiseUtils",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "name": "promises"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        },
        "description": "that resolves with the results of the promises. If a\npromise fails, the result of that promise will be the error. But the returned\npromise will always resolve with an array of objects."
      }
    ],
    "meta": {
      "lineno": 88,
      "filename": "PromiseUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2333
  },
  {
    "id": "<anonymous>~PromiseUtils.delay",
    "longname": "<anonymous>~PromiseUtils.delay",
    "name": "delay",
    "scope": "static",
    "kind": "function",
    "description": "Creates a promise that is resolved within a given amount of time",
    "memberof": "<anonymous>~PromiseUtils",
    "params": [
      {
        "name": "value"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "time"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 126,
      "filename": "PromiseUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2334
  },
  {
    "id": "<anonymous>~PromiseUtils.defer",
    "longname": "<anonymous>~PromiseUtils.defer",
    "name": "defer",
    "scope": "static",
    "kind": "function",
    "description": "Create a promise that resolves or rejects after the specified delay with the given argument.",
    "memberof": "<anonymous>~PromiseUtils",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "in ms",
        "name": "delay"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "RSVP.Promise"
          ]
        }
      }
    ],
    "deprecated": "Deprecated as of v0.14.x and scheduled for removal in v0.16.0; consider using\nPromiseUtils.delay instead",
    "meta": {
      "lineno": 142,
      "filename": "PromiseUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2335
  },
  {
    "id": "<anonymous>~StringUtils.getUntil",
    "longname": "<anonymous>~StringUtils.getUntil",
    "name": "getUntil",
    "scope": "static",
    "kind": "function",
    "description": "Returns the string from the beginning of the string until the specified stop string. The stop string\nis not included in the returned string.\n\nIf the specified stop string is not found, the whole string is returned.",
    "memberof": "<anonymous>~StringUtils",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "string"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "stopString"
      }
    ],
    "meta": {
      "lineno": 54,
      "filename": "StringUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2347
  },
  {
    "id": "<anonymous>~StringUtils.getAfterLast",
    "longname": "<anonymous>~StringUtils.getAfterLast",
    "name": "getAfterLast",
    "scope": "static",
    "kind": "function",
    "description": "Returns the string from the last occurence of the stop string until the end. The stop string is not included in the result.",
    "memberof": "<anonymous>~StringUtils",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "string"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "stopString"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 69,
      "filename": "StringUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2348
  },
  {
    "id": "<anonymous>~StringUtils.getFrom",
    "longname": "<anonymous>~StringUtils.getFrom",
    "name": "getFrom",
    "scope": "static",
    "kind": "function",
    "description": "Returns the string from the index of the start string until the end of the string. The start character is\nnot included in the returned string.\n\nIf the specified start string is not found in the string, an empty string is returned.",
    "memberof": "<anonymous>~StringUtils",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "string"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "startString"
      }
    ],
    "meta": {
      "lineno": 87,
      "filename": "StringUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2349
  },
  {
    "id": "<anonymous>~StringUtils.hashCode",
    "longname": "<anonymous>~StringUtils.hashCode",
    "name": "hashCode",
    "scope": "static",
    "kind": "function",
    "description": "Js implementation of Java's hashcode (sort of). Somewhat useful for creating\n\tunique ideas that contain [A-Za-z0-9-_]",
    "memberof": "<anonymous>~StringUtils",
    "meta": {
      "lineno": 142,
      "filename": "StringUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2350
  },
  {
    "id": "<anonymous>~StringUtils.escapeHtmlEntities",
    "longname": "<anonymous>~StringUtils.escapeHtmlEntities",
    "name": "escapeHtmlEntities",
    "scope": "static",
    "kind": "function",
    "description": "Escapes all HTML entities from a given string.",
    "memberof": "<anonymous>~StringUtils",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The string whose HTML entities are to be encoded.",
        "name": "text"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The specified string with all its HTML entities encoded."
      }
    ],
    "meta": {
      "lineno": 174,
      "filename": "StringUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2351
  },
  {
    "id": "<anonymous>~TangentGenerator.addTangentBuffer",
    "longname": "<anonymous>~TangentGenerator.addTangentBuffer",
    "name": "addTangentBuffer",
    "scope": "static",
    "kind": "function",
    "description": "Generates and adds a buffer with tangent information to a MeshData object",
    "memberof": "<anonymous>~TangentGenerator",
    "params": [
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "description": "MeshData object to use for generating tangent coords",
        "name": "meshData"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "Texture coord index to use as base for tangent generation",
        "name": "uvUnit"
      }
    ],
    "meta": {
      "lineno": 23,
      "filename": "TangentGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2354
  },
  {
    "id": "<anonymous>~AmmoComponent",
    "longname": "<anonymous>~AmmoComponent",
    "name": "AmmoComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "memberof": "<anonymous>",
    "deprecated": "Deprecated as of v0.11.x and scheduled for removal in v0.13.0; consider using the Cannon system/component instead.",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Ammo/Ammo-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 48,
      "filename": "AmmoComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/ammopack"
    },
    "order": 0
  },
  {
    "id": "<anonymous>~AmmoSystem",
    "longname": "<anonymous>~AmmoSystem",
    "name": "AmmoSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "deprecated": "Deprecated as of v0.11.x and scheduled for removal in v0.13.0; consider using the Cannon system/component instead.",
    "meta": {
      "lineno": 22,
      "filename": "AmmoSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/ammopack"
    },
    "order": 2
  },
  {
    "id": "<anonymous>~Box2DComponent",
    "longname": "<anonymous>~Box2DComponent",
    "name": "Box2DComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/components/Box2DComponent/Box2DComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 16,
      "filename": "Box2DComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/box2dpack/components"
    },
    "order": 4
  },
  {
    "id": "<anonymous>~Box2DSystem",
    "longname": "<anonymous>~Box2DSystem",
    "name": "Box2DSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/components/Box2DComponent/Box2DComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 15,
      "filename": "Box2DSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/box2dpack/systems"
    },
    "order": 6
  },
  {
    "id": "<anonymous>~CannonBoxColliderComponent",
    "longname": "<anonymous>~CannonBoxColliderComponent",
    "name": "CannonBoxColliderComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Physics box collider for Cannon.js. To be attached to an entity with a {@link CannonRigidbodyComponent}. Also see the {@link CannonSystem}.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Cannon/Cannon-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 22,
      "filename": "CannonBoxColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 8
  },
  {
    "id": "<anonymous>~CannonCylinderColliderComponent",
    "longname": "<anonymous>~CannonCylinderColliderComponent",
    "name": "CannonCylinderColliderComponent",
    "scope": "inner",
    "kind": "class",
    "description": "Sphere collider for the {@link CannonSystem}.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Cannon/Cannon-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 20,
      "filename": "CannonCylinderColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 10
  },
  {
    "id": "<anonymous>~CannonDistanceJointComponent",
    "longname": "<anonymous>~CannonDistanceJointComponent",
    "name": "CannonDistanceJointComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Distance joint. Add to an entity with a {@link CannonRigidbodyComponent} and physically link it to another entity!<br>",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Cannon/Cannon-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 21,
      "filename": "CannonDistanceJointComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 12
  },
  {
    "id": "<anonymous>~CannonPlaneColliderComponent",
    "longname": "<anonymous>~CannonPlaneColliderComponent",
    "name": "CannonPlaneColliderComponent",
    "scope": "inner",
    "kind": "class",
    "description": "Plane collider. Attach to an entity with a {@link CannonRigidbodyComponent}.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Cannon/Cannon-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 16,
      "filename": "CannonPlaneColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 14
  },
  {
    "id": "<anonymous>~CannonRigidbodyComponent",
    "longname": "<anonymous>~CannonRigidbodyComponent",
    "name": "CannonRigidbodyComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Adds Cannon physics to an entity. Should be combined with one of the CannonCollider components, such as the {@link CannonSphereColliderComponent}. Also see {@link CannonSystem}.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Cannon/Cannon-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 43,
      "filename": "CannonRigidbodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 16
  },
  {
    "id": "<anonymous>~CannonSphereColliderComponent",
    "longname": "<anonymous>~CannonSphereColliderComponent",
    "name": "CannonSphereColliderComponent",
    "scope": "inner",
    "kind": "class",
    "description": "Sphere collider for the {@link CannonSystem}.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Cannon/Cannon-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 17,
      "filename": "CannonSphereColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 23
  },
  {
    "id": "<anonymous>~CannonSystem",
    "longname": "<anonymous>~CannonSystem",
    "name": "CannonSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Cannon.js physics system. Depends on the global CANNON object, so load cannon.js using a script tag before using this system. See also {@link CannonRigidbodyComponent}.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Cannon/Cannon-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 38,
      "filename": "CannonSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 25
  },
  {
    "id": "<anonymous>~CannonTerrainColliderComponent",
    "longname": "<anonymous>~CannonTerrainColliderComponent",
    "name": "CannonTerrainColliderComponent",
    "scope": "inner",
    "kind": "class",
    "description": "Terrain collider. Attach to an entity with a {@link CannonRigidbodyComponent}.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "CannonTerrainColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/cannonpack"
    },
    "order": 28
  },
  {
    "id": "<anonymous>~GamepadComponent",
    "longname": "<anonymous>~GamepadComponent",
    "name": "GamepadComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Gamepad/Gamepad-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 14,
      "filename": "GamepadComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/gamepadpack"
    },
    "order": 30
  },
  {
    "id": "<anonymous>~GamepadData",
    "longname": "<anonymous>~GamepadData",
    "name": "GamepadData",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "GamepadData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/gamepadpack"
    },
    "order": 32
  },
  {
    "id": "<anonymous>~GamepadSystem",
    "longname": "<anonymous>~GamepadSystem",
    "name": "GamepadSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Gamepad/Gamepad-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 16,
      "filename": "GamepadSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/gamepadpack"
    },
    "order": 35
  },
  {
    "id": "<anonymous>~LineRenderer",
    "longname": "<anonymous>~LineRenderer",
    "name": "LineRenderer",
    "scope": "inner",
    "kind": "class",
    "description": "Used internally to render a batch of lines all with the same color.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 21,
      "filename": "LineRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 37
  },
  {
    "id": "<anonymous>~LineRenderSystem",
    "longname": "<anonymous>~LineRenderSystem",
    "name": "LineRenderSystem",
    "scope": "inner",
    "kind": "class",
    "description": "Updates all of it's LineRenderers and exposes methods for drawing primitive line shapes.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 19,
      "filename": "LineRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/linerenderpack"
    },
    "order": 44
  },
  {
    "id": "<anonymous>~P2Component",
    "longname": "<anonymous>~P2Component",
    "name": "P2Component",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "P2 physics component.\nP2 supports convex and primitive shapes.\nSee also {@link P2System}",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/p2/p2-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 39,
      "filename": "P2Component.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/p2pack"
    },
    "order": 51
  },
  {
    "id": "<anonymous>~P2System",
    "longname": "<anonymous>~P2System",
    "name": "P2System",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/p2/p2-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 25,
      "filename": "P2System.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/p2pack"
    },
    "order": 53
  },
  {
    "id": "<anonymous>~ParticleSystemComponent",
    "longname": "<anonymous>~ParticleSystemComponent",
    "name": "ParticleSystemComponent",
    "scope": "inner",
    "kind": "class",
    "classdesc": null,
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 111,
      "filename": "ParticleSystemComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/components"
    },
    "order": 55
  },
  {
    "id": "<anonymous>~ConstantCurve",
    "longname": "<anonymous>~ConstantCurve",
    "name": "ConstantCurve",
    "scope": "inner",
    "kind": "class",
    "classdesc": null,
    "augments": [
      "Curve"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "ConstantCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 127
  },
  {
    "id": "<anonymous>~Curve",
    "longname": "<anonymous>~Curve",
    "name": "Curve",
    "scope": "inner",
    "kind": "class",
    "description": "A curve that has a time-dependent value (time is always between 0 and 1), and can be translated into GLSL code.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 130
  },
  {
    "id": "<anonymous>~LerpCurve",
    "longname": "<anonymous>~LerpCurve",
    "name": "LerpCurve",
    "scope": "inner",
    "kind": "class",
    "classdesc": null,
    "augments": [
      "Curve"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 20,
      "filename": "LerpCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 141
  },
  {
    "id": "<anonymous>~LinearCurve",
    "longname": "<anonymous>~LinearCurve",
    "name": "LinearCurve",
    "scope": "inner",
    "kind": "class",
    "classdesc": null,
    "augments": [
      "Curve"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "LinearCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 145
  },
  {
    "id": "<anonymous>~PolyCurve",
    "longname": "<anonymous>~PolyCurve",
    "name": "PolyCurve",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Curve"
    ],
    "description": "A collection of Curve instances. Used to connect different types curves, joining them at their given time offsets.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "PolyCurve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 150
  },
  {
    "id": "<anonymous>~Vector3Curve",
    "longname": "<anonymous>~Vector3Curve",
    "name": "Vector3Curve",
    "scope": "inner",
    "kind": "class",
    "classdesc": null,
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 22,
      "filename": "Vector3Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 160
  },
  {
    "id": "<anonymous>~Vector4Curve",
    "longname": "<anonymous>~Vector4Curve",
    "name": "Vector4Curve",
    "scope": "inner",
    "kind": "class",
    "classdesc": null,
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 23,
      "filename": "Vector4Curve.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/curves"
    },
    "order": 162
  },
  {
    "id": "<anonymous>~ParticleSystemComponentHandler",
    "longname": "<anonymous>~ParticleSystemComponentHandler",
    "name": "ParticleSystemComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 38,
      "filename": "ParticleSystemComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/handlers"
    },
    "order": 164
  },
  {
    "id": "<anonymous>~ParticleData",
    "longname": "<anonymous>~ParticleData",
    "name": "ParticleData",
    "scope": "inner",
    "kind": "class",
    "classdesc": null,
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "ParticleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack"
    },
    "order": 170
  },
  {
    "id": "<anonymous>~ParticleDebugRenderSystem",
    "longname": "<anonymous>~ParticleDebugRenderSystem",
    "name": "ParticleDebugRenderSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 30,
      "filename": "ParticleDebugRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/systems"
    },
    "order": 185
  },
  {
    "id": "<anonymous>~ParticleSystemSystem",
    "longname": "<anonymous>~ParticleSystemSystem",
    "name": "ParticleSystemSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 13,
      "filename": "ParticleSystemSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/particlepack/systems"
    },
    "order": 193
  },
  {
    "id": "<anonymous>~BoxCollider",
    "longname": "<anonymous>~BoxCollider",
    "name": "BoxCollider",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Collider"
    ],
    "description": "Physics box collider.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 18,
      "filename": "BoxCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 202
  },
  {
    "id": "<anonymous>~Collider",
    "longname": "<anonymous>~Collider",
    "name": "Collider",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 9,
      "filename": "Collider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 207
  },
  {
    "id": "<anonymous>~CylinderCollider",
    "longname": "<anonymous>~CylinderCollider",
    "name": "CylinderCollider",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Collider"
    ],
    "description": "Cylinder collider, that extends along the Z axis.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "CylinderCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 211
  },
  {
    "id": "<anonymous>~MeshCollider",
    "longname": "<anonymous>~MeshCollider",
    "name": "MeshCollider",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Collider"
    ],
    "description": "Physics mesh collider.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 19,
      "filename": "MeshCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 217
  },
  {
    "id": "<anonymous>~PlaneCollider",
    "longname": "<anonymous>~PlaneCollider",
    "name": "PlaneCollider",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Collider"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "PlaneCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 223
  },
  {
    "id": "<anonymous>~SphereCollider",
    "longname": "<anonymous>~SphereCollider",
    "name": "SphereCollider",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Collider"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "SphereCollider.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/colliders"
    },
    "order": 227
  },
  {
    "id": "<anonymous>~AbstractColliderComponent",
    "longname": "<anonymous>~AbstractColliderComponent",
    "name": "AbstractColliderComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Adds a physics collider to the entity. If the entity or any of its ancestors have a {RigidBodyComponent}, the collider is added to the physics world.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 19,
      "filename": "AbstractColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 232
  },
  {
    "id": "<anonymous>~AbstractRigidBodyComponent",
    "longname": "<anonymous>~AbstractRigidBodyComponent",
    "name": "AbstractRigidBodyComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 23,
      "filename": "AbstractRigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 245
  },
  {
    "id": "<anonymous>~ColliderComponent",
    "longname": "<anonymous>~ColliderComponent",
    "name": "ColliderComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "AbstractColliderComponent"
    ],
    "description": "Adds a physics collider to the entity. If the entity or any of its ancestors have a {RigidBodyComponent}, the collider is added to the physics world.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 36,
      "filename": "ColliderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 258
  },
  {
    "id": "<anonymous>~RigidBodyComponent",
    "longname": "<anonymous>~RigidBodyComponent",
    "name": "RigidBodyComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "AbstractRigidBodyComponent"
    ],
    "description": "Adds rigid body dynamics the entity. To be used with the {@link PhysicsSystem}. If the entity or its children have {@link ColliderComponent}s, they are added as collision shapes to the rigid body.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 47,
      "filename": "RigidBodyComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/components"
    },
    "order": 266
  },
  {
    "id": "<anonymous>~ColliderComponentHandler",
    "longname": "<anonymous>~ColliderComponentHandler",
    "name": "ColliderComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 34,
      "filename": "ColliderComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/handlers"
    },
    "order": 326
  },
  {
    "id": "<anonymous>~RigidBodyComponentHandler",
    "longname": "<anonymous>~RigidBodyComponentHandler",
    "name": "RigidBodyComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 26,
      "filename": "RigidBodyComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/handlers"
    },
    "order": 332
  },
  {
    "id": "<anonymous>~BallJoint",
    "longname": "<anonymous>~BallJoint",
    "name": "BallJoint",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "PhysicsJoint"
    ],
    "description": "A physics ball joint. A ball joint (or \"constraint\") will try to keep a point in each of two connected bodies the same.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 19,
      "filename": "BallJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 338
  },
  {
    "id": "<anonymous>~HingeJoint",
    "longname": "<anonymous>~HingeJoint",
    "name": "HingeJoint",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "PhysicsJoint"
    ],
    "description": "Physics hinge joint. To be added to a {@link RigidBodyComponent}.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 21,
      "filename": "HingeJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 343
  },
  {
    "id": "<anonymous>~PhysicsJoint",
    "longname": "<anonymous>~PhysicsJoint",
    "name": "PhysicsJoint",
    "scope": "inner",
    "kind": "class",
    "description": "Base class for physics joints, for example hinge or balljoint.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "PhysicsJoint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/joints"
    },
    "order": 349
  },
  {
    "id": "<anonymous>~PhysicsMaterial",
    "longname": "<anonymous>~PhysicsMaterial",
    "name": "PhysicsMaterial",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 10,
      "filename": "PhysicsMaterial.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack"
    },
    "order": 353
  },
  {
    "id": "<anonymous>~RaycastResult",
    "longname": "<anonymous>~RaycastResult",
    "name": "RaycastResult",
    "scope": "inner",
    "kind": "class",
    "description": "Structure used to get information back from a raycast.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 18,
      "filename": "RaycastResult.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack"
    },
    "order": 357
  },
  {
    "id": "<anonymous>~PhysicsBoxDebugShape",
    "longname": "<anonymous>~PhysicsBoxDebugShape",
    "name": "PhysicsBoxDebugShape",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "PhysicsBoxDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 363
  },
  {
    "id": "<anonymous>~PhysicsCylinderDebugShape",
    "longname": "<anonymous>~PhysicsCylinderDebugShape",
    "name": "PhysicsCylinderDebugShape",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "A wireframe mesh indicating the position and orientation of a CylinderCollider.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "PhysicsCylinderDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 367
  },
  {
    "id": "<anonymous>~PhysicsPlaneDebugShape",
    "longname": "<anonymous>~PhysicsPlaneDebugShape",
    "name": "PhysicsPlaneDebugShape",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "PhysicsPlaneDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 371
  },
  {
    "id": "<anonymous>~PhysicsSphereDebugShape",
    "longname": "<anonymous>~PhysicsSphereDebugShape",
    "name": "PhysicsSphereDebugShape",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "A wireframe mesh indicating the position and orientation of a SphereCollider.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "PhysicsSphereDebugShape.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/shapes"
    },
    "order": 375
  },
  {
    "id": "<anonymous>~AbstractPhysicsSystem",
    "longname": "<anonymous>~AbstractPhysicsSystem",
    "name": "AbstractPhysicsSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "AbstractPhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 379
  },
  {
    "id": "<anonymous>~ColliderSystem",
    "longname": "<anonymous>~ColliderSystem",
    "name": "ColliderSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "ColliderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 390
  },
  {
    "id": "<anonymous>~PhysicsDebugRenderSystem",
    "longname": "<anonymous>~PhysicsDebugRenderSystem",
    "name": "PhysicsDebugRenderSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 56,
      "filename": "PhysicsDebugRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 396
  },
  {
    "id": "<anonymous>~PhysicsSystem",
    "longname": "<anonymous>~PhysicsSystem",
    "name": "PhysicsSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "AbstractPhysicsSystem"
    ],
    "description": "A physics system using [Cannon.js]{@link http://github.com/schteppe/cannon.js}.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 39,
      "filename": "PhysicsSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/systems"
    },
    "order": 406
  },
  {
    "id": "<anonymous>~Pool",
    "longname": "<anonymous>~Pool",
    "name": "Pool",
    "scope": "inner",
    "kind": "class",
    "description": "Abstract pool class for object pooling.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 29,
      "filename": "Pool.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/physicspack/util"
    },
    "order": 425
  },
  {
    "id": "<anonymous>~SoundManager2Component",
    "longname": "<anonymous>~SoundManager2Component",
    "name": "SoundManager2Component",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "memberof": "<anonymous>",
    "deprecated": "Deprecated since 0.10.x and scheduled for removal in 0.12.0",
    "meta": {
      "lineno": 14,
      "filename": "SoundManager2Component.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/soundmanager2pack/components"
    },
    "order": 434
  },
  {
    "id": "<anonymous>~SoundManager2System",
    "longname": "<anonymous>~SoundManager2System",
    "name": "SoundManager2System",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Handles integration with Sound Manager 2",
    "memberof": "<anonymous>",
    "deprecated": "Deprecated since 0.10.x and scheduled for removal in 0.12.0",
    "meta": {
      "lineno": 16,
      "filename": "SoundManager2System.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/soundmanager2pack/systems"
    },
    "order": 436
  },
  {
    "id": "<anonymous>~Terrain",
    "longname": "<anonymous>~Terrain",
    "name": "Terrain",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 52,
      "filename": "Terrain.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/terrainpack"
    },
    "order": 438
  },
  {
    "id": "<anonymous>~TerrainSurface",
    "longname": "<anonymous>~TerrainSurface",
    "name": "TerrainSurface",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 18,
      "filename": "TerrainSurface.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/terrainpack"
    },
    "order": 440
  },
  {
    "id": "<anonymous>~FlatWaterRenderer",
    "longname": "<anonymous>~FlatWaterRenderer",
    "name": "FlatWaterRenderer",
    "scope": "inner",
    "kind": "class",
    "description": "Handles pre-rendering of water planes. Attach this to the rendersystem pre-renderers.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Water/water-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 42,
      "filename": "FlatWaterRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/waterpack"
    },
    "order": 443
  },
  {
    "id": "<anonymous>~ProjectedGrid",
    "longname": "<anonymous>~ProjectedGrid",
    "name": "ProjectedGrid",
    "scope": "inner",
    "kind": "class",
    "description": "Projected grid mesh",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 26,
      "filename": "ProjectedGrid.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/waterpack"
    },
    "order": 445
  },
  {
    "id": "<anonymous>~ProjectedGridWaterRenderer",
    "longname": "<anonymous>~ProjectedGridWaterRenderer",
    "name": "ProjectedGridWaterRenderer",
    "scope": "inner",
    "kind": "class",
    "description": "Handles pre-rendering of water planes. Attach this to the rendersystem pre-renderers.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 38,
      "filename": "ProjectedGridWaterRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/addons/waterpack"
    },
    "order": 448
  },
  {
    "id": "<anonymous>~ClipSource",
    "longname": "<anonymous>~ClipSource",
    "name": "ClipSource",
    "scope": "inner",
    "kind": "class",
    "description": "A blend tree leaf node that samples and returns values from the channels of an AnimationClip.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "ClipSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 458
  },
  {
    "id": "<anonymous>~FrozenClipSource",
    "longname": "<anonymous>~FrozenClipSource",
    "name": "FrozenClipSource",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "FrozenClipSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 468
  },
  {
    "id": "<anonymous>~ManagedTransformSource",
    "longname": "<anonymous>~ManagedTransformSource",
    "name": "ManagedTransformSource",
    "scope": "inner",
    "kind": "class",
    "description": "This tree source maintains its own source data, which can be modified directly using instance functions. This source is meant to be used for\n       controlling a particular joint or set of joints programatically.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 24,
      "filename": "ManagedTransformSource.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/blendtree"
    },
    "order": 476
  },
  {
    "id": "<anonymous>~AbstractAnimationChannel",
    "longname": "<anonymous>~AbstractAnimationChannel",
    "name": "AbstractAnimationChannel",
    "scope": "inner",
    "kind": "class",
    "description": "Base class for animation channels. An animation channel describes a single element of an animation (such as the movement of a single\n       joint, or the play back of a specific sound, etc.) These channels are grouped together in an {@link AnimationClip} to describe a full animation.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "AbstractAnimationChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 486
  },
  {
    "id": "<anonymous>~AnimationClip",
    "longname": "<anonymous>~AnimationClip",
    "name": "AnimationClip",
    "scope": "inner",
    "kind": "class",
    "description": "AnimationClip manages a set of animation channels as a single clip entity.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "AnimationClip.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 488
  },
  {
    "id": "<anonymous>~AnimationClipInstance",
    "longname": "<anonymous>~AnimationClipInstance",
    "name": "AnimationClipInstance",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "AnimationClipInstance.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 493
  },
  {
    "id": "<anonymous>~JointChannel",
    "longname": "<anonymous>~JointChannel",
    "name": "JointChannel",
    "scope": "inner",
    "kind": "class",
    "description": "Transform animation channel, specifically geared towards describing the motion of skeleton joints.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 20,
      "filename": "JointChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 500
  },
  {
    "id": "<anonymous>~JointData",
    "longname": "<anonymous>~JointData",
    "name": "JointData",
    "scope": "inner",
    "kind": "class",
    "description": "Describes transform of a joint.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 13,
      "filename": "JointData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 504
  },
  {
    "id": "<anonymous>~TransformChannel",
    "longname": "<anonymous>~TransformChannel",
    "name": "TransformChannel",
    "scope": "inner",
    "kind": "class",
    "description": "An animation channel consisting of a series of transforms interpolated over time.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 21,
      "filename": "TransformChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 508
  },
  {
    "id": "<anonymous>~TransformData",
    "longname": "<anonymous>~TransformData",
    "name": "TransformData",
    "scope": "inner",
    "kind": "class",
    "description": "Describes a relative transform as a Quaternion-Vector-Vector tuple. We use QVV to make it simpler to do LERP blending.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 9,
      "filename": "TransformData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/clip"
    },
    "order": 511
  },
  {
    "id": "<anonymous>~AnimationComponent",
    "longname": "<anonymous>~AnimationComponent",
    "name": "AnimationComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Holds the animation data.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 24,
      "filename": "AnimationComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/components"
    },
    "order": 520
  },
  {
    "id": "<anonymous>~AnimationComponentHandler",
    "longname": "<anonymous>~AnimationComponentHandler",
    "name": "AnimationComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of animation components",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 21,
      "filename": "AnimationComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/handlers"
    },
    "order": 532
  },
  {
    "id": "<anonymous>~Joint",
    "longname": "<anonymous>~Joint",
    "name": "Joint",
    "scope": "inner",
    "kind": "class",
    "description": "Representation of a Joint in a Skeleton. Meant to be used within a specific Skeleton object.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 9,
      "filename": "Joint.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack"
    },
    "order": 550
  },
  {
    "id": "<anonymous>~AnimationLayer",
    "longname": "<anonymous>~AnimationLayer",
    "name": "AnimationLayer",
    "scope": "inner",
    "kind": "class",
    "description": "Animation layers are essentially independent state machines, managed by a single AnimationManager. Each maintains a set of possible\n       \"steady states\" - main states that the layer can be in. The layer can only be in one state at any given time. It may transition between\n       states, provided that a path is defined for transition from the current state to the desired one. *",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 28,
      "filename": "AnimationLayer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 552
  },
  {
    "id": "<anonymous>~LayerLerpBlender",
    "longname": "<anonymous>~LayerLerpBlender",
    "name": "LayerLerpBlender",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "LayerLerpBlender.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/layer"
    },
    "order": 571
  },
  {
    "id": "<anonymous>~Skeleton",
    "longname": "<anonymous>~Skeleton",
    "name": "Skeleton",
    "scope": "inner",
    "kind": "class",
    "description": "Describes a collection of Joints. This class represents the hierarchy of a Skeleton and its original aspect (via the {@link Joint} class). This\n       does not support posing the joints in any way... Use with a SkeletonPose to describe a skeleton in a specific pose.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "Skeleton.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack"
    },
    "order": 574
  },
  {
    "id": "<anonymous>~SkeletonPose",
    "longname": "<anonymous>~SkeletonPose",
    "name": "SkeletonPose",
    "scope": "inner",
    "kind": "class",
    "description": "Joins a {@link Skeleton} with an array of {@link Joint} poses. This allows the skeleton to exist and be reused between multiple instances of poses.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "SkeletonPose.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack"
    },
    "order": 576
  },
  {
    "id": "<anonymous>~FadeTransitionState",
    "longname": "<anonymous>~FadeTransitionState",
    "name": "FadeTransitionState",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "AbstractTransitionState"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 13,
      "filename": "FadeTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 586
  },
  {
    "id": "<anonymous>~FrozenTransitionState",
    "longname": "<anonymous>~FrozenTransitionState",
    "name": "FrozenTransitionState",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "FrozenTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 590
  },
  {
    "id": "<anonymous>~SteadyState",
    "longname": "<anonymous>~SteadyState",
    "name": "SteadyState",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "AbstractState"
    ],
    "description": "A \"steady\" state is an animation state that is concrete and stand-alone (vs. a state that handles transitioning between two states, for example.)",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "SteadyState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 595
  },
  {
    "id": "<anonymous>~SyncFadeTransitionState",
    "longname": "<anonymous>~SyncFadeTransitionState",
    "name": "SyncFadeTransitionState",
    "scope": "inner",
    "kind": "class",
    "description": "A transition that blends over a given time from one animation state to another, synchronizing the target state to the initial state's start time. This is best used with two clips that have similar motions.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "SyncFadeTransitionState.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/state"
    },
    "order": 598
  },
  {
    "id": "<anonymous>~AnimationSystem",
    "longname": "<anonymous>~AnimationSystem",
    "name": "AnimationSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "AnimationSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/animationpack/systems"
    },
    "order": 600
  },
  {
    "id": "<anonymous>~BoundingVolumeMeshBuilder",
    "longname": "<anonymous>~BoundingVolumeMeshBuilder",
    "name": "BoundingVolumeMeshBuilder",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 20,
      "filename": "BoundingVolumeMeshBuilder.js",
      "path": "/Users/schteppe/git/goojs/src/goo/debugpack"
    },
    "order": 602
  },
  {
    "id": "<anonymous>~MarkerComponent",
    "longname": "<anonymous>~MarkerComponent",
    "name": "MarkerComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Holds the necessary data for a marker",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "MarkerComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/debugpack/components"
    },
    "order": 604
  },
  {
    "id": "<anonymous>~EntityCounter",
    "longname": "<anonymous>~EntityCounter",
    "name": "EntityCounter",
    "scope": "inner",
    "kind": "class",
    "description": "The entity counter utility class creates a panel and updates it with data on the systems in the world and how many entities each contains",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 11,
      "filename": "EntityCounter.js",
      "path": "/Users/schteppe/git/goojs/src/goo/debugpack"
    },
    "order": 615
  },
  {
    "id": "<anonymous>~DebugRenderSystem",
    "longname": "<anonymous>~DebugRenderSystem",
    "name": "DebugRenderSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Renders entities/renderables using a configurable partitioner for culling",
    "memberof": "<anonymous>",
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Only render if set to true",
        "name": "doRender"
      }
    ],
    "meta": {
      "lineno": 24,
      "filename": "DebugRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/debugpack/systems"
    },
    "order": 619
  },
  {
    "id": "<anonymous>~MarkerSystem",
    "longname": "<anonymous>~MarkerSystem",
    "name": "MarkerSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Processes all entities with a marker component",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 23,
      "filename": "MarkerSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/debugpack/systems"
    },
    "order": 620
  },
  {
    "id": "<anonymous>~Bus",
    "longname": "<anonymous>~Bus",
    "name": "Bus",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 8,
      "filename": "Bus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 621
  },
  {
    "id": "<anonymous>~CameraComponent",
    "longname": "<anonymous>~CameraComponent",
    "name": "CameraComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Holds a camera.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 21,
      "filename": "CameraComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 631
  },
  {
    "id": "<anonymous>~Component",
    "longname": "<anonymous>~Component",
    "name": "Component",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 8,
      "filename": "Component.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 639
  },
  {
    "id": "<anonymous>~CssTransformComponent",
    "longname": "<anonymous>~CssTransformComponent",
    "name": "CssTransformComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Connects a domElement to an entity and applies the transformComponent of the entity to the domElement with CSS3 3D transforms.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "CssTransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 644
  },
  {
    "id": "<anonymous>~Dom3dComponent",
    "longname": "<anonymous>~Dom3dComponent",
    "name": "Dom3dComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Connects a domElement to an entity and applies the transforms of the entity to the domElement with CSS3 3D transforms.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/entities/components/Dom3dComponent/Dom3dComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 24,
      "filename": "Dom3dComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 649
  },
  {
    "id": "<anonymous>~HtmlComponent",
    "longname": "<anonymous>~HtmlComponent",
    "name": "HtmlComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/entities/components/HTMLComponent/HTMLComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 15,
      "filename": "HtmlComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 652
  },
  {
    "id": "<anonymous>~LightComponent",
    "longname": "<anonymous>~LightComponent",
    "name": "LightComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Defines a light<br>",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/renderer/light/Lights-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 18,
      "filename": "LightComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 657
  },
  {
    "id": "<anonymous>~MeshDataComponent",
    "longname": "<anonymous>~MeshDataComponent",
    "name": "MeshDataComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Holds the mesh data, like vertices, normals, indices etc. Also defines the local bounding volume.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/components/MeshDataComponent/MeshDataComponent-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 20,
      "filename": "MeshDataComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 661
  },
  {
    "id": "<anonymous>~MeshRendererComponent",
    "longname": "<anonymous>~MeshRendererComponent",
    "name": "MeshRendererComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Defines the appearance of a mesh, through materials. Using several materials results in multi-pass rendering.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/examples/goo/entities/components/MeshRendererComponent/MeshRendererComponent-example.html Working example"
      }
    ],
    "meta": {
      "lineno": 17,
      "filename": "MeshRendererComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 670
  },
  {
    "id": "<anonymous>~MovementComponent",
    "longname": "<anonymous>~MovementComponent",
    "name": "MovementComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Holds the movement parameters of an entity.\nTypically useful for anything which has a speed and/or\nrotation.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 19,
      "filename": "MovementComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 681
  },
  {
    "id": "<anonymous>~ParticleComponent",
    "longname": "<anonymous>~ParticleComponent",
    "name": "ParticleComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Creates and modifies {@link MeshData} to simulate particle effects.<br /><br />ParticleComponents may have one or\nmore emitters. Each emitter spawns particles, controlling spawn rate, lifetime, initial velocity vector and\nposition of each particle. Each Particle System also contains a timeline describing changes each particle should\nperform over its lifetime, including:\n<ul>\n<li>Size of particle</li>\n<li>Color of particle</li>\n<li>Orientation of particle (rotation on screen plane)</li>\n<li>Texture coords used.</li>\n<li>Other user defined params.</li>\n</ul><br />\nExternal influences can exert on particles via a defined callback function system.<br /><br />\nParticles billboard toward the screen using a provided Camera as reference.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 38,
      "filename": "ParticleComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 688
  },
  {
    "id": "<anonymous>~PortalComponent",
    "longname": "<anonymous>~PortalComponent",
    "name": "PortalComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Renders to the texture of the host object<br>",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/entities/components/PortalComponent/PortalComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 24,
      "filename": "PortalComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 690
  },
  {
    "id": "<anonymous>~ScriptComponent",
    "longname": "<anonymous>~ScriptComponent",
    "name": "ScriptComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Contains scripts to be executed each frame when set on an active entity.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 26,
      "filename": "ScriptComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 695
  },
  {
    "id": "<anonymous>~SoundComponent",
    "longname": "<anonymous>~SoundComponent",
    "name": "SoundComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Component that adds sound to an entity.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Sound/Sound-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 23,
      "filename": "SoundComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 705
  },
  {
    "id": "<anonymous>~TextComponent",
    "longname": "<anonymous>~TextComponent",
    "name": "TextComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Provides ways for the entity to display text",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/entities/components/TextComponent/TextComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 17,
      "filename": "TextComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 713
  },
  {
    "id": "<anonymous>~TransformComponent",
    "longname": "<anonymous>~TransformComponent",
    "name": "TransformComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Holds the transform of an entity. It also allows for a scene graph to be created,\nin which transforms are inherited down the tree.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/entities/components/TransformComponent/TransformComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 22,
      "filename": "TransformComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/components"
    },
    "order": 715
  },
  {
    "id": "<anonymous>~Entity",
    "longname": "<anonymous>~Entity",
    "name": "Entity",
    "scope": "inner",
    "kind": "class",
    "description": "An Entity is a generic container of data.\nThis data is wrapped in [Components]{@link Component}, which usually provide isolated features (transforms, geometries, materials, scripts and so on).\nBy setting components to an entity, the entity will get the functionality provided by the components.\nFor example, an entity with a {@link TransformComponent} and a {@link LightComponent} will be a light source in 3D space.\nNote that when attaching components to an entity, methods of the component will be injected into the entity, extending its interface.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 22,
      "filename": "Entity.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 757
  },
  {
    "id": "<anonymous>~EntitySelection",
    "longname": "<anonymous>~EntitySelection",
    "name": "EntitySelection",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Selection"
    ],
    "description": "A specialised selection object for entities",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "EntitySelection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 780
  },
  {
    "id": "<anonymous>~EntityUtils",
    "longname": "<anonymous>~EntityUtils",
    "name": "EntityUtils",
    "scope": "inner",
    "kind": "class",
    "description": "Utilities for entity creation etc\nOnly used to define the class. Should never be instantiated.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 18,
      "filename": "EntityUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 789
  },
  {
    "id": "<anonymous>~GooRunner",
    "longname": "<anonymous>~GooRunner",
    "name": "GooRunner",
    "scope": "inner",
    "kind": "class",
    "description": "The main class that updates the world and calls the renderers.\nSee [this engine overview article]{@link http://www.gootechnologies.com/learn/tutorials/engine/engine-overview/} for more info.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 84,
      "filename": "GooRunner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 794
  },
  {
    "id": "<anonymous>~EntityManager",
    "longname": "<anonymous>~EntityManager",
    "name": "EntityManager",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Manager"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "EntityManager.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/managers"
    },
    "order": 822
  },
  {
    "id": "<anonymous>~Manager",
    "longname": "<anonymous>~Manager",
    "name": "Manager",
    "scope": "inner",
    "kind": "class",
    "description": "Base class for managers.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "Manager.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/managers"
    },
    "order": 833
  },
  {
    "id": "<anonymous>~Selection",
    "longname": "<anonymous>~Selection",
    "name": "Selection",
    "scope": "inner",
    "kind": "class",
    "description": "Generic selection class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 9,
      "filename": "Selection.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 834
  },
  {
    "id": "<anonymous>~BoundingUpdateSystem",
    "longname": "<anonymous>~BoundingUpdateSystem",
    "name": "BoundingUpdateSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "BoundingUpdateSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 854
  },
  {
    "id": "<anonymous>~CameraSystem",
    "longname": "<anonymous>~CameraSystem",
    "name": "CameraSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "CameraSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 856
  },
  {
    "id": "<anonymous>~CssTransformSystem",
    "longname": "<anonymous>~CssTransformSystem",
    "name": "CssTransformSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 21,
      "filename": "CssTransformSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 859
  },
  {
    "id": "<anonymous>~Dom3dSystem",
    "longname": "<anonymous>~Dom3dSystem",
    "name": "Dom3dSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/entities/components/Dom3dComponent/Dom3dComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 32,
      "filename": "Dom3dSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 860
  },
  {
    "id": "<anonymous>~GridRenderSystem",
    "longname": "<anonymous>~GridRenderSystem",
    "name": "GridRenderSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Only render if set to true",
        "name": "doRender"
      }
    ],
    "meta": {
      "lineno": 34,
      "filename": "GridRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 861
  },
  {
    "id": "<anonymous>~HtmlSystem",
    "longname": "<anonymous>~HtmlSystem",
    "name": "HtmlSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/entities/components/HTMLComponent/HTMLComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 22,
      "filename": "HtmlSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 863
  },
  {
    "id": "<anonymous>~LightingSystem",
    "longname": "<anonymous>~LightingSystem",
    "name": "LightingSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Processes all entities with a light component making sure that lights are placed according to its transforms<br>",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/renderer/light/Lights-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 19,
      "filename": "LightingSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 864
  },
  {
    "id": "<anonymous>~MovementSystem",
    "longname": "<anonymous>~MovementSystem",
    "name": "MovementSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Processes all entities with movement components.\nThis system applies movement vectors for translation and rotation\nto the transform of the entity which has it every frame.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "MovementSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 867
  },
  {
    "id": "<anonymous>~ParticlesSystem",
    "longname": "<anonymous>~ParticlesSystem",
    "name": "ParticlesSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Manages and reacts to particle components on entities.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "ParticlesSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 868
  },
  {
    "id": "<anonymous>~PickingSystem",
    "longname": "<anonymous>~PickingSystem",
    "name": "PickingSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Helps gather pickable entities",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 10,
      "filename": "PickingSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 869
  },
  {
    "id": "<anonymous>~PortalSystem",
    "longname": "<anonymous>~PortalSystem",
    "name": "PortalSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Processes all entities with a portal component, a mesh renderer component and a mesh data component",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/entities/components/PortalComponent/PortalComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 17,
      "filename": "PortalSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 870
  },
  {
    "id": "<anonymous>~RenderSystem",
    "longname": "<anonymous>~RenderSystem",
    "name": "RenderSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Renders entities/renderables using a configurable partitioner for culling",
    "memberof": "<anonymous>",
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Only render if set to true",
        "name": "doRender"
      }
    ],
    "meta": {
      "lineno": 25,
      "filename": "RenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 872
  },
  {
    "id": "<anonymous>~ScriptSystem",
    "longname": "<anonymous>~ScriptSystem",
    "name": "ScriptSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "ScriptSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 873
  },
  {
    "id": "<anonymous>~SoundSystem",
    "longname": "<anonymous>~SoundSystem",
    "name": "SoundSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "System responsible for sound.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/Sound/Sound-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 23,
      "filename": "SoundSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 875
  },
  {
    "id": "<anonymous>~System",
    "longname": "<anonymous>~System",
    "name": "System",
    "scope": "inner",
    "kind": "class",
    "description": "Creates a new System\n\nBase class for all entity systems\n       <ul>\n       <li> interests = null -> listen to all entities\n       <li> interests = [] -> don't listen to any entities\n       <li> interests = ['coolComponent', 'testComponent'] -> listen to entities that contains at minimum 'coolComponent' and 'testComponent'\n       </ul>\nSee [this engine overview article]{@link http://www.gootechnologies.com/learn/tutorials/engine/engine-overview/} for more info.",
    "memberof": "<anonymous>",
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "System type",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "Array.<String>"
          ]
        },
        "description": "Array of component types this system is interested in",
        "name": "interests"
      }
    ],
    "meta": {
      "lineno": 23,
      "filename": "System.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 892
  },
  {
    "id": "<anonymous>~TextSystem",
    "longname": "<anonymous>~TextSystem",
    "name": "TextSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Processes all entities with a text component<br>",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/entities/components/TextComponent/TextComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 19,
      "filename": "TextSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 901
  },
  {
    "id": "<anonymous>~TransformSystem",
    "longname": "<anonymous>~TransformSystem",
    "name": "TransformSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Processes all entities with transform components, making sure they are up to date and valid according to the \"scenegraph\"",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/entities/components/TransformComponent/TransformComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 16,
      "filename": "TransformSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities/systems"
    },
    "order": 902
  },
  {
    "id": "<anonymous>~World",
    "longname": "<anonymous>~World",
    "name": "World",
    "scope": "inner",
    "kind": "class",
    "description": "Main handler for an entity world. The World keeps track of managers and systems,\nand also provides methods to create, select and remove entities.\nNote that process() has to be called manually if objects need to be added and retrieved within the same update loop.\nSee [this engine overview article]{@link http://www.gootechnologies.com/learn/tutorials/engine/engine-overview/} for more info.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 31,
      "filename": "World.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 903
  },
  {
    "id": "<anonymous>~WorldBy",
    "longname": "<anonymous>~WorldBy",
    "name": "WorldBy",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 13,
      "filename": "WorldBy.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 925
  },
  {
    "id": "<anonymous>~MachineHandler",
    "longname": "<anonymous>~MachineHandler",
    "name": "MachineHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ConfigHandler"
    ],
    "description": "Handler for loading materials into engine",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 27,
      "filename": "MachineHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack"
    },
    "order": 927
  },
  {
    "id": "<anonymous>~ProximitySystem",
    "longname": "<anonymous>~ProximitySystem",
    "name": "ProximitySystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Processes all entities with a proximity component",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 19,
      "filename": "ProximitySystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/proximity"
    },
    "order": 935
  },
  {
    "id": "<anonymous>~Action",
    "longname": "<anonymous>~Action",
    "name": "Action",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 13,
      "filename": "Action.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack/statemachine/actions"
    },
    "order": 937
  },
  {
    "id": "<anonymous>~StateMachineComponentHandler",
    "longname": "<anonymous>~StateMachineComponentHandler",
    "name": "StateMachineComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of state machine components",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 23,
      "filename": "StateMachineComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/fsmpack"
    },
    "order": 958
  },
  {
    "id": "<anonymous>~FilledPolygon",
    "longname": "<anonymous>~FilledPolygon",
    "name": "FilledPolygon",
    "scope": "inner",
    "kind": "class",
    "description": "A polygon shape",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/geometrypack/FilledPolygon/FilledPolygon-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 17,
      "filename": "FilledPolygon.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 962
  },
  {
    "id": "<anonymous>~PolyLine",
    "longname": "<anonymous>~PolyLine",
    "name": "PolyLine",
    "scope": "inner",
    "kind": "class",
    "description": "A polygonal line",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 20,
      "filename": "PolyLine.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 965
  },
  {
    "id": "<anonymous>~RegularPolygon",
    "longname": "<anonymous>~RegularPolygon",
    "name": "RegularPolygon",
    "scope": "inner",
    "kind": "class",
    "description": "Regular polygon mesh",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "RegularPolygon.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 974
  },
  {
    "id": "<anonymous>~Surface",
    "longname": "<anonymous>~Surface",
    "name": "Surface",
    "scope": "inner",
    "kind": "class",
    "description": "A grid-like surface shape",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "Surface.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 975
  },
  {
    "id": "<anonymous>~TextComponent",
    "longname": "<anonymous>~TextComponent",
    "name": "TextComponent",
    "scope": "inner",
    "kind": "class",
    "description": "Stores a font and handles the text mesh on an entity\nDepends on opentype.js",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "TextComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 980
  },
  {
    "id": "<anonymous>~TextComponentHandler",
    "longname": "<anonymous>~TextComponentHandler",
    "name": "TextComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of text components",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 21,
      "filename": "TextComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 983
  },
  {
    "id": "<anonymous>~Triangle",
    "longname": "<anonymous>~Triangle",
    "name": "Triangle",
    "scope": "inner",
    "kind": "class",
    "description": "Only creates an attributeMap with MeshData.POSITION and MeshData.NORMAL.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 15,
      "filename": "Triangle.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack"
    },
    "order": 1002
  },
  {
    "id": "<anonymous>~DynamicLoader",
    "longname": "<anonymous>~DynamicLoader",
    "name": "DynamicLoader",
    "scope": "inner",
    "kind": "class",
    "description": "Class to load objects into the engine, or to update objects based on the data model.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 50,
      "filename": "DynamicLoader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders"
    },
    "order": 1013
  },
  {
    "id": "<anonymous>~CameraComponentHandler",
    "longname": "<anonymous>~CameraComponentHandler",
    "name": "CameraComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of camera components",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 27,
      "filename": "CameraComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1028
  },
  {
    "id": "<anonymous>~ComponentHandler",
    "longname": "<anonymous>~ComponentHandler",
    "name": "ComponentHandler",
    "scope": "inner",
    "kind": "class",
    "description": "Base class for component handlers. All different types of components that an entity\ncan have need to have a registered component handler. To handle a new type of component,\ncreate a class that inherits from this class, and override {_prepare}, {_create}, {update} and {remove}\nas needed ({update} must be overridden). In your class, call <code>@_register('yourComponentType')</code> to _register\nthe handler with the loader.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 22,
      "filename": "ComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1033
  },
  {
    "id": "<anonymous>~ConfigHandler",
    "longname": "<anonymous>~ConfigHandler",
    "name": "ConfigHandler",
    "scope": "inner",
    "kind": "class",
    "description": "Base class for resource handlers, used to load all types of resources into the engine.\nAll the resource types in the bundle (noted by their extension) need to have a registered config\nhandler.\nTo handle a new type of component, create a class that inherits from this class, and override {update}.\nIn your class, call <code>@_register('yourResourceExtension')</code> to _register\nthe handler with the loader.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 24,
      "filename": "ConfigHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1042
  },
  {
    "id": "<anonymous>~Dom3dComponentHandler",
    "longname": "<anonymous>~Dom3dComponentHandler",
    "name": "Dom3dComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of Dom3d components",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 23,
      "filename": "Dom3dComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1051
  },
  {
    "id": "<anonymous>~HtmlComponentHandler",
    "longname": "<anonymous>~HtmlComponentHandler",
    "name": "HtmlComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of HTML components",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 23,
      "filename": "HtmlComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1066
  },
  {
    "id": "<anonymous>~LightComponentHandler",
    "longname": "<anonymous>~LightComponentHandler",
    "name": "LightComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of light components",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 29,
      "filename": "LightComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1071
  },
  {
    "id": "<anonymous>~MeshDataComponentHandler",
    "longname": "<anonymous>~MeshDataComponentHandler",
    "name": "MeshDataComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of meshdatacomponents",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 29,
      "filename": "MeshDataComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1081
  },
  {
    "id": "<anonymous>~MeshRendererComponentHandler",
    "longname": "<anonymous>~MeshRendererComponentHandler",
    "name": "MeshRendererComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of meshrenderercomponents",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 29,
      "filename": "MeshRendererComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1092
  },
  {
    "id": "<anonymous>~SoundComponentHandler",
    "longname": "<anonymous>~SoundComponentHandler",
    "name": "SoundComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of sound components",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 27,
      "filename": "SoundComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1113
  },
  {
    "id": "<anonymous>~TransformComponentHandler",
    "longname": "<anonymous>~TransformComponentHandler",
    "name": "TransformComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of transform component",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 25,
      "filename": "TransformComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/loaders/handlers"
    },
    "order": 1129
  },
  {
    "id": "<anonymous>~LogicComponentHandler",
    "longname": "<anonymous>~LogicComponentHandler",
    "name": "LogicComponentHandler",
    "scope": "inner",
    "kind": "class",
    "description": "* @private",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 43,
      "filename": "LogicComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/logicpack"
    },
    "order": 1197
  },
  {
    "id": "<anonymous>~MathUtils",
    "longname": "<anonymous>~MathUtils",
    "name": "MathUtils",
    "scope": "inner",
    "kind": "class",
    "description": "A collection of useful math-related functions, constants and helpers.\nOnly used to define the class. Should never be instantiated.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 10,
      "filename": "MathUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1200
  },
  {
    "id": "<anonymous>~Matrix",
    "longname": "<anonymous>~Matrix",
    "name": "Matrix",
    "scope": "inner",
    "kind": "class",
    "description": "Matrix with RxC components.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "Matrix.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1229
  },
  {
    "id": "<anonymous>~Matrix2",
    "longname": "<anonymous>~Matrix2",
    "name": "Matrix2",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Matrix"
    ],
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "Matrix2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1258
  },
  {
    "id": "<anonymous>~Matrix3",
    "longname": "<anonymous>~Matrix3",
    "name": "Matrix3",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Matrix"
    ],
    "description": "Matrix with 3x3 components. Used to store 3D rotations. It also contains common 3D Rotation operations.\nCreates a new Matrix3 by passing in either a current Matrix3, number Array, or a set of 9 numbers.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 33,
      "filename": "Matrix3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1286
  },
  {
    "id": "<anonymous>~Matrix4",
    "longname": "<anonymous>~Matrix4",
    "name": "Matrix4",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Matrix"
    ],
    "description": "Matrix with 4x4 components.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 18,
      "filename": "Matrix4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1327
  },
  {
    "id": "<anonymous>~Plane",
    "longname": "<anonymous>~Plane",
    "name": "Plane",
    "scope": "inner",
    "kind": "class",
    "description": "A representation of a mathematical plane using a normal vector and a plane constant (d) whose absolute value represents the distance\n       from the origin to the plane. It is generally calculated by taking a point (X) on the plane and finding its dot-product with the plane's\n       normal vector. In other words: d = N dot X",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "Plane.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1366
  },
  {
    "id": "<anonymous>~Quaternion",
    "longname": "<anonymous>~Quaternion",
    "name": "Quaternion",
    "scope": "inner",
    "kind": "class",
    "description": "Quaternions provide a convenient mathematical notation for\nrepresenting orientations and rotations of objects in three dimensions.\nCompared to Euler angles, Quaternions are simpler to compose and can help avoid the problem of gimbal lock.\nCompared to rotation matrices, Quaternions are more numerically stable and the representation (4 numbers) is more compact.\nQuaternions are non-commutative and provide a convenient way to interpolate between rotations (using the <i>slerp</i> function).",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 31,
      "filename": "Quaternion.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1374
  },
  {
    "id": "<anonymous>~Ray",
    "longname": "<anonymous>~Ray",
    "name": "Ray",
    "scope": "inner",
    "kind": "class",
    "description": "Constructs a new ray with an origin at (0, 0, 0) and a direction of (0, 0, 1).",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "Ray.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1410
  },
  {
    "id": "<anonymous>~Spline",
    "longname": "<anonymous>~Spline",
    "name": "Spline",
    "scope": "inner",
    "kind": "class",
    "description": "Describes a cubic spline",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "Spline.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math/splines"
    },
    "order": 1416
  },
  {
    "id": "<anonymous>~SplineWalker",
    "longname": "<anonymous>~SplineWalker",
    "name": "SplineWalker",
    "scope": "inner",
    "kind": "class",
    "description": "Provides a way to interpolate on a spline with constant speed",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/math/SplineWalker/SplineWalker-vtest.html Comparison or normal interpolation vs using the SplineWalker"
      }
    ],
    "meta": {
      "lineno": 16,
      "filename": "SplineWalker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math/splines"
    },
    "order": 1421
  },
  {
    "id": "<anonymous>~Transform",
    "longname": "<anonymous>~Transform",
    "name": "Transform",
    "scope": "inner",
    "kind": "class",
    "description": "Transform models a transformation in 3d space as: Y = M*X+T, with M being a Matrix3 and T is a Vector3. Generally M will be a rotation\n       only matrix in which case it is represented by the matrix and scale fields as R*S, where S is a positive scale vector. For non-uniform\n       scales and reflections, use setMatrix, which will consider M as being a general 3x3 matrix and disregard anything set in scale.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 20,
      "filename": "Transform.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1427
  },
  {
    "id": "<anonymous>~Vector",
    "longname": "<anonymous>~Vector",
    "name": "Vector",
    "scope": "inner",
    "kind": "class",
    "description": "Abstract vector class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "Vector.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1444
  },
  {
    "id": "<anonymous>~Vector2",
    "longname": "<anonymous>~Vector2",
    "name": "Vector2",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Vector"
    ],
    "description": "Vector with 2 components",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 26,
      "filename": "Vector2.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1477
  },
  {
    "id": "<anonymous>~Vector3",
    "longname": "<anonymous>~Vector3",
    "name": "Vector3",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Vector"
    ],
    "description": "Vector with 3 components",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 25,
      "filename": "Vector3.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1527
  },
  {
    "id": "<anonymous>~Vector4",
    "longname": "<anonymous>~Vector4",
    "name": "Vector4",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Vector"
    ],
    "description": "Vector with 4 components",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 24,
      "filename": "Vector4.js",
      "path": "/Users/schteppe/git/goojs/src/goo/math"
    },
    "order": 1587
  },
  {
    "id": "<anonymous>~Noise",
    "longname": "<anonymous>~Noise",
    "name": "Noise",
    "scope": "inner",
    "kind": "class",
    "description": "A base class for procedural noise functions.\nOnly used to define the class. Should never be instantiated.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 13,
      "filename": "Noise.js",
      "path": "/Users/schteppe/git/goojs/src/goo/noise"
    },
    "order": 1641
  },
  {
    "id": "<anonymous>~ValueNoise",
    "longname": "<anonymous>~ValueNoise",
    "name": "ValueNoise",
    "scope": "inner",
    "kind": "class",
    "description": "Value noise is simpler and computationally lighter than Perlin noise yet produce visually similar results when used in fractals.\n Only used to define the class. Should never be instantiated.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "ValueNoise.js",
      "path": "/Users/schteppe/git/goojs/src/goo/noise"
    },
    "order": 1647
  },
  {
    "id": "<anonymous>~OccludeeComponent",
    "longname": "<anonymous>~OccludeeComponent",
    "name": "OccludeeComponent",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "OccludeeComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack"
    },
    "order": 1652
  },
  {
    "id": "<anonymous>~OccluderComponent",
    "longname": "<anonymous>~OccluderComponent",
    "name": "OccluderComponent",
    "scope": "inner",
    "kind": "class",
    "description": "This component contains the triangle mesh which forms an occluder shape for the\nentity which this component is attached to. The occluder geometry is used for rendering\na depth buffer during occlusion culling.",
    "memberof": "<anonymous>",
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The type string. Same as the class name.",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "MeshData"
          ]
        },
        "description": "The triangle occluder geometry.",
        "name": "meshData"
      }
    ],
    "meta": {
      "lineno": 17,
      "filename": "OccluderComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack"
    },
    "order": 1654
  },
  {
    "id": "<anonymous>~OcclusionPartitioner",
    "longname": "<anonymous>~OcclusionPartitioner",
    "name": "OcclusionPartitioner",
    "scope": "inner",
    "kind": "class",
    "description": "Processes all entities with meshrenderer components.\nA SimplePartitioner is used to first view frustum cull the entities.\nEach of the view frustum culled entities are then added to an occluderList if it has an OccluderComponent.\nThe occluder-entities are rendered to a depth-buffer in {SoftwareRenderer} and all the\nentities in the renderList are ultimately occlusion culled based on that depth-buffer.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 18,
      "filename": "OcclusionPartitioner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack"
    },
    "order": 1656
  },
  {
    "id": "<anonymous>~BoundingSphereOcclusionChecker",
    "longname": "<anonymous>~BoundingSphereOcclusionChecker",
    "name": "BoundingSphereOcclusionChecker",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 36,
      "filename": "BoundingSphereOcclusionChecker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1669
  },
  {
    "id": "<anonymous>~Edge",
    "longname": "<anonymous>~Edge",
    "name": "Edge",
    "scope": "inner",
    "kind": "class",
    "classdesc": null,
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 9,
      "filename": "Edge.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1676
  },
  {
    "id": "<anonymous>~EdgeData",
    "longname": "<anonymous>~EdgeData",
    "name": "EdgeData",
    "scope": "inner",
    "kind": "class",
    "classdesc": null,
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 9,
      "filename": "EdgeData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1677
  },
  {
    "id": "<anonymous>~EdgeMap",
    "longname": "<anonymous>~EdgeMap",
    "name": "EdgeMap",
    "scope": "inner",
    "kind": "class",
    "description": "Stores the edges to render.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "EdgeMap.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1679
  },
  {
    "id": "<anonymous>~OccludeeTriangleData",
    "longname": "<anonymous>~OccludeeTriangleData",
    "name": "OccludeeTriangleData",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 10,
      "filename": "OccludeeTriangleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1681
  },
  {
    "id": "<anonymous>~OccluderTriangleData",
    "longname": "<anonymous>~OccluderTriangleData",
    "name": "OccluderTriangleData",
    "scope": "inner",
    "kind": "class",
    "description": "Container class, which holds the data needed to render triangles.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 11,
      "filename": "OccluderTriangleData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1685
  },
  {
    "id": "<anonymous>~SoftwareRenderer",
    "longname": "<anonymous>~SoftwareRenderer",
    "name": "SoftwareRenderer",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 52,
      "filename": "SoftwareRenderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1690
  },
  {
    "id": "<anonymous>~ParticleEmitter",
    "longname": "<anonymous>~ParticleEmitter",
    "name": "ParticleEmitter",
    "scope": "inner",
    "kind": "class",
    "description": "A Particle Emitter spawns particles - controlling spawn rate, lifetime, initial velocity vector and position of each particle.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 26,
      "filename": "ParticleEmitter.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1719
  },
  {
    "id": "<anonymous>~ParticleInfluence",
    "longname": "<anonymous>~ParticleInfluence",
    "name": "ParticleInfluence",
    "scope": "inner",
    "kind": "class",
    "description": "A Particle influence modifies particles in some way over time.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/particles/ParticleInfluence-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 13,
      "filename": "ParticleInfluence.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1723
  },
  {
    "id": "<anonymous>~ParticleLib",
    "longname": "<anonymous>~ParticleLib",
    "name": "ParticleLib",
    "scope": "inner",
    "kind": "class",
    "description": "Library of particles",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/misc/ParticleLib/ParticleLib-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 9,
      "filename": "ParticleLib.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1728
  },
  {
    "id": "<anonymous>~ParticleUtils",
    "longname": "<anonymous>~ParticleUtils",
    "name": "ParticleUtils",
    "scope": "inner",
    "kind": "class",
    "description": "Various helper utils for particle systems.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "ParticleUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1732
  },
  {
    "id": "<anonymous>~BloomPass",
    "longname": "<anonymous>~BloomPass",
    "name": "BloomPass",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/passpack/BloomPass/BloomPass-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 25,
      "filename": "BloomPass.js",
      "path": "/Users/schteppe/git/goojs/src/goo/passpack"
    },
    "order": 1733
  },
  {
    "id": "<anonymous>~BlurPass",
    "longname": "<anonymous>~BlurPass",
    "name": "BlurPass",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 22,
      "filename": "BlurPass.js",
      "path": "/Users/schteppe/git/goojs/src/goo/passpack"
    },
    "order": 1735
  },
  {
    "id": "<anonymous>~DepthPass",
    "longname": "<anonymous>~DepthPass",
    "name": "DepthPass",
    "scope": "inner",
    "kind": "class",
    "description": "Depth pass",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 33,
      "filename": "DepthPass.js",
      "path": "/Users/schteppe/git/goojs/src/goo/passpack"
    },
    "order": 1737
  },
  {
    "id": "<anonymous>~DofPass",
    "longname": "<anonymous>~DofPass",
    "name": "DofPass",
    "scope": "inner",
    "kind": "class",
    "description": "Deph of field pass",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 36,
      "filename": "DofPass.js",
      "path": "/Users/schteppe/git/goojs/src/goo/passpack"
    },
    "order": 1739
  },
  {
    "id": "<anonymous>~DogPass",
    "longname": "<anonymous>~DogPass",
    "name": "DogPass",
    "scope": "inner",
    "kind": "class",
    "description": "Difference of Gaussian Filter pass. Usable for edge detection. A lower sigma will create thinner edgelines, tune to get the sweetspot. Maximum sigma is 2.5. http://en.wikipedia.org/wiki/Difference_of_Gaussians http://www.tara.tcd.ie/bitstream/2262/12840/1/eg07.pdf , Adaptive Abstraction of 3D Scenes in Real-Time by Redmond and Dingliana, 2007",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 24,
      "filename": "DogPass.js",
      "path": "/Users/schteppe/git/goojs/src/goo/passpack"
    },
    "order": 1741
  },
  {
    "id": "<anonymous>~ShaderLibExtra",
    "longname": "<anonymous>~ShaderLibExtra",
    "name": "ShaderLibExtra",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 22,
      "filename": "ShaderLibExtra.js",
      "path": "/Users/schteppe/git/goojs/src/goo/passpack"
    },
    "order": 1748
  },
  {
    "id": "<anonymous>~SsaoPass",
    "longname": "<anonymous>~SsaoPass",
    "name": "SsaoPass",
    "scope": "inner",
    "kind": "class",
    "description": "Screen Space Ambient Occlusion pass",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 34,
      "filename": "SsaoPass.js",
      "path": "/Users/schteppe/git/goojs/src/goo/passpack"
    },
    "order": 1751
  },
  {
    "id": "<anonymous>~BoundingTree",
    "longname": "<anonymous>~BoundingTree",
    "name": "BoundingTree",
    "scope": "inner",
    "kind": "class",
    "description": "Bounding tree node",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "BoundingTree.js",
      "path": "/Users/schteppe/git/goojs/src/goo/picking"
    },
    "order": 1753
  },
  {
    "id": "<anonymous>~PrimitivePickLogic",
    "longname": "<anonymous>~PrimitivePickLogic",
    "name": "PrimitivePickLogic",
    "scope": "inner",
    "kind": "class",
    "description": "Primitive pick logic",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "PrimitivePickLogic.js",
      "path": "/Users/schteppe/git/goojs/src/goo/picking"
    },
    "order": 1755
  },
  {
    "id": "<anonymous>~DoubleQuad",
    "longname": "<anonymous>~DoubleQuad",
    "name": "DoubleQuad",
    "scope": "inner",
    "kind": "class",
    "description": "A rectangular, two dimensional shape. The local height of the\nDoubleQuad defines it's size about the y-axis, while the width defines\nthe x-axis. The z-axis will always be 0.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/quadpack/DoubleQuad/DoubleQuad-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 19,
      "filename": "DoubleQuad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1756
  },
  {
    "id": "<anonymous>~QuadComponent",
    "longname": "<anonymous>~QuadComponent",
    "name": "QuadComponent",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Component"
    ],
    "description": "Quad component that holds a unit [Quad]{@link Quad} mesh and a [Material]{@link Material}. It makes it easy to create a textured quad in 3D space, for example a logotype. When the component is added to the world, all other needed components are automatically added to the entity. Make sure your add a [QuadSystem]{@link QuadSystem} to the world before you start using this component.",
    "memberof": "<anonymous>",
    "see": [
      "QuadSystem"
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/quadpack/QuadComponent/QuadComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 36,
      "filename": "QuadComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1763
  },
  {
    "id": "<anonymous>~QuadComponentHandler",
    "longname": "<anonymous>~QuadComponentHandler",
    "name": "QuadComponentHandler",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "ComponentHandler"
    ],
    "description": "For handling loading of quadcomponents",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 25,
      "filename": "QuadComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/quadpack"
    },
    "order": 1776
  },
  {
    "id": "<anonymous>~BoundingBox",
    "longname": "<anonymous>~BoundingBox",
    "name": "BoundingBox",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 18,
      "filename": "BoundingBox.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/bounds"
    },
    "order": 1781
  },
  {
    "id": "<anonymous>~BoundingSphere",
    "longname": "<anonymous>~BoundingSphere",
    "name": "BoundingSphere",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 18,
      "filename": "BoundingSphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/bounds"
    },
    "order": 1786
  },
  {
    "id": "<anonymous>~BoundingVolume",
    "longname": "<anonymous>~BoundingVolume",
    "name": "BoundingVolume",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "BoundingVolume.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/bounds"
    },
    "order": 1791
  },
  {
    "id": "<anonymous>~BufferData",
    "longname": "<anonymous>~BufferData",
    "name": "BufferData",
    "scope": "inner",
    "kind": "class",
    "description": "The purpose of this class is to hold additional information regarding a typedarray buffer, like vbo 'usage' flags",
    "memberof": "<anonymous>",
    "properties": [
      {
        "type": {
          "names": [
            "ArrayBuffer"
          ]
        },
        "description": "Data to wrap",
        "name": "data"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Type of data ('ArrayBuffer'/'ElementArrayBuffer')",
        "name": "target"
      }
    ],
    "meta": {
      "lineno": 16,
      "filename": "BufferData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1795
  },
  {
    "id": "<anonymous>~BufferUtils",
    "longname": "<anonymous>~BufferUtils",
    "name": "BufferUtils",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "BufferUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1800
  },
  {
    "id": "<anonymous>~Camera",
    "longname": "<anonymous>~Camera",
    "name": "Camera",
    "scope": "inner",
    "kind": "class",
    "description": "This class represents a view into a 3D scene and how that view should map to a 2D rendering surface.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 35,
      "filename": "Camera.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1804
  },
  {
    "id": "<anonymous>~Capabilities",
    "longname": "<anonymous>~Capabilities",
    "name": "Capabilities",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "properties": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "S3TC (DXT) compression, WEBGL_compressed_texture_s3tc",
        "name": "CompressedTextureS3TC"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Floating point textures, OES_texture_float",
        "name": "TextureFloat"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Linear filtering of floating point textures, OES_texture_float_linear",
        "name": "TextureFloatLinear"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "16-bit floating point textures, OES_texture_half_float",
        "name": "TextureHalfFloat"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Linear filtering of 16-bit floating point textures, OES_texture_half_float_linear",
        "name": "TextureHalfFloatLinear"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Enabled dFdx/dFdy/fwidth in fragment shaders, OES_standard_derivatives",
        "name": "StandardDerivatives"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Anisotropic filtering of textures, EXT_texture_filter_anisotropic",
        "name": "TextureFilterAnisotropic"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Depth textures, WEBGL_depth_texture",
        "name": "DepthTexture"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "32-bit index buffers, OES_element_index_uint",
        "name": "ElementIndexUInt"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Instanced arrays, ANGLE_instanced_arrays",
        "name": "InstancedArrays"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "BlendMinmax, EXT_blend_minmax",
        "name": "BlendMinmax"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "FragDepth, EXT_frag_depth",
        "name": "FragDepth"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "ShaderTextureLod, EXT_shader_texture_lod",
        "name": "ShaderTextureLod"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "VertexArrayObject, OES_vertex_array_object",
        "name": "VertexArrayObject"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Multiple rendertargets, WEBGL_draw_buffers",
        "name": "DrawBuffers"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Maximum 2D texture size",
        "name": "maxTexureSize"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Maximum cubemap size",
        "name": "maxCubemapSize"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Maximum renderbuffer size",
        "name": "maxRenderbufferSize"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "Maximum viewport size [x, y]",
        "name": "maxViewPortDims"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Maximum vertex shader texture units",
        "name": "maxVertexTextureUnits"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Maximum fragment shader texture units",
        "name": "maxFragmentTextureUnits"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Maximum total texture units",
        "name": "maxCombinedTextureUnits"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Maximum vertex attributes",
        "name": "maxVertexAttributes"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Maximum vertex uniform vectors",
        "name": "maxVertexUniformVectors"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Maximum fragment uniform vectors",
        "name": "maxFragmentUniformVectors"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Maximum varying vectors",
        "name": "maxVaryingVectors"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Point size min/max [min, max]",
        "name": "aliasedPointSizeRange"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Line width min/max [min, max]",
        "name": "aliasedLineWidthRange"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Antialiasing sample size",
        "name": "samples"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Sample buffer count",
        "name": "sampleBuffers"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Depth bits",
        "name": "depthBits"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Stencil bits",
        "name": "stencilBits"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Sub-pixel bits",
        "name": "subpixelBits"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Supported extension as an array",
        "name": "supportedExtensionsList"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Renderer name",
        "name": "renderer"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Vendor name",
        "name": "vendor"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Version string",
        "name": "version"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Shadinglanguage version string",
        "name": "shadingLanguageVersion"
      }
    ],
    "meta": {
      "lineno": 46,
      "filename": "Capabilities.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1842
  },
  {
    "id": "<anonymous>~DirectionalLight",
    "longname": "<anonymous>~DirectionalLight",
    "name": "DirectionalLight",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Light"
    ],
    "description": "A directional light",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/renderer/light/Lights-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 17,
      "filename": "DirectionalLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1846
  },
  {
    "id": "<anonymous>~Light",
    "longname": "<anonymous>~Light",
    "name": "Light",
    "scope": "inner",
    "kind": "class",
    "description": "A plain light source in the scene, to be handled by shaders<br>",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/renderer/light/Lights-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 14,
      "filename": "Light.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1850
  },
  {
    "id": "<anonymous>~PointLight",
    "longname": "<anonymous>~PointLight",
    "name": "PointLight",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Light"
    ],
    "description": "A omni-directional source of light. So far it has the same effect as {@link Light}<br>",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/renderer/light/Lights-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 15,
      "filename": "PointLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1859
  },
  {
    "id": "<anonymous>~SpotLight",
    "longname": "<anonymous>~SpotLight",
    "name": "SpotLight",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Light"
    ],
    "description": "The SpotLight can be viewed as two cones with their apexes located at the light's location.\nThe properties angle sets the angle (in degrees) for which the outer cone\ndeviates from the light's direction. The exponent property sets the angle for the inner cone.\nThe angle property is also known as the outer angle or falloff. The exponent property is also known as\nthe inner angle or hotspot.",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/renderer/light/Lights-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 21,
      "filename": "SpotLight.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/light"
    },
    "order": 1863
  },
  {
    "id": "<anonymous>~Material",
    "longname": "<anonymous>~Material",
    "name": "Material",
    "scope": "inner",
    "kind": "class",
    "description": "A Material defines the look of an object",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "Material.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1871
  },
  {
    "id": "<anonymous>~MeshData",
    "longname": "<anonymous>~MeshData",
    "name": "MeshData",
    "scope": "inner",
    "kind": "class",
    "description": "Stores all buffers for geometric data and similar attributes",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 30,
      "filename": "MeshData.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1895
  },
  {
    "id": "<anonymous>~Composer",
    "longname": "<anonymous>~Composer",
    "name": "Composer",
    "scope": "inner",
    "kind": "class",
    "description": "Post processing handler",
    "memberof": "<anonymous>",
    "properties": [
      {
        "type": {
          "names": [
            "RenderTarget"
          ]
        },
        "description": "Data to wrap",
        "name": "renderTarget"
      }
    ],
    "meta": {
      "lineno": 20,
      "filename": "Composer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/pass"
    },
    "order": 1924
  },
  {
    "id": "<anonymous>~FullscreenPass",
    "longname": "<anonymous>~FullscreenPass",
    "name": "FullscreenPass",
    "scope": "inner",
    "kind": "class",
    "description": "Fullscreen pass",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 19,
      "filename": "FullscreenPass.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/pass"
    },
    "order": 1928
  },
  {
    "id": "<anonymous>~FullscreenUtils",
    "longname": "<anonymous>~FullscreenUtils",
    "name": "FullscreenUtils",
    "scope": "inner",
    "kind": "class",
    "description": "Utility class with a default setup parallel camera and fullscreen quad for fullscreen pass usage",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "FullscreenUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/pass"
    },
    "order": 1930
  },
  {
    "id": "<anonymous>~Pass",
    "longname": "<anonymous>~Pass",
    "name": "Pass",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 8,
      "filename": "Pass.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/pass"
    },
    "order": 1931
  },
  {
    "id": "<anonymous>~RenderPass",
    "longname": "<anonymous>~RenderPass",
    "name": "RenderPass",
    "scope": "inner",
    "kind": "class",
    "description": "A pass that renders provided renderlist to the rendertarget or screen",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "RenderPass.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/pass"
    },
    "order": 1933
  },
  {
    "id": "<anonymous>~RenderTarget",
    "longname": "<anonymous>~RenderTarget",
    "name": "RenderTarget",
    "scope": "inner",
    "kind": "class",
    "description": "Creates a new RenderTarget object\n\nPost processing handler",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 19,
      "filename": "RenderTarget.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/pass"
    },
    "order": 1934
  },
  {
    "id": "<anonymous>~Renderer",
    "longname": "<anonymous>~Renderer",
    "name": "Renderer",
    "scope": "inner",
    "kind": "class",
    "description": "The renderer handles displaying of graphics data to a render context.\nIt accepts an object containing the settings for the renderer.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 64,
      "filename": "Renderer.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 1938
  },
  {
    "id": "<anonymous>~RendererRecord",
    "longname": "<anonymous>~RendererRecord",
    "name": "RendererRecord",
    "scope": "inner",
    "kind": "class",
    "description": "Holds the renderer's state",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 11,
      "filename": "RendererRecord.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2010
  },
  {
    "id": "<anonymous>~RendererUtils",
    "longname": "<anonymous>~RendererUtils",
    "name": "RendererUtils",
    "scope": "inner",
    "kind": "class",
    "description": "Renderer-related utilities",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "RendererUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2011
  },
  {
    "id": "<anonymous>~RenderInfo",
    "longname": "<anonymous>~RenderInfo",
    "name": "RenderInfo",
    "scope": "inner",
    "kind": "class",
    "description": "Holds configuration data for renderable objects.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "RenderInfo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2017
  },
  {
    "id": "<anonymous>~RenderQueue",
    "longname": "<anonymous>~RenderQueue",
    "name": "RenderQueue",
    "scope": "inner",
    "kind": "class",
    "description": "The RenderQueue handles sorting of entities. Entities are ordered by their renderQueue value into buckets.\nEntities within the opaque buckets are sorted front to back and entities within the transparent buckets are sorted\nback to front.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 10,
      "filename": "RenderQueue.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2020
  },
  {
    "id": "<anonymous>~RenderStats",
    "longname": "<anonymous>~RenderStats",
    "name": "RenderStats",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 7,
      "filename": "RenderStats.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2026
  },
  {
    "id": "<anonymous>~Shader",
    "longname": "<anonymous>~Shader",
    "name": "Shader",
    "scope": "inner",
    "kind": "class",
    "description": "Defines vertex and fragment shader and uniforms to shader callbacks",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 40,
      "filename": "Shader.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2027
  },
  {
    "id": "<anonymous>~ShaderCall",
    "longname": "<anonymous>~ShaderCall",
    "name": "ShaderCall",
    "scope": "inner",
    "kind": "class",
    "description": "Makes sure shader calls are not done when already set",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 10,
      "filename": "ShaderCall.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2039
  },
  {
    "id": "<anonymous>~ShaderBuilder",
    "longname": "<anonymous>~ShaderBuilder",
    "name": "ShaderBuilder",
    "scope": "inner",
    "kind": "class",
    "description": "Builds shaders",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 26,
      "filename": "ShaderBuilder.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/shaders"
    },
    "order": 2040
  },
  {
    "id": "<anonymous>~ShaderFragment",
    "longname": "<anonymous>~ShaderFragment",
    "name": "ShaderFragment",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 10,
      "filename": "ShaderFragment.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/shaders"
    },
    "order": 2041
  },
  {
    "id": "<anonymous>~ShaderLib",
    "longname": "<anonymous>~ShaderLib",
    "name": "ShaderLib",
    "scope": "inner",
    "kind": "class",
    "description": "Collection of useful shaders<br>\nDetails of each can be printed like this for example: console.log(ShaderLib.texturedLit).<br>\nThere are more special purpose shaders in {@link ShaderLibExtra}",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 20,
      "filename": "ShaderLib.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/shaders"
    },
    "order": 2043
  },
  {
    "id": "<anonymous>~ShadowHandler",
    "longname": "<anonymous>~ShadowHandler",
    "name": "ShadowHandler",
    "scope": "inner",
    "kind": "class",
    "description": "Handles shadow techniques",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 32,
      "filename": "ShadowHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer/shadow"
    },
    "order": 2045
  },
  {
    "id": "<anonymous>~SimplePartitioner",
    "longname": "<anonymous>~SimplePartitioner",
    "name": "SimplePartitioner",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 10,
      "filename": "SimplePartitioner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2046
  },
  {
    "id": "<anonymous>~TaskScheduler",
    "longname": "<anonymous>~TaskScheduler",
    "name": "TaskScheduler",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 25,
      "filename": "TaskScheduler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2048
  },
  {
    "id": "<anonymous>~Texture",
    "longname": "<anonymous>~Texture",
    "name": "Texture",
    "scope": "inner",
    "kind": "class",
    "description": "<code>Texture</code> defines a texture object to be used to display an image on a piece of geometry. The image to be displayed is\n       defined by the <code>Image</code> class. All attributes required for texture mapping are contained within this class. This includes\n       mipmapping if desired, magnificationFilter options, apply options and correction options. Default values are as follows:\n       minificationFilter - NearestNeighborNoMipMaps, magnificationFilter - NearestNeighbor, wrap - EdgeClamp on S, T and R, apply - Modulate,\n       environment - None.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 73,
      "filename": "Texture.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2049
  },
  {
    "id": "<anonymous>~TextureCreator",
    "longname": "<anonymous>~TextureCreator",
    "name": "TextureCreator",
    "scope": "inner",
    "kind": "class",
    "description": "Takes away the pain of creating textures of various sorts.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 27,
      "filename": "TextureCreator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/renderer"
    },
    "order": 2059
  },
  {
    "id": "<anonymous>~AxisAlignedCamControlScript",
    "longname": "<anonymous>~AxisAlignedCamControlScript",
    "name": "AxisAlignedCamControlScript",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "AxisAlignedCamControlScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2066
  },
  {
    "id": "<anonymous>~BasicControlScript",
    "longname": "<anonymous>~BasicControlScript",
    "name": "BasicControlScript",
    "scope": "inner",
    "kind": "class",
    "description": "Make an entity controllable via mouse and keyboard. WASD keys move the entity towards the back, left,\nfront and right respectively. Shift causes speed to drop to a tenth. R and F move it up or down. Q and E roll it\ntowards the left or right. The arrow keys cause the entity to rotate, as does dragging with the mouse.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "BasicControlScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2068
  },
  {
    "id": "<anonymous>~ButtonScript",
    "longname": "<anonymous>~ButtonScript",
    "name": "ButtonScript",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 20,
      "filename": "ButtonScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2072
  },
  {
    "id": "<anonymous>~HeightMapBoundingScript",
    "longname": "<anonymous>~HeightMapBoundingScript",
    "name": "HeightMapBoundingScript",
    "scope": "inner",
    "kind": "class",
    "description": "Handles the height data for a heightmap and\nprovides functions for getting elevation at given coordinates.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 14,
      "filename": "HeightMapBoundingScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2096
  },
  {
    "id": "<anonymous>~LensFlareScript",
    "longname": "<anonymous>~LensFlareScript",
    "name": "LensFlareScript",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 22,
      "filename": "LensFlareScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2099
  },
  {
    "id": "<anonymous>~PolyBoundingScript",
    "longname": "<anonymous>~PolyBoundingScript",
    "name": "PolyBoundingScript",
    "scope": "inner",
    "kind": "class",
    "description": "Checks for collisions against a set of `collidables` and repositions the host object accordingly.\nThis script uses the PolyK library which is not part of the engine; make sure you add it manually.<br>",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/addons/PolyBoundingScript/PolyBoundingScript-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 14,
      "filename": "PolyBoundingScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2101
  },
  {
    "id": "<anonymous>~ScriptComponentHandler",
    "longname": "<anonymous>~ScriptComponentHandler",
    "name": "ScriptComponentHandler",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 28,
      "filename": "ScriptComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2107
  },
  {
    "id": "<anonymous>~SparseHeightMapBoundingScript",
    "longname": "<anonymous>~SparseHeightMapBoundingScript",
    "name": "SparseHeightMapBoundingScript",
    "scope": "inner",
    "kind": "class",
    "description": "Bounds the host entity to a height map computed from a set of terrain points",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 9,
      "filename": "SparseHeightMapBoundingScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2131
  },
  {
    "id": "<anonymous>~Box",
    "longname": "<anonymous>~Box",
    "name": "Box",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "An axis-aligned rectangular prism defined by a center point and x-, y- and z-extents (radii)\nfrom that center (a box).",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 22,
      "filename": "Box.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2144
  },
  {
    "id": "<anonymous>~Cone",
    "longname": "<anonymous>~Cone",
    "name": "Cone",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "Cone mesh data",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/shapes/Cone/Cone-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 19,
      "filename": "Cone.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2155
  },
  {
    "id": "<anonymous>~Cylinder",
    "longname": "<anonymous>~Cylinder",
    "name": "Cylinder",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "A 3D object representing a cylinder.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 21,
      "filename": "Cylinder.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2159
  },
  {
    "id": "<anonymous>~Disk",
    "longname": "<anonymous>~Disk",
    "name": "Disk",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "A disk shape",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/shapes/Disk/Disk-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 19,
      "filename": "Disk.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2163
  },
  {
    "id": "<anonymous>~Grid",
    "longname": "<anonymous>~Grid",
    "name": "Grid",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "MeshData for a Grid.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 20,
      "filename": "Grid.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2167
  },
  {
    "id": "<anonymous>~Quad",
    "longname": "<anonymous>~Quad",
    "name": "Quad",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "A rectangular, two dimensional shape. The local height of the Quad defines it's size about the y-axis,\nwhile the width defines the x-axis. The z-axis will always be 0.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 20,
      "filename": "Quad.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2170
  },
  {
    "id": "<anonymous>~SimpleBox",
    "longname": "<anonymous>~SimpleBox",
    "name": "SimpleBox",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "An axis-aligned rectangular prism defined by a center point and x-, y- and z-extents (radii) from that center.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "SimpleBox.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2178
  },
  {
    "id": "<anonymous>~Sphere",
    "longname": "<anonymous>~Sphere",
    "name": "Sphere",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "A 3D object with all points equi-distance from a center point.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 23,
      "filename": "Sphere.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2182
  },
  {
    "id": "<anonymous>~TextureGrid",
    "longname": "<anonymous>~TextureGrid",
    "name": "TextureGrid",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "Meshdata for a grid; useful for displaying tiles",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 17,
      "filename": "TextureGrid.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2192
  },
  {
    "id": "<anonymous>~Torus",
    "longname": "<anonymous>~Torus",
    "name": "Torus",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "MeshData"
    ],
    "description": "A donut-shaped model.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 23,
      "filename": "Torus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/shapes"
    },
    "order": 2196
  },
  {
    "id": "<anonymous>~Sound",
    "longname": "<anonymous>~Sound",
    "name": "Sound",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 18,
      "filename": "Sound.js",
      "path": "/Users/schteppe/git/goojs/src/goo/sound"
    },
    "order": 2202
  },
  {
    "id": "<anonymous>~EventChannel",
    "longname": "<anonymous>~EventChannel",
    "name": "EventChannel",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 11,
      "filename": "EventChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2219
  },
  {
    "id": "<anonymous>~TimelineComponent",
    "longname": "<anonymous>~TimelineComponent",
    "name": "TimelineComponent",
    "scope": "inner",
    "kind": "class",
    "description": "Timeline component",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/timelinepack/TimelineComponent/TimelineComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 13,
      "filename": "TimelineComponent.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2223
  },
  {
    "id": "<anonymous>~TimelineComponentHandler",
    "longname": "<anonymous>~TimelineComponentHandler",
    "name": "TimelineComponentHandler",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 26,
      "filename": "TimelineComponentHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2232
  },
  {
    "id": "<anonymous>~TimelineSystem",
    "longname": "<anonymous>~TimelineSystem",
    "name": "TimelineSystem",
    "scope": "inner",
    "kind": "class",
    "description": "Manages entities with a TimelineComponent",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/timelinepack/TimelineComponent/TimelineComponent-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 15,
      "filename": "TimelineSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2233
  },
  {
    "id": "<anonymous>~ValueChannel",
    "longname": "<anonymous>~ValueChannel",
    "name": "ValueChannel",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 13,
      "filename": "ValueChannel.js",
      "path": "/Users/schteppe/git/goojs/src/goo/timelinepack"
    },
    "order": 2238
  },
  {
    "id": "<anonymous>~Ajax",
    "longname": "<anonymous>~Ajax",
    "name": "Ajax",
    "scope": "inner",
    "kind": "class",
    "description": "Ajax helper class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 22,
      "filename": "Ajax.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2241
  },
  {
    "id": "<anonymous>~ArrayUtils",
    "longname": "<anonymous>~ArrayUtils",
    "name": "ArrayUtils",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 8,
      "filename": "ArrayUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2248
  },
  {
    "id": "<anonymous>~CanvasUtils",
    "longname": "<anonymous>~CanvasUtils",
    "name": "CanvasUtils",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "CanvasUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2254
  },
  {
    "id": "<anonymous>~AtlasNode",
    "longname": "<anonymous>~AtlasNode",
    "name": "AtlasNode",
    "scope": "inner",
    "kind": "class",
    "description": "Atlas node",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 15,
      "filename": "AtlasNode.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/combine"
    },
    "order": 2260
  },
  {
    "id": "<anonymous>~EntityCombiner",
    "longname": "<anonymous>~EntityCombiner",
    "name": "EntityCombiner",
    "scope": "inner",
    "kind": "class",
    "description": "Runs a mesh combine optimization on the whole scene, based on\nmaterial, components etc",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 29,
      "filename": "EntityCombiner.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/combine"
    },
    "order": 2262
  },
  {
    "id": "<anonymous>~EventTarget",
    "longname": "<anonymous>~EventTarget",
    "name": "EventTarget",
    "scope": "inner",
    "kind": "class",
    "description": "EventTarget is implemented by objects that can receive events and may have listeners for them.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 13,
      "filename": "EventTarget.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2267
  },
  {
    "id": "<anonymous>~GameUtils",
    "longname": "<anonymous>~GameUtils",
    "name": "GameUtils",
    "scope": "inner",
    "kind": "class",
    "description": "Shims for standard gaming features\nOnly used to define the class. Should never be instantiated.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 11,
      "filename": "GameUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2272
  },
  {
    "id": "<anonymous>~Gizmo",
    "longname": "<anonymous>~Gizmo",
    "name": "Gizmo",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 35,
      "filename": "Gizmo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/gizmopack"
    },
    "order": 2286
  },
  {
    "id": "<anonymous>~GizmoRenderSystem",
    "longname": "<anonymous>~GizmoRenderSystem",
    "name": "GizmoRenderSystem",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "System"
    ],
    "description": "Renders transform gizmos<br>",
    "memberof": "<anonymous>",
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Only render if set to true",
        "name": "doRender"
      }
    ],
    "customTags": [
      {
        "tag": "example-link",
        "value": "http://code.gooengine.com/latest/visual-test/goo/util/TransformGizmos/TransformGizmos-vtest.html Working example"
      }
    ],
    "meta": {
      "lineno": 47,
      "filename": "GizmoRenderSystem.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/gizmopack"
    },
    "order": 2291
  },
  {
    "id": "<anonymous>~GlobalRotationGizmo",
    "longname": "<anonymous>~GlobalRotationGizmo",
    "name": "GlobalRotationGizmo",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Gizmo"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 31,
      "filename": "GlobalRotationGizmo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/gizmopack"
    },
    "order": 2292
  },
  {
    "id": "<anonymous>~GlobalTranslationGizmo",
    "longname": "<anonymous>~GlobalTranslationGizmo",
    "name": "GlobalTranslationGizmo",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Gizmo"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 17,
      "filename": "GlobalTranslationGizmo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/gizmopack"
    },
    "order": 2294
  },
  {
    "id": "<anonymous>~RotationGizmo",
    "longname": "<anonymous>~RotationGizmo",
    "name": "RotationGizmo",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Gizmo"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 29,
      "filename": "RotationGizmo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/gizmopack"
    },
    "order": 2295
  },
  {
    "id": "<anonymous>~ScaleGizmo",
    "longname": "<anonymous>~ScaleGizmo",
    "name": "ScaleGizmo",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Gizmo"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 29,
      "filename": "ScaleGizmo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/gizmopack"
    },
    "order": 2296
  },
  {
    "id": "<anonymous>~TranslationGizmo",
    "longname": "<anonymous>~TranslationGizmo",
    "name": "TranslationGizmo",
    "scope": "inner",
    "kind": "class",
    "augments": [
      "Gizmo"
    ],
    "memberof": "<anonymous>",
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 29,
      "filename": "TranslationGizmo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util/gizmopack"
    },
    "order": 2297
  },
  {
    "id": "<anonymous>~Logo",
    "longname": "<anonymous>~Logo",
    "name": "Logo",
    "scope": "inner",
    "kind": "class",
    "description": "Get logo svg in different formats\nOnly used to define the class. Should never be instantiated.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 10,
      "filename": "Logo.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2298
  },
  {
    "id": "<anonymous>~MeshBuilder",
    "longname": "<anonymous>~MeshBuilder",
    "name": "MeshBuilder",
    "scope": "inner",
    "kind": "class",
    "description": "Combines the MeshData of passed-in entities into one new MeshData. This can be useful to reduce draw calls.\nCombination is currently limited to 65536 vertices.\nKeep in mind that combined MeshData can only use one diffuse color texture, so this is best suited for MeshData that can share the same texture.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 38,
      "filename": "MeshBuilder.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2302
  },
  {
    "id": "<anonymous>~ObjectUtils",
    "longname": "<anonymous>~ObjectUtils",
    "name": "ObjectUtils",
    "scope": "inner",
    "kind": "class",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 7,
      "filename": "ObjectUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2307
  },
  {
    "id": "<anonymous>~ParticleSystemUtils",
    "longname": "<anonymous>~ParticleSystemUtils",
    "name": "ParticleSystemUtils",
    "scope": "inner",
    "kind": "class",
    "description": "Provides utility methods for particle systems",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 20,
      "filename": "ParticleSystemUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2322
  },
  {
    "id": "<anonymous>~PromiseUtils",
    "longname": "<anonymous>~PromiseUtils",
    "name": "PromiseUtils",
    "scope": "inner",
    "kind": "class",
    "description": "Provides promise-related utility methods",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 12,
      "filename": "PromiseUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2328
  },
  {
    "id": "<anonymous>~Rc4Random",
    "longname": "<anonymous>~Rc4Random",
    "name": "Rc4Random",
    "scope": "inner",
    "kind": "class",
    "description": "Rc4 random generator with seeding",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 10,
      "filename": "Rc4Random.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2336
  },
  {
    "id": "<anonymous>~ShapeCreatorMemoized",
    "longname": "<anonymous>~ShapeCreatorMemoized",
    "name": "ShapeCreatorMemoized",
    "scope": "inner",
    "kind": "class",
    "description": "Factory for shape creation.\nOnly used to define the class. Should never be instantiated.",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 27,
      "filename": "ShapeCreatorMemoized.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2337
  },
  {
    "id": "<anonymous>~SoundCreator",
    "longname": "<anonymous>~SoundCreator",
    "name": "SoundCreator",
    "scope": "inner",
    "kind": "class",
    "description": "Provides a simple way to load sounds",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 20,
      "filename": "SoundCreator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2342
  },
  {
    "id": "<anonymous>~Stats",
    "longname": "<anonymous>~Stats",
    "name": "Stats",
    "scope": "inner",
    "kind": "class",
    "description": "Shows render statistics",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 13,
      "filename": "Stats.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2345
  },
  {
    "id": "<anonymous>~StringUtils",
    "longname": "<anonymous>~StringUtils",
    "name": "StringUtils",
    "scope": "inner",
    "kind": "class",
    "description": "Provides string manipulation methods",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 9,
      "filename": "StringUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2346
  },
  {
    "id": "<anonymous>~TangentGenerator",
    "longname": "<anonymous>~TangentGenerator",
    "name": "TangentGenerator",
    "scope": "inner",
    "kind": "class",
    "description": "The TangentGenerator can generate and add a buffer with tangent information to a MeshData",
    "memberof": "<anonymous>",
    "meta": {
      "lineno": 16,
      "filename": "TangentGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/util"
    },
    "order": 2353
  },
  {
    "id": "<anonymous>~Debugger",
    "longname": "<anonymous>~Debugger",
    "name": "Debugger",
    "scope": "inner",
    "kind": "function",
    "description": "The debugger utility class adds a way to \"select\" entities and run a filtered serializer on them. It can also create a REPL and export the selected entity to global scope to aid in debugging with the browser's web console.",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "True if the debugger should create and update window.picked that points to the currently picked entity",
        "name": "exportPicked"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "True if the debugger should come with it's own REPL",
        "name": "maximumDeph"
      }
    ],
    "meta": {
      "lineno": 16,
      "filename": "Debugger.js",
      "path": "/Users/schteppe/git/goojs/src/goo/debugpack"
    },
    "order": 606
  },
  {
    "id": "<anonymous>~nullifyElement",
    "longname": "<anonymous>~nullifyElement",
    "name": "nullifyElement",
    "scope": "inner",
    "kind": "function",
    "description": "Sets element to null if it's present in the provided array",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "name": "array"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "name": "element"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 142,
      "filename": "Bus.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 626
  },
  {
    "id": "<anonymous>~cloneSkeletonPose",
    "longname": "<anonymous>~cloneSkeletonPose",
    "name": "cloneSkeletonPose",
    "scope": "inner",
    "kind": "function",
    "description": "Returns a clone of the given SkeletonPose. Also stores the cloned poses into settings, in order not to\nclone multiple instances of the same SkeletonPose.",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "SkeletonPose"
          ]
        },
        "name": "skeletonPose"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "settings"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 27,
      "filename": "EntityUtils.js",
      "path": "/Users/schteppe/git/goojs/src/goo/entities"
    },
    "order": 790
  },
  {
    "id": "<anonymous>~serializeCommand",
    "longname": "<anonymous>~serializeCommand",
    "name": "serializeCommand",
    "scope": "inner",
    "kind": "function",
    "description": "Serializes an svg path command",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "command"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 22,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 988
  },
  {
    "id": "<anonymous>~getPathPoints",
    "longname": "<anonymous>~getPathPoints",
    "name": "getPathPoints",
    "scope": "inner",
    "kind": "function",
    "description": "Computes a cloud of points from an svg path",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "serializedPath"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Lower values result in more detail",
        "name": "stepLength"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<{x: number, y: number}>"
          ]
        },
        "description": "Aa array of point-like objects"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 45,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 989
  },
  {
    "id": "<anonymous>~distance",
    "longname": "<anonymous>~distance",
    "name": "distance",
    "scope": "inner",
    "kind": "function",
    "description": "Computes the distance between 2 points",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "point1"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "point2"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 67,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 990
  },
  {
    "id": "<anonymous>~groupPoints",
    "longname": "<anonymous>~groupPoints",
    "name": "groupPoints",
    "scope": "inner",
    "kind": "function",
    "description": "Isolates separate polygons by the distance between points",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "Array.<{x: number, y: number}>"
          ]
        },
        "name": "points"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "stepLength"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Array.<{x: number, y: number}>>"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 78,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 991
  },
  {
    "id": "<anonymous>~simplifyPath",
    "longname": "<anonymous>~simplifyPath",
    "name": "simplifyPath",
    "scope": "inner",
    "kind": "function",
    "description": "Simplifies a polygon by collapsing collinear adjacent points",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "Array.<{x: number, y: number}>"
          ]
        },
        "name": "polygon"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<{x: number, y: number}>"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 109,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 992
  },
  {
    "id": "<anonymous>~getBoundingVolume",
    "longname": "<anonymous>~getBoundingVolume",
    "name": "getBoundingVolume",
    "scope": "inner",
    "kind": "function",
    "description": "Computes the 2D bounding box of a poygon",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "Array.<{x: number, y: number}>"
          ]
        },
        "name": "polygon"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 139,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 993
  },
  {
    "id": "<anonymous>~containsBox",
    "longname": "<anonymous>~containsBox",
    "name": "containsBox",
    "scope": "inner",
    "kind": "function",
    "description": "Checks whether a bounding box is contained within another bounding box",
    "memberof": "<anonymous>",
    "params": [
      {
        "name": "a"
      },
      {
        "name": "b"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 172,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 994
  },
  {
    "id": "<anonymous>~getHierarchy",
    "longname": "<anonymous>~getHierarchy",
    "name": "getHierarchy",
    "scope": "inner",
    "kind": "function",
    "description": "Groups polygons in contours with holes",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "Array.<{x: number, y: number}>"
          ]
        },
        "name": "polygons"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 190,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 995
  },
  {
    "id": "<anonymous>~addIndices",
    "longname": "<anonymous>~addIndices",
    "name": "addIndices",
    "scope": "inner",
    "kind": "function",
    "description": "Adds indices to the vertices of a polygon",
    "memberof": "<anonymous>",
    "params": [
      {
        "name": "polygons"
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 259,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 996
  },
  {
    "id": "<anonymous>~getIndices",
    "longname": "<anonymous>~getIndices",
    "name": "getIndices",
    "scope": "inner",
    "kind": "function",
    "description": "Extracts the indices of a triangulation computed by the triangulation library",
    "memberof": "<anonymous>",
    "params": [
      {
        "name": "triangles"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 275,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 997
  },
  {
    "id": "<anonymous>~getVerts",
    "longname": "<anonymous>~getVerts",
    "name": "getVerts",
    "scope": "inner",
    "kind": "function",
    "description": "Flattens an array of points defined as objects { x, y } into an array",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "Array.<{x: number, y: number}>"
          ]
        },
        "name": "points"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 293,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 998
  },
  {
    "id": "<anonymous>~triangulate",
    "longname": "<anonymous>~triangulate",
    "name": "triangulate",
    "scope": "inner",
    "kind": "function",
    "description": "Forwards a contour polygon with optional holes to the triangulation library and processes the results",
    "memberof": "<anonymous>",
    "params": [
      {
        "name": "contour"
      },
      {
        "name": "holes"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 311,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 999
  },
  {
    "id": "<anonymous>~dataForGlyph",
    "longname": "<anonymous>~dataForGlyph",
    "name": "dataForGlyph",
    "scope": "inner",
    "kind": "function",
    "description": "Constructs the vertex data, index data and extrusions for a glyph",
    "memberof": "<anonymous>",
    "params": [
      {
        "name": "glyph"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Disable to get evenly spaced tessellations on the edges",
        "name": "options.simplifyPaths"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 48,
        "name": "options.fontSize"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Lower values result in a more detailed mesh",
        "name": "options.stepLength"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 331,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 1000
  },
  {
    "id": "<anonymous>~meshesForText",
    "longname": "<anonymous>~meshesForText",
    "name": "meshesForText",
    "scope": "inner",
    "kind": "function",
    "description": "Builds meshes from a font",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "text"
      },
      {
        "name": "font"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 4,
        "description": "Extrusion amount",
        "name": "options.extrusion"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 48,
        "name": "options.fontSize"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "Lower values result in a more detailed mesh",
        "name": "options.stepLength"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<MeshData>"
          ]
        }
      }
    ],
    "customTags": [
      {
        "tag": "hidden"
      }
    ],
    "meta": {
      "lineno": 385,
      "filename": "TextMeshGenerator.js",
      "path": "/Users/schteppe/git/goojs/src/goo/geometrypack/text"
    },
    "order": 1001
  },
  {
    "id": "<anonymous>~BoundingBoxOcclusionChecker",
    "longname": "<anonymous>~BoundingBoxOcclusionChecker",
    "name": "BoundingBoxOcclusionChecker",
    "scope": "inner",
    "kind": "function",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "SoftwareRenderer"
          ]
        },
        "name": "renderer"
      }
    ],
    "meta": {
      "lineno": 76,
      "filename": "BoundingBoxOcclusionChecker.js",
      "path": "/Users/schteppe/git/goojs/src/goo/occlusionpack/scanline"
    },
    "order": 1660
  },
  {
    "id": "<anonymous>~Particle",
    "longname": "<anonymous>~Particle",
    "name": "Particle",
    "scope": "inner",
    "kind": "function",
    "description": "Data object tracking a single particle in a particle component",
    "memberof": "<anonymous>",
    "params": [],
    "meta": {
      "lineno": 21,
      "filename": "Particle.js",
      "path": "/Users/schteppe/git/goojs/src/goo/particles"
    },
    "order": 1715
  },
  {
    "id": "<anonymous>~GroundBoundMovementScript",
    "longname": "<anonymous>~GroundBoundMovementScript",
    "name": "GroundBoundMovementScript",
    "scope": "inner",
    "kind": "function",
    "description": "A script for handling basic movement and jumping over a terrain.\nThe standard usage of this script will likely also need some input listener and camera handling.",
    "memberof": "<anonymous>",
    "params": [],
    "meta": {
      "lineno": 25,
      "filename": "GroundBoundMovementScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2074
  },
  {
    "id": "<anonymous>~ScriptHandler",
    "longname": "<anonymous>~ScriptHandler",
    "name": "ScriptHandler",
    "scope": "inner",
    "kind": "function",
    "description": "* @private",
    "memberof": "<anonymous>",
    "params": [],
    "meta": {
      "lineno": 39,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2112
  },
  {
    "id": "<anonymous>~addReference",
    "longname": "<anonymous>~addReference",
    "name": "addReference",
    "scope": "inner",
    "kind": "function",
    "description": "Adds a reference pointing to the specified custom script into the specified\nscript element/node.",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "HTMLScriptElement"
          ]
        },
        "description": "The script element into which a reference is to be added.",
        "name": "scriptElement"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The identifier of the custom script whose reference is to be added.",
        "name": "scriptId"
      }
    ],
    "meta": {
      "lineno": 200,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2116
  },
  {
    "id": "<anonymous>~removeReference",
    "longname": "<anonymous>~removeReference",
    "name": "removeReference",
    "scope": "inner",
    "kind": "function",
    "description": "Removes a reference to the specified custom script from the specified\nscript element/node.",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "HTMLScriptElement"
          ]
        },
        "description": "The script element from which the reference is to be removed.",
        "name": "scriptElement"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The identifier of the custom script whose reference is to be removed.",
        "name": "scriptId"
      }
    ],
    "meta": {
      "lineno": 222,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2117
  },
  {
    "id": "<anonymous>~hasReferences",
    "longname": "<anonymous>~hasReferences",
    "name": "hasReferences",
    "scope": "inner",
    "kind": "function",
    "description": "Gets whether the specified script element/node has any references to\ncustom scripts.",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "HTMLScriptElement"
          ]
        },
        "description": "The script element which is to be checked for references.",
        "name": "scriptElement"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 239,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2118
  },
  {
    "id": "<anonymous>~hasReferenceTo",
    "longname": "<anonymous>~hasReferenceTo",
    "name": "hasReferenceTo",
    "scope": "inner",
    "kind": "function",
    "description": "Gets whether the specified script element has a reference to the specified\ncustom script.",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "HTMLScriptElement"
          ]
        },
        "description": "The script element/node which is to be checked.",
        "name": "scriptElement"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The identifier of the custom script which is to be checked.",
        "name": "scriptId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 255,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2119
  },
  {
    "id": "<anonymous>~getReferringDependencies",
    "longname": "<anonymous>~getReferringDependencies",
    "name": "getReferringDependencies",
    "scope": "inner",
    "kind": "function",
    "description": "Gets all the script elements that refer to the specified custom script.",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The identifier of the custom script whose dependencies are to be\n\t\treturned.",
        "name": "scriptId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<HTMLScriptElement>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 269,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2120
  },
  {
    "id": "<anonymous>~isEngineScript",
    "longname": "<anonymous>~isEngineScript",
    "name": "isEngineScript",
    "scope": "inner",
    "kind": "function",
    "description": "Gets whether the specified configuration object refers to a built-in\nengine script (i.e. not a custom script).",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The configuration object which is to be checked.",
        "name": "config"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 455,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2123
  },
  {
    "id": "<anonymous>~isCustomScript",
    "longname": "<anonymous>~isCustomScript",
    "name": "isCustomScript",
    "scope": "inner",
    "kind": "function",
    "description": "Gets whether the specified configuration object refers to a custom script\nscript (i.e. not a built-in engine script).",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The configuration object which is to be checked.",
        "name": "config"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 468,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2124
  },
  {
    "id": "<anonymous>~removeDeadScriptElements",
    "longname": "<anonymous>~removeDeadScriptElements",
    "name": "removeDeadScriptElements",
    "scope": "inner",
    "kind": "function",
    "description": "Removes all the script HTML elements that are not needed by any script\nanymore (i.e. have no references to scripts).",
    "memberof": "<anonymous>",
    "params": [],
    "meta": {
      "lineno": 476,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2125
  },
  {
    "id": "<anonymous>~loadExternalScript",
    "longname": "<anonymous>~loadExternalScript",
    "name": "loadExternalScript",
    "scope": "inner",
    "kind": "function",
    "description": "Load an external script",
    "memberof": "<anonymous>",
    "params": [],
    "meta": {
      "lineno": 576,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2127
  },
  {
    "id": "<anonymous>~setError",
    "longname": "<anonymous>~setError",
    "name": "setError",
    "scope": "inner",
    "kind": "function",
    "description": "Flag a script with an error. The script will be disabled.",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "script"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "error"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "error.message"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "name": "error.line"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "error.file"
      }
    ],
    "meta": {
      "lineno": 742,
      "filename": "ScriptHandler.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2130
  },
  {
    "id": "<anonymous>~WorldFittedTerrainScript",
    "longname": "<anonymous>~WorldFittedTerrainScript",
    "name": "WorldFittedTerrainScript",
    "scope": "inner",
    "kind": "function",
    "description": "Creates and exposes a square heightmap terrain fitted within given world dimensions.\nThis does not do any visualizing of the heightMap. That needs to be done elsewhere.",
    "memberof": "<anonymous>",
    "params": [],
    "meta": {
      "lineno": 57,
      "filename": "WorldFittedTerrainScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scriptpack"
    },
    "order": 2134
  },
  {
    "id": "<anonymous>~setup",
    "longname": "<anonymous>~setup",
    "name": "setup",
    "scope": "inner",
    "kind": "function",
    "memberof": "<anonymous>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "args"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "When current entity is the camera in use",
        "name": "args.whenUsed"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Can be 'Any', 'Left', 'Middle', 'Right', 'None'. None disables dragging",
        "name": "args.dragButton"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "args.orbitSpeed"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "args.zoomSpeed"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "The inertia",
        "name": "args.drag"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "args.smoothness"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "args.minZoomDistance"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "args.maxZoomDistance"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "in degrees",
        "name": "args.minAscent"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "in degrees",
        "name": "args.maxAscent"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "in degrees",
        "name": "args.minAzimuth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "in degress",
        "name": "args.maxAzimuth"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "If true, min and max azimuth are used.",
        "name": "args.clampAzimuth"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "distance to the lookatpoint",
        "name": "args.lookAtDistance"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "the point in space to look",
        "name": "args.lookAtPoint"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "The start position of the camera in [radius, azimuth, ascent] form, where 0 azimuth looks to -X",
        "name": "args.spherical"
      }
    ],
    "deprecated": true,
    "meta": {
      "lineno": 40,
      "filename": "OrbitCamControlScript.js",
      "path": "/Users/schteppe/git/goojs/src/goo/scripts"
    },
    "order": 2141
  }
]
