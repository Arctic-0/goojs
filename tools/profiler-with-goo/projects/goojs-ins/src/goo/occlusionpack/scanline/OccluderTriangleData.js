define([], function () {
    'use strict';
    __touch(13546);
    function OccluderTriangleData(parameters) {
        var vertCount = parameters.vertCount;
        __touch(13552);
        var indexCount = parameters.indexCount;
        __touch(13553);
        var triangleCount = indexCount / 3;
        __touch(13554);
        var originalCount = vertCount * 4;
        __touch(13555);
        var compensatedPositionCount = originalCount + triangleCount * 8;
        __touch(13556);
        var compensatedIndexCount = indexCount * 2;
        __touch(13557);
        this.posCount = 0;
        __touch(13558);
        this.largestIndex = -1;
        __touch(13559);
        this.indexCount = 0;
        __touch(13560);
        var vertBytes = compensatedPositionCount * Float32Array.BYTES_PER_ELEMENT;
        __touch(13561);
        var indexBytes = compensatedIndexCount * Uint8Array.BYTES_PER_ELEMENT;
        __touch(13562);
        this._dataBuffer = new ArrayBuffer(vertBytes + indexBytes);
        __touch(13563);
        this.positions = new Float32Array(this._dataBuffer, 0, compensatedPositionCount);
        __touch(13564);
        this.indices = new Uint8Array(this._dataBuffer, vertBytes, compensatedIndexCount);
        __touch(13565);
    }
    __touch(13547);
    OccluderTriangleData.prototype.addVertex = function (array) {
        var writeIndex = this.posCount;
        __touch(13566);
        this.positions[writeIndex] = array[0];
        __touch(13567);
        writeIndex++;
        __touch(13568);
        this.positions[writeIndex] = array[1];
        __touch(13569);
        writeIndex++;
        __touch(13570);
        this.positions[writeIndex] = array[2];
        __touch(13571);
        writeIndex++;
        __touch(13572);
        this.positions[writeIndex] = array[3];
        __touch(13573);
        writeIndex++;
        __touch(13574);
        this.posCount = writeIndex;
        __touch(13575);
        this.largestIndex++;
        __touch(13576);
        return this.largestIndex;
        __touch(13577);
    };
    __touch(13548);
    OccluderTriangleData.prototype.setCountersToNewEntity = function (positionCount) {
        this.indexCount = 0;
        __touch(13578);
        var vertCount = positionCount / 3;
        __touch(13579);
        this.posCount = vertCount * 4;
        __touch(13580);
        this.largestIndex = vertCount - 1;
        __touch(13581);
    };
    __touch(13549);
    OccluderTriangleData.prototype.addIndices = function (triangleIndices) {
        var writeIndex = this.indexCount;
        __touch(13582);
        this.indices[writeIndex] = triangleIndices[0];
        __touch(13583);
        writeIndex++;
        __touch(13584);
        this.indices[writeIndex] = triangleIndices[1];
        __touch(13585);
        writeIndex++;
        __touch(13586);
        this.indices[writeIndex] = triangleIndices[2];
        __touch(13587);
        writeIndex++;
        __touch(13588);
        this.indexCount = writeIndex;
        __touch(13589);
    };
    __touch(13550);
    return OccluderTriangleData;
    __touch(13551);
});
__touch(13545);