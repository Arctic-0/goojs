// Generated by CoffeeScript 1.6.2
define(['goo/util/rsvp', 'goo/util/PromiseUtil'], function(RSVP, pu) {
  var ComponentHandler;

  return ComponentHandler = (function() {
    function ComponentHandler(world, getConfig, updateObject, options) {
      this.world = world;
      this.getConfig = getConfig;
      this.updateObject = updateObject;
      this.options = options;
    }

    ComponentHandler.prototype._prepare = function(config) {};

    ComponentHandler.prototype._create = function(entity, config) {
      throw new Error("ComponentHandler._create is abstract, use ComponentHandler.getHandler(type)");
    };

    ComponentHandler.prototype.update = function(entity, config) {
      var object;

      this._prepare(config);
      object = entity != null ? entity["" + this.constructor._type + "Component"] : void 0;
      if (!object) {
        object = this._create(entity, config);
      } else {

      }
      return object;
    };

    ComponentHandler.prototype.remove = function(entity) {
      return entity != null ? entity.clearComponent("" + this.constructor._type + "Component") : void 0;
    };

    ComponentHandler.handlerClasses = {};

    ComponentHandler.getHandler = function(type) {
      var _ref;

      return (_ref = this.handlerClasses) != null ? _ref[type] : void 0;
    };

    ComponentHandler._register = function(type) {
      this._type = type;
      return ComponentHandler.handlerClasses[type] = this;
    };

    return ComponentHandler;

  })();
});
