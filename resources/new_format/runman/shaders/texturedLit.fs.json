"precision mediump float;\nuniform sampler2D diffuseMap;\nuniform vec4 materialAmbient;\nuniform vec4 materialDiffuse;\nuniform vec4 materialSpecular;\nuniform float materialSpecularPower;\nvarying vec3 normal;\nvarying vec3 lightDir;\nvarying vec3 eyeVec;\nvarying vec2 texCoord0;\nvoid main(void)\n{\n\tvec4 texCol = texture2D(diffuseMap, texCoord0);\n\tvec4 final_color = materialAmbient;\n\tvec3 N = normalize(normal);\n\tvec3 L = normalize(lightDir);\n\tfloat lambertTerm = dot(N,L)*0.75+0.25;\n\tif(lambertTerm > 0.0)\n\t{\n\t\tfinal_color += materialDiffuse * // gl_LightSource[0].diffuse * \n\t\t\tlambertTerm;\n\t\tvec3 E = normalize(eyeVec);\n\t\tvec3 R = reflect(-L, N);\n\t\tfloat specular = pow( clamp(dot(R, E), 0.0, 1.0), materialSpecularPower);\n\t\tfinal_color += materialSpecular * // gl_LightSource[0].specular * \n\t\t\tspecular;\n\t}\n\tgl_FragColor = vec4(texCol.rgb * final_color.rgb, texCol.a);\n}"