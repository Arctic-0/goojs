\v0.10.6 --- 2014-06-23
======================

Fixes:
 * not being able to hide HtmlComponents that were not synced with the TransformComponent

Deprecated:
 - EntityUtils.hide/show; use entity.hide/show instead
 - entity.hidden is no longer exposed; use entity.isHidden and entity.isVisiblyHidden instead

v0.10.5 --- 2014-06-17
======================

Additions:
 + support for touchstart, touchmove and touchend on GooRunner

Fixes:
 * better parameter validation for scripts
 * picking of entities with an HTML component
 * textComponent visual-test not displaying anything

v0.10.3 --- 2014-06-05
======================

Breaking changes:
 * transparency map now uses alpha value

v0.10.2 --- 2014-06-05
======================

Fixes:
 * bugfix in Renderer.prototype._deallocateRenderTarget

Breaking changes:
 * all addons are now split in packs:
     goo/addons/p2/* -> goo/addons/p2pack/*
     goo/addons/box2d/* -> goo/addons/box2dpack/*
     goo/addons/terrain/* -> goo/addons/terrainpack/*
     goo/addons/cannon/* -> goo/addons/cannonpack/*
     goo/addons/howler/* -> goo/addons/howlerpack/*
     goo/addons/water/* -> goo/addons/waterpack/*
     goo/addons/ammo/* -> goo/addons/ammopack/*
     goo/addons/soundmanager2/* -> goo/addons/soundmanage2pack/*
     goo/addons/gamepad/* -> goo/addons/gamepadpack/*
 * the animation module has been extracted in its own pack:
     Any files which used to be under goo/animation have been relocated to goo/animationpack along with any animation-related handlers.
     To be able to load animations using the dynamic loader you need to require any animation-related handlers (SkeletonHandler, AnimationComponentHandler, AnimationStateHandler, AnimationLayersHandler, AnimationClipHandler) - all of them will register themselves with the dynamic loader.
     Also, the animation system is not pre-included in the world - it will need to be added manually (world.setSystem(new AnimationSystem())) for projects that contain animations.
 * the passes have been extracted in their own pack:
      goo/passpack contains the former goo/renderer/pass/PassLib along with pass-related shaders which used to be in goo/renderer/shaders/ShaderLib, any post-effect related passes (Bloom, Blur, Depth, DOF, DOG, MotionBlur, Nes, SSAO) and the PosteffectsHandler. To be able to load posteffects using the dynamic loader you need to require the PosteffectsHandler (which will register itself).
 * the transform gizmos have been relocated to their own pack, under goo/util/gizmopack

v0.10.1 --- 2014-05-27
======================

Fixes:
 * animations can have timescale and loopcount 0
 * fixed .preloadTextures/.procompileShaders crashing on devices without support for the global 'performance'

v0.10.0 --- 2014-05-20
======================

Additions:
 + experimental way of clearing the engine using GooRunner.prototype.clear
 + examples are linked to from jsdocs
 + added Matrix4x4.prototype.getRotation
 + added AnimationLayer.prototype.setCurrentStateById
 + added AnimationLayer.prototype.getStateById
 + added AnimationLayer.prototype.getStateByName

Fixes:
 * AnimationLayer.prototype.setCurrentStateByName now gets the state by name and not id
 * fix in Quaternion.prototype.fromVectorToVector

Breaking changes:
 * all debug related classes are relocated in the debugpack (MarkerComponent, CameraDebug, LightDebug, MeshRendererDebug, SkeletonDebug, CameraDebugSystem, DebugRenderSystem, LightDebugSystem, MarkerSystem, BoundingVolumeMeshBuilder, DebugDrawHelper, Debugger, EntityCounter, FrustumViewer, LightPointer)
 * new wave scripts (src/goo/scripts/newwave) are relocated to the parent folder, replacing some of the older scripts. The old FPCamControlScript, FlyControlScript, OrbitCamControlScript, OrbitNPanControlScript, MouseLookControlScript and WASDControlScript are thus replaced with new style scripts and are not backwards-compatible.
 - EntityUtils.createTypicalEntity has been removed as scheduled; use world.createEntity instead
 - EntityUtils.traverse has been removed as scheduled; use entity.traverse instead
 - ShapeCreator has been removed as scheduled; use new Box/Sphere/Quad... instead

v.0.9.10 --- 2014-05-14
=======================

Additions:
 + added experimental .clear on GooRunner, World and SystemBus

Fixes:
 * fixed video looping bug
 * made sure projects loads even if sound decoding fails

v0.9.9 --- 2014-05-06
=====================

Additions:
 + added a way to preload textures to the GPU gradually, without freezing up the browser
 + added a way to precompile shaders gradually, without freezing up the browser
 + added World.prototype.processEntityChanges that only processes add/changed/removed entities and does not call the systems for an update

Fixes:
 * fixed a picking bug
 * fixed an infinite loop in the DynamicLoader
 * fixed several performance issues in the DynamicLoader

Changes:
 * Camera.prototype.getWorldCoordinates now uses the correct Y direction of screen coordinates

v0.9.8 --- 2014-04-24
=====================

Fixes:
 * SetRenderTargetAction, InFrustumAction fixes

v0.9.7 --- 2014-04-22
=====================

Fixes:
 * numerous tiny bugfixes

v0.9.6 --- 2014-04-15
=====================

Fixes:
 * Renamed file "CannonRigidBodyComponent.js" to "CannonRigidbodyComponent.js"
 * Grabbing the global window.Ammo object after it is loaded
 * Stop forcing aspect ratio when loading camera

v0.9.0 --- 2014-03-07
=====================

Additions:
 + added own sound system
 + added a lot of documentation
 + can get precise point of picking for shader-based picking in world coordinates
 + added SoundCreator, similar to TextureCreator to load sound files
 + added various new visual tests (Transform Gizmos, Sound, Picking, Ray, ...)
 + MeshRendererComponent takes an optional array materials as parameter
 + can now schedule callbacks to execute next frame from within a callback

Fixed:
 * various performance fixes
 * canvas resizing is stabilised if they have no style referring to dimensions

Changes:
 * major changes of the DynamicLoader API

Deprecated:
 - Material.createMaterial(); use new Material() instead


v0.8.0 --- 2014-02-10
=====================

Additions:
 + goo.js does not require that you use requirejs anymore; if requirejs is not detected when goo.js starts loading the it will automatically create a "goo" namespace and fill it with every class that the engine consists of
 + a new EntitySelection API
 + entities can now be tagged
 + entities can hold attributes
 + entity "selectors" based on id, name, system, components, tags and attributes

Changes:
 * goo.js is now split into a core goo.js (which is much smaller) and additional packs which provides extra functionality

Deprecated:
 - EntityUtils.traverse(); use entity.traverse() instead
 - EntityUtils.getChildren(); use entity.children.toArray() instead


v0.7.0 --- 2014-01-23
=====================

Additions:
 + Made engine IE compliant
 + Light cookies
 + More post effects: blur, hatch, HSV, noise
 + Added refraction to übershader
 + World fitted terrain script
 + Movement component
 + New shape: Cone
 + Systems can now be prioritized
 + Support for cloning entities with animations
 + Entities may preserve their world coordinates when attached/detached from a parent entity
 + Components may now inject methods in their host entities - TransformComponent injects its setTranslation, addTranslation, lookAt, setRotation, setScale, attachChild and detachChild
 + Correct handling of device pixel ratio
 + Automatic rescaling of RenderTargets for post effects when window scales
 + Added camera aspect ratio locking
 + Various fixes and performance improvements

Experimental additions:
 + Logic System
 + Beta support for AmmoComponent to add realistic physical behavior to entities
 + World has `add` method for adding entities/managers/systems and registering components
 + Entity has `set` method for adding/or modifying data supported by registered components

Changes:
 * Bounding boxes are now the default bounding volumes
 * Methods in Entity and World that did not return anything now return themselves to allow chaining
 * Tweaked default parameters of Lights, Camera and .lookAt

Deprecated:
 - EntityUtils.createTypicalEntity(); use world.createEntity() instead


v0.6.0 --- 2013-11-06
=====================

Added:
 + Fog
 + Global ambient
 + Opacity discard
 + Separate specularity
 + EntityUtils.hide / show
 + Handling of dual transparency
 + Support for custom start time and end time in animation clips
 + New texture mapping for the cylinder
 + Added Hammer touch support to OrbitNPan control script

Fixes:
 * Various

Removals:
 - Removed unused/underused/undocumented classes


v0.5.0 --- 2013-09-23
=====================

Additions:
 + Shadows for more than one light
 + Anisotropic filtering
 + Bus - a message bus with hierarchical channels
 + Texture offset/repeat handling for Ã¼bershader
 + More texture settings (premultiplyAlpha, unpackAlignment)
 + More visual tests
 + More API-documentation

Experimental additions:
 + Software occlusion culling
 + Nested, layered, event driven state machine system

Fixes:
 * Marker system now displays both bounding boxes and bounding spheres
 * Fixed a background flickering bug
 * Fixed bugs in the light debug mesh
 * Fixed numerous other bugs
